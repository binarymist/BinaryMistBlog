<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>dev-ops | BinaryMist</title>
    <link>https://binarymist.io/tags/dev-ops/</link>
      <atom:link href="https://binarymist.io/tags/dev-ops/index.xml" rel="self" type="application/rss+xml" />
    <description>dev-ops</description>
    <generator>Wowchemy (https://wowchemy.com)</generator><language>en-us</language><copyright>© 2018 BinaryMist Ltd</copyright><lastBuildDate>Wed, 16 Feb 2022 09:00:00 +1300</lastBuildDate>
    <image>
      <url>https://binarymist.io/media/sharing.png</url>
      <title>dev-ops</title>
      <link>https://binarymist.io/tags/dev-ops/</link>
    </image>
    
    <item>
      <title>Workshop - Automated Security Regression Testing for Web Apps and APIs with OWASP PurpleTeam</title>
      <link>https://binarymist.io/event/2022-02-16-owaspnzday-workshop-automated-security-regression-testing-for-web-apps-and-apis-with-owasp-purpleteam/</link>
      <pubDate>Wed, 16 Feb 2022 09:00:00 +1300</pubDate>
      <guid>https://binarymist.io/event/2022-02-16-owaspnzday-workshop-automated-security-regression-testing-for-web-apps-and-apis-with-owasp-purpleteam/</guid>
      <description>













&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;
        &lt;img alt=&#34;&#34; srcset=&#34;
               /media/talk/2018-owasp-workshop_hueab7eabba00abaf3020ee9e481c2300a_62741_7b34461d5d3c9543edf0c0752ad0643e.jpg 400w,
               /media/talk/2018-owasp-workshop_hueab7eabba00abaf3020ee9e481c2300a_62741_d9f549802d1b9e9ad699bd3863fcf3e6.jpg 760w,
               /media/talk/2018-owasp-workshop_hueab7eabba00abaf3020ee9e481c2300a_62741_1200x1200_fit_q90_lanczos.jpg 1200w&#34;
               src=&#34;https://binarymist.io/media/talk/2018-owasp-workshop_hueab7eabba00abaf3020ee9e481c2300a_62741_7b34461d5d3c9543edf0c0752ad0643e.jpg&#34;
               width=&#34;720&#34;
               height=&#34;462&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;p&gt;OWASP PurpleTeam is a Developer focussed security regression testing CLI (front-end) and SaaS (back-end) that targets Web Applications and APIs. It&amp;rsquo;s sweet spot is sitting in build-pipelines.
The CLI and SaaS can be run from any Linux platform.
PurpleTeam can be run in &lt;a href=&#34;https://github.com/purpleteam-labs/purpleteam#ui&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;UI mode with a pretty CUI or headless&lt;/a&gt;, informing the Build User in real-time of the testing effort that is taking place in the back-end as the &lt;a href=&#34;https://purpleteam-labs.com/doc/definitions/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Tester Emissaries&lt;/a&gt; security test your system under test (SUT).
UI mode is great for getting started so you can see what&amp;rsquo;s happening in real-time.
Headless mode has been designed to be run from your CI, nightly-build pipe-lines.
The two modes are easily switchable.&lt;/p&gt;
&lt;p&gt;In this workshop (time permitting) you will set-up the &lt;a href=&#34;https://purpleteam-labs.com/doc/local/set-up/#purpleteam-local-architecture&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;back-end components&lt;/a&gt;, install and configure the &lt;a href=&#34;https://github.com/purpleteam-labs/purpleteam&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CLI&lt;/a&gt;, create your &lt;a href=&#34;https://purpleteam-labs.com/doc/jobfile/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;em&gt;Job&lt;/em&gt;&lt;/a&gt; file which specifies how to find and test your target system under test (SUT).&lt;/p&gt;
&lt;p&gt;No actual tests need to be written. PurpleTeam is smart enough to know how to test your Web Apps and APIs.&lt;/p&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    You can work alone or within a team (ideally with engineers from your daily work-place). As well as the satisfaction of having your web app or API being under security regression testing, there will also be prizes for the individual or team that gets OWASP PurpleTeam up and running testing their BYO SUT (web app or API).
  &lt;/div&gt;
&lt;/div&gt;
&lt;h2 id=&#34;what-you-need-up-front&#34;&gt;What you need up-front&lt;/h2&gt;
&lt;p&gt;A decent night sleep before. There is a lot to get done in this short period of time!&lt;/p&gt;
&lt;p&gt;You will need either a Web Application or API, either reachable from the Internet or locally within a Docker container that you can put into a docker-compose file in the same Docker network as PurpleTeam &lt;code&gt;local&lt;/code&gt;, or on the day you can spin up an instance of NodeGoat (or something else as a local Docker container to join the local PurpleTeam docker network). If you decide to use NodeGoat we will provide a docker-compose override file.&lt;/p&gt;
&lt;p&gt;If you intend on targeting an application or API on the Internet, you will need to prove you own or are responsible for it, this is non negotiable. You can do this by adding a DNS TXT record &amp;ldquo;PurpleTeam_SUT&amp;rdquo; or by adding the same text to the source of your app or API.&lt;/p&gt;
&lt;h2 id=&#34;things-that-you-should-try-and-do-andor-have-set-up-before-the-workshop&#34;&gt;Things that you should try and do and/or have set-up before the workshop&lt;/h2&gt;
&lt;p&gt;These items are just time consuming to set-up and are not specifically PurpleTeam related, so you really should try and have these set-up before the workshop:&lt;/p&gt;
&lt;p&gt;Work through the &lt;a href=&#34;https://purpleteam-labs.com/doc/local/set-up/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;local documentation&lt;/a&gt; and the README files of each project, so you are at least familiar with what the steps are going to be. The more you get done before the workshop the more likely you will be to have PurpleTeam security regression testing your target Web app or API by the end of the workshop. You will need the following:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A Linux laptop or Linux OS&lt;/li&gt;
&lt;li&gt;Docker and docker-compose installed&lt;/li&gt;
&lt;li&gt;Either a SUT (Web app or API) on the Internet to target or a local Web app or API in a Docker container that can be added to the PurpleTeam docker network (usually via docker-compose file override)&lt;/li&gt;
&lt;li&gt;Git (you will be cloning or forking PurpleTeam repos)&lt;/li&gt;
&lt;li&gt;An AWS user with CLI access, policy, credentials configured, AWS CLI, aws-sam-cli installed and configured as per the &lt;a href=&#34;https://github.com/purpleteam-labs/purpleteam-lambda&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;purpleteam-lambda README&lt;/a&gt;. We don&amp;rsquo;t need to access AWS with the &lt;code&gt;local&lt;/code&gt; environment, but you need to have the user set-up as per the README&lt;/li&gt;
&lt;li&gt;(Optional) Recommend having a copy of Zap GUI ready to run on your desktop, using Zap desktop to work through some of the steps that PurpleTeam does, just makes it easier to debug and understand what PurpleTeam is doing&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>PurpleTeam License Change</title>
      <link>https://binarymist.io/blog/2021/12/20/purpleteam-license-change/</link>
      <pubDate>Mon, 20 Dec 2021 10:00:00 +1300</pubDate>
      <guid>https://binarymist.io/blog/2021/12/20/purpleteam-license-change/</guid>
      <description>&lt;p&gt;To start with the:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;PurpleTeam &lt;code&gt;local&lt;/code&gt; environment (AKA: OWASP PurpleTeam) was licensed with the AGPL-3.0&lt;/li&gt;
&lt;li&gt;PurpleTeam &lt;code&gt;cloud&lt;/code&gt; environment (AKL: BinaryMist PurpleTeam) was licensed with a proprietary (non-free) license&lt;/li&gt;
&lt;li&gt;Projects that are not part of PurpleTeam &lt;code&gt;local&lt;/code&gt; or &lt;code&gt;cloud&lt;/code&gt; environments, but are ancillary to PurpleTeam and may or may not be within the &lt;a href=&#34;https://github.com/purpleteam-labs&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;purpleteam-labs Github organisation&lt;/a&gt;. These may be license with the MIT license&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;PurpleTeam-Labs was never really happy with the AGPL-3.0 as it didn&amp;rsquo;t really convey our intentions well. Recently we heard about the Business Source License (BSL). MariaDB, CockroachDB and Redpanda pioneered the BSL, and we thank you for creating this license. When we looked into it it actually did convey our intentions well, which are to deter other security testing service provides (DAST, SAST and IAST)(specifically offering a SaaS) from taking our work and using it in direct competition with PurpleTeam-Labs.
For the majority of PurpleTeam consumers the BSL that we&amp;rsquo;ve applied to the PurpleTeam &lt;code&gt;local&lt;/code&gt; repositories will not limit your free usage of PurpleTeam &lt;code&gt;local&lt;/code&gt; at all. We have always wanted PurpleTeam &lt;code&gt;local&lt;/code&gt; to be available to Developers, DevOps Engineers, their teams, and others willing to set-up the &lt;code&gt;local&lt;/code&gt; components to be able to use freely in-house providing it&amp;rsquo;s not being used as a service in competition with PurpleTeam-Labs.&lt;/p&gt;
&lt;p&gt;For PurpleTeam &lt;code&gt;cloud&lt;/code&gt;, the license (PurpleTeam Cloud License (PCL)) is basically the same as it was before. We&amp;rsquo;ve just made it clearer and more accessible.&lt;/p&gt;
&lt;p&gt;For the projects ancillary to PurpleTeam their licenses haven’t changed.&lt;/p&gt;
&lt;p&gt;The licenses are available in each source code repository at &lt;a href=&#34;https://github.com/purpleteam-labs&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Github&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Talk - Purple Teaming with OWASP purpleteam</title>
      <link>https://binarymist.io/event/2021-11-12-purple-teaming-with-purpleteam-owasp-global-appsec-us/</link>
      <pubDate>Fri, 12 Nov 2021 12:00:00 +1300</pubDate>
      <guid>https://binarymist.io/event/2021-11-12-purple-teaming-with-purpleteam-owasp-global-appsec-us/</guid>
      <description>&lt;p&gt;Kim will briefly discuss the three year journey that has brought purpleteam from a proof of concept (PoC) to where it is now.&lt;/p&gt;
&lt;p&gt;An overview of the NodeJS micro-services with a pluggable tester architecture will be provided.&lt;/p&gt;

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/ACuaP-ZToKw&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;h3 id=&#34;why-would-i-want-it-in-my-build-pipelines&#34;&gt;Why would I want it in my build pipelines?&lt;/h3&gt;
&lt;p&gt;In this section Kim will discus the problem that purpleteam solves,
along with the cost savings of finding and fixing your application security defects early (as you&amp;rsquo;re introducing them) as opposed to late (weeks months later with external penetration testing) or not at all.&lt;/p&gt;
&lt;!-- uncomment below when available --&gt;
&lt;!-- &lt;br&gt;

&lt;script async class=&#34;speakerdeck-embed&#34; data-id=&#34;1784d6fdfc3d4fab8ec5a67156387bf3&#34; data-ratio=&#34;1.37081659973226&#34; src=&#34;//speakerdeck.com/assets/embed.js&#34;&gt;&lt;/script&gt;

&lt;br&gt;--&gt;
&lt;h3 id=&#34;ok-i-want-it-how-do-i-set-it-up&#34;&gt;OK, I want it, how do I set it up?&lt;/h3&gt;
&lt;p&gt;Kim will walk you through all of the components and how to get them set-up and configured&lt;/p&gt;
&lt;h3 id=&#34;great-but-what-do-the-work-flows-look-like&#34;&gt;Great, but what do the work flows look like?&lt;/h3&gt;
&lt;p&gt;Let&amp;rsquo;s walk through the different ways purpleteam can be run and utilised, such as:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Running purpleteam standalone (with UI)&lt;/li&gt;
&lt;li&gt;Running purpleteam from within your pipelines as a spawned sub process (headless: without UI)&lt;/li&gt;
&lt;li&gt;Running all of the purpleteam components, including debugging each and every one of them if and when the need arises&lt;/li&gt;
&lt;/ul&gt;
&lt;br&gt;
</description>
    </item>
    
    <item>
      <title>Talk - Dev Team Security: Back to the Future</title>
      <link>https://binarymist.io/event/2021-11-05-dev-team-security-back-to-the-future/</link>
      <pubDate>Fri, 05 Nov 2021 15:00:00 +1300</pubDate>
      <guid>https://binarymist.io/event/2021-11-05-dev-team-security-back-to-the-future/</guid>
      <description>&lt;p&gt;There have been significant improvements in the information and tooling available recently, some new standards are emerging and starting to reflect this also.&lt;/p&gt;

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/XqvK4C8pgz0&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;br&gt;
&lt;p&gt;In this talk Kim will: Revisit the past, what we as development teams had in our info-sec arsenal,
how confusing it was and how much manual work we were expected to do to measure up.
A detailed look at what we have today, and what the future looks like as a software development team with security as a priority.&lt;/p&gt;
&lt;!-- uncomment below when available --&gt;
&lt;!-- &lt;br&gt;

&lt;script async class=&#34;speakerdeck-embed&#34; data-id=&#34;1784d6fdfc3d4fab8ec5a67156387bf3&#34; data-ratio=&#34;1.37081659973226&#34; src=&#34;//speakerdeck.com/assets/embed.js&#34;&gt;&lt;/script&gt;

&lt;br&gt;--&gt;
</description>
    </item>
    
    <item>
      <title>Talk - Purple Teaming with OWASP purpleteam</title>
      <link>https://binarymist.io/event/2021-10-29-purple-teaming-with-purpleteam-all-day-dev-ops/</link>
      <pubDate>Fri, 29 Oct 2021 16:00:00 +1300</pubDate>
      <guid>https://binarymist.io/event/2021-10-29-purple-teaming-with-purpleteam-all-day-dev-ops/</guid>
      <description>&lt;p&gt;Kim will briefly discuss the three year journey that has brought purpleteam from a proof of concept (PoC) to where it is now.&lt;/p&gt;
&lt;p&gt;An overview of the NodeJS micro-services with a pluggable tester architecture will be provided.&lt;/p&gt;














&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;
        &lt;img alt=&#34;Kim Carter&#34; srcset=&#34;
               /event/2021-10-29-purple-teaming-with-purpleteam-all-day-dev-ops/KimCarter-Horizontal720w-min_hu5482ebd621a46d8dd9b0b02a558b943f_138466_0b6a8327f54049241c4a1807f6805214.png 400w,
               /event/2021-10-29-purple-teaming-with-purpleteam-all-day-dev-ops/KimCarter-Horizontal720w-min_hu5482ebd621a46d8dd9b0b02a558b943f_138466_ad8874fbe9103a7db7faf1f9037eb7c7.png 760w,
               /event/2021-10-29-purple-teaming-with-purpleteam-all-day-dev-ops/KimCarter-Horizontal720w-min_hu5482ebd621a46d8dd9b0b02a558b943f_138466_1200x1200_fit_lanczos_2.png 1200w&#34;
               src=&#34;https://binarymist.io/event/2021-10-29-purple-teaming-with-purpleteam-all-day-dev-ops/KimCarter-Horizontal720w-min_hu5482ebd621a46d8dd9b0b02a558b943f_138466_0b6a8327f54049241c4a1807f6805214.png&#34;
               width=&#34;720&#34;
               height=&#34;405&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;h3 id=&#34;why-would-i-want-it-in-my-build-pipelines&#34;&gt;Why would I want it in my build pipelines?&lt;/h3&gt;
&lt;p&gt;In this section Kim will discus the problem that purpleteam solves,
along with the cost savings of finding and fixing your application security defects early (as you&amp;rsquo;re introducing them) as opposed to late (weeks months later with external penetration testing) or not at all.&lt;/p&gt;
&lt;!-- uncomment below when available --&gt;
&lt;!-- &lt;br&gt;

&lt;script async class=&#34;speakerdeck-embed&#34; data-id=&#34;1784d6fdfc3d4fab8ec5a67156387bf3&#34; data-ratio=&#34;1.37081659973226&#34; src=&#34;//speakerdeck.com/assets/embed.js&#34;&gt;&lt;/script&gt;

&lt;br&gt;--&gt;
&lt;h3 id=&#34;ok-i-want-it-how-do-i-set-it-up&#34;&gt;OK, I want it, how do I set it up?&lt;/h3&gt;
&lt;p&gt;Kim will walk you through all of the components and how to get them set-up and configured&lt;/p&gt;
&lt;h3 id=&#34;great-but-what-do-the-work-flows-look-like&#34;&gt;Great, but what do the work flows look like?&lt;/h3&gt;
&lt;br&gt;

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/ACuaP-ZToKw&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;br&gt;
&lt;p&gt;Let&amp;rsquo;s walk through the different ways purpleteam can be run and utilised, such as:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Running purpleteam standalone (with UI)&lt;/li&gt;
&lt;li&gt;Running purpleteam from within your pipelines as a spawned sub process (headless: without UI)&lt;/li&gt;
&lt;li&gt;Running all of the purpleteam components, including debugging each and every one of them if and when the need arises&lt;/li&gt;
&lt;/ul&gt;
&lt;br&gt;
</description>
    </item>
    
    <item>
      <title>Talk - Purple Teaming with OWASP purpleteam</title>
      <link>https://binarymist.io/event/2021-10-27-purple-teaming-with-purpleteam-chch-js/</link>
      <pubDate>Wed, 27 Oct 2021 17:30:00 +1300</pubDate>
      <guid>https://binarymist.io/event/2021-10-27-purple-teaming-with-purpleteam-chch-js/</guid>
      <description>&lt;p&gt;Kim will briefly discuss the three year journey that has brought purpleteam from a proof of concept (PoC) to where it is now.&lt;/p&gt;
&lt;p&gt;An overview of the NodeJS micro-services with a pluggable tester architecture will be provided.&lt;/p&gt;

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/ACuaP-ZToKw&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;h3 id=&#34;why-would-i-want-it-in-my-build-pipelines&#34;&gt;Why would I want it in my build pipelines?&lt;/h3&gt;
&lt;p&gt;In this section Kim will discus the problem that purpleteam solves,
along with the cost savings of finding and fixing your application security defects early (as you&amp;rsquo;re introducing them) as opposed to late (weeks months later with external penetration testing) or not at all.&lt;/p&gt;
&lt;!-- uncomment below when available --&gt;
&lt;!-- &lt;br&gt;

&lt;script async class=&#34;speakerdeck-embed&#34; data-id=&#34;1784d6fdfc3d4fab8ec5a67156387bf3&#34; data-ratio=&#34;1.37081659973226&#34; src=&#34;//speakerdeck.com/assets/embed.js&#34;&gt;&lt;/script&gt;

&lt;br&gt;--&gt;
&lt;h3 id=&#34;ok-i-want-it-how-do-i-set-it-up&#34;&gt;OK, I want it, how do I set it up?&lt;/h3&gt;
&lt;p&gt;Kim will walk you through all of the components and how to get them set-up and configured&lt;/p&gt;
&lt;h3 id=&#34;great-but-what-do-the-work-flows-look-like&#34;&gt;Great, but what do the work flows look like?&lt;/h3&gt;
&lt;p&gt;Let&amp;rsquo;s walk through the different ways purpleteam can be run and utilised, such as:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Running purpleteam standalone (with UI)&lt;/li&gt;
&lt;li&gt;Running purpleteam from within your pipelines as a spawned sub process (headless: without UI)&lt;/li&gt;
&lt;li&gt;Running all of the purpleteam components, including debugging each and every one of them if and when the need arises&lt;/li&gt;
&lt;/ul&gt;
&lt;br&gt;
</description>
    </item>
    
    <item>
      <title>Talk - Purple Teaming with OWASP purpleteam</title>
      <link>https://binarymist.io/event/2021-purple-teaming-with-purpleteam-owasp-20th-anniversary/</link>
      <pubDate>Fri, 24 Sep 2021 14:25:00 +1200</pubDate>
      <guid>https://binarymist.io/event/2021-purple-teaming-with-purpleteam-owasp-20th-anniversary/</guid>
      <description>&lt;p&gt;Kim will briefly discuss the three year journey that has brought purpleteam from a proof of concept (PoC) to where it is now.&lt;/p&gt;
&lt;p&gt;An overview of the NodeJS micro-services with a pluggable tester architecture will be provided.&lt;/p&gt;














&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;
        &lt;img alt=&#34;Kim Carter&#34; srcset=&#34;
               /event/2021-purple-teaming-with-purpleteam-owasp-20th-anniversary/20th_Twitter_Speaker_Post_Kim%20Carter_720W-min_hu8ffa2922a64b28014bab8151110880be_39970_4165377ca94114d5c9c68c0fa37eee8c.jpg 400w,
               /event/2021-purple-teaming-with-purpleteam-owasp-20th-anniversary/20th_Twitter_Speaker_Post_Kim%20Carter_720W-min_hu8ffa2922a64b28014bab8151110880be_39970_a3f883836420a29e63291fe1163761ff.jpg 760w,
               /event/2021-purple-teaming-with-purpleteam-owasp-20th-anniversary/20th_Twitter_Speaker_Post_Kim%20Carter_720W-min_hu8ffa2922a64b28014bab8151110880be_39970_1200x1200_fit_q90_lanczos.jpg 1200w&#34;
               src=&#34;https://binarymist.io/event/2021-purple-teaming-with-purpleteam-owasp-20th-anniversary/20th_Twitter_Speaker_Post_Kim%20Carter_720W-min_hu8ffa2922a64b28014bab8151110880be_39970_4165377ca94114d5c9c68c0fa37eee8c.jpg&#34;
               width=&#34;720&#34;
               height=&#34;405&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;h3 id=&#34;why-would-i-want-it-in-my-build-pipelines&#34;&gt;Why would I want it in my build pipelines?&lt;/h3&gt;
&lt;p&gt;In this section Kim will discus the problem that purpleteam solves,
along with the cost savings of finding and fixing your application security defects early (as you&amp;rsquo;re introducing them) as opposed to late (weeks months later with external penetration testing) or not at all.&lt;/p&gt;
&lt;!-- uncomment below when available --&gt;
&lt;!-- &lt;br&gt;

&lt;script async class=&#34;speakerdeck-embed&#34; data-id=&#34;1784d6fdfc3d4fab8ec5a67156387bf3&#34; data-ratio=&#34;1.37081659973226&#34; src=&#34;//speakerdeck.com/assets/embed.js&#34;&gt;&lt;/script&gt;

&lt;br&gt;--&gt;
&lt;h3 id=&#34;ok-i-want-it-how-do-i-set-it-up&#34;&gt;OK, I want it, how do I set it up?&lt;/h3&gt;
&lt;p&gt;Kim will walk you through all of the components and how to get them set-up and configured&lt;/p&gt;
&lt;h3 id=&#34;great-but-what-do-the-work-flows-look-like&#34;&gt;Great, but what do the work flows look like?&lt;/h3&gt;
&lt;br&gt;

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/ACuaP-ZToKw&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;br&gt;
&lt;p&gt;Let&amp;rsquo;s walk through the different ways purpleteam can be run and utilised, such as:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Running purpleteam standalone (with UI)&lt;/li&gt;
&lt;li&gt;Running purpleteam from within your pipelines as a spawned sub process (headless: without UI)&lt;/li&gt;
&lt;li&gt;Running all of the purpleteam components, including debugging each and every one of them if and when the need arises&lt;/li&gt;
&lt;/ul&gt;
&lt;br&gt;
</description>
    </item>
    
    <item>
      <title>PurpleTeam TLS Tester Implementation</title>
      <link>https://binarymist.io/blog/2021/09/07/purpleteam-tls-tester-implementation/</link>
      <pubDate>Tue, 07 Sep 2021 17:17:11 +1300</pubDate>
      <guid>https://binarymist.io/blog/2021/09/07/purpleteam-tls-tester-implementation/</guid>
      <description>&lt;p&gt;The &lt;em&gt;PurpleTeam&lt;/em&gt; TLS &lt;em&gt;Tester&lt;/em&gt; is now implemented. I&amp;rsquo;ve written this post to highlight the learnings, and to talk about the various significant changes that were made as part of the release. All core components were released as version &lt;code&gt;1.0.0-alpha.3&lt;/code&gt;.&lt;/p&gt;

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/ACuaP-ZToKw&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;br&gt;
&lt;p&gt;The details of the above video can be found &lt;a href=&#34;https://purpleteam-labs.com/project/video-pt-full-system-run-2021/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h1 id=&#34;contents&#34;&gt;Contents&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#documentation&#34;&gt;Documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#work-items-created&#34;&gt;Work items created&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#synchronisation&#34;&gt;Synchronisation&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#time-outs&#34;&gt;Time-outs&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#cli&#34;&gt;CLI&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#for-the-test-command&#34;&gt;For the &lt;code&gt;test&lt;/code&gt; command&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#for-tester-progress--pctcomplete--bugcount--updates&#34;&gt;For &lt;code&gt;tester&lt;/code&gt;[ &lt;code&gt;Progress&lt;/code&gt; | &lt;code&gt;PctComplete&lt;/code&gt; | &lt;code&gt;BugCount&lt;/code&gt; ] updates&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#orchestrator&#34;&gt;Orchestrator&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#app-tester&#34;&gt;App Tester&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#tls-tester&#34;&gt;Tls Tester&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#message-flows&#34;&gt;Message flows&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#tls-tester-implementation&#34;&gt;TLS Tester Implementation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;All of the release notes can be accessed from the &lt;em&gt;PurpleTeam&lt;/em&gt; &lt;a href=&#34;https://purpleteam-labs.com/doc/changelog/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Changelog&lt;/a&gt; page and/or the &lt;a href=&#34;https://github.com/purpleteam-labs/purpleteam/issues/60&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Github issue&lt;/a&gt;.&lt;/p&gt;
&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;Massive set of releases just gone live around the new &lt;a href=&#34;https://twitter.com/hashtag/SSL?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#SSL&lt;/a&gt; &lt;a href=&#34;https://twitter.com/hashtag/TLS?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#TLS&lt;/a&gt; &lt;a href=&#34;https://twitter.com/hashtag/Tester?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#Tester&lt;/a&gt; &lt;a href=&#34;https://t.co/f0bPNRBjUh&#34;&gt;https://t.co/f0bPNRBjUh&lt;/a&gt;&lt;/p&gt;&amp;mdash; PurpleTeam (@purpleteamlabs) &lt;a href=&#34;https://twitter.com/purpleteamlabs/status/1433018222412910595?ref_src=twsrc%5Etfw&#34;&gt;September 1, 2021&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;

&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    &lt;p&gt;Updated a number of values around timeouts on 2021-12-09. Source of Pull Requests:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/purpleteam-labs/purpleteam/pull/105&#34;&gt;https://github.com/purpleteam-labs/purpleteam/pull/105&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/purpleteam-labs/purpleteam-orchestrator/pull/28&#34;&gt;https://github.com/purpleteam-labs/purpleteam-orchestrator/pull/28&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/purpleteam-labs/purpleteam-app-scanner/pull/34&#34;&gt;https://github.com/purpleteam-labs/purpleteam-app-scanner/pull/34&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;h1 id=&#34;documentation&#34;&gt;Documentation&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;The &lt;a href=&#34;https://purpleteam-labs.com/doc/definitions/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Definitions&lt;/a&gt; were updated&lt;/li&gt;
&lt;li&gt;The &lt;a href=&#34;https://purpleteam-labs.com/doc/log-and-outcomes-files/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Log and Outcomes files&lt;/a&gt; page was created, providing details of the &lt;em&gt;Outcomes&lt;/em&gt; archive, what&amp;rsquo;s in it and how to read specific files. You can also &lt;a href=&#34;https://www.youtube.com/watch?v=nJNAbGLCGNY&amp;amp;t=346s&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;see the contents&lt;/a&gt; of the &lt;em&gt;Outcomes&lt;/em&gt; archive for &lt;a href=&#34;https://github.com/purpleteam-labs/purpleteam/blob/main/testResources/jobs/job_1.0.0-alpha.3_local&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;this &lt;em&gt;Job&lt;/em&gt; file&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;The main architecture diagrams for &lt;a href=&#34;https://purpleteam-labs.com/doc/cloud/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;cloud&lt;/code&gt;&lt;/a&gt; and &lt;a href=&#34;https://purpleteam-labs.com/doc/local/set-up/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;local&lt;/code&gt;&lt;/a&gt; have been updated&lt;/li&gt;
&lt;li&gt;The &lt;em&gt;Job&lt;/em&gt; file schema has been &lt;a href=&#34;https://purpleteam-labs.com/doc/job-file/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;documented&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;A &lt;a href=&#34;https://purpleteam-labs.com/doc/faq/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;FAQ&lt;/a&gt; page was created&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://purpleteam-labs.com/doc/local/set-up/#tls-scanner&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Setting up&lt;/a&gt; the Tls Tester, although this is trivial&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://purpleteam-labs.com/doc/local/workflow/#other-testers&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Debugging the Tls Tester&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;work-items-created&#34;&gt;Work items created&lt;/h1&gt;
&lt;p&gt;As a result of the Tls Tester Implementation&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/purpleteam-labs/purpleteam/issues/87&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Re-work orchestrator.js&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/purpleteam-labs/purpleteam/issues/88&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Create Tester reset for &amp;ldquo;Tester failure:&amp;rdquo; occurrances&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/purpleteam-labs/purpleteam/issues/89&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Improve orchestrator Tester model error handling&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/purpleteam-labs/purpleteam/issues/90&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Re-work App and Tls Tester models&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/purpleteam-labs/purpleteam/issues/91&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Re-work Dockerfiles&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/purpleteam-labs/purpleteam/issues/92&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Extract common code into package&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/purpleteam-labs/purpleteam/issues/93&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Blog post on the TLS Scanner&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;synchronisation&#34;&gt;Synchronisation&lt;/h1&gt;
&lt;p&gt;There ended up being quite a bit of work done around synchronisation of the components, and there is still work to be done. There were architectural decisions made several years ago that needed some modification, and as you can see from the &lt;a href=&#34;#work-items-created&#34;&gt;Work items created&lt;/a&gt; there is ongoing work that needs to be done.&lt;/p&gt;
&lt;p&gt;For example I discovered near the end of the implementation another edge-case around state of a given &lt;em&gt;Tester&lt;/em&gt; being incorrect if a different &lt;em&gt;Tester&lt;/em&gt; is in a &lt;code&gt;Tester failure:&lt;/code&gt; state.
You can read about the issue &lt;a href=&#34;https://github.com/purpleteam-labs/purpleteam/issues/88&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;here&lt;/a&gt;. We will be addressing this one soon.&lt;/p&gt;
&lt;p&gt;Then there is this &lt;a href=&#34;https://github.com/purpleteam-labs/purpleteam/issues/89&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;lack of retry issue&lt;/a&gt; in the &lt;em&gt;orchestrator&lt;/em&gt; &lt;em&gt;Tester&lt;/em&gt; models which was found near the end of the TLS implementation work also, which probably won&amp;rsquo;t occur very often at all (we have never witnessed it), but it still needs to be fixed.&lt;/p&gt;
&lt;mark&gt;Before we get started discussing the synchronisation of components, you will need some understanding of the various relevant time-outs in the code base.&lt;/mark&gt;
&lt;h2 id=&#34;time-outs&#34;&gt;Time-outs&lt;/h2&gt;
&lt;p&gt;Many of the time-out issues with AWS just don&amp;rsquo;t exist when running &lt;code&gt;local&lt;/code&gt;ly. AWS Api Gateway does not support streaming, so we need to use long polling (&lt;code&gt;lp&lt;/code&gt;) between the CLI and the &lt;em&gt;orchestrator&lt;/em&gt; in the &lt;code&gt;cloud&lt;/code&gt; environment.&lt;/p&gt;
&lt;h3 id=&#34;cli&#34;&gt;CLI&lt;/h3&gt;
&lt;h4 id=&#34;for-the-test-command&#34;&gt;For the &lt;code&gt;test&lt;/code&gt; command&lt;/h4&gt;
&lt;p&gt;The initial request to the &lt;em&gt;orchestrator&lt;/em&gt; for the &lt;code&gt;test&lt;/code&gt; command has a set of timeouts, but it must stop trying before the back-end fails due to:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Stage Two containers not being up and responsive within the currently &lt;code&gt;200000&lt;/code&gt; (&lt;code&gt;s2containers.serviceDiscoveryServiceInstances.timeoutToBeAvailable&lt;/code&gt;) + &lt;code&gt;120000&lt;/code&gt; (&lt;code&gt;s2containers.responsive.timeout&lt;/code&gt;) duration&lt;/li&gt;
&lt;li&gt;The Stage Two container service discovery services not being up and responsive within the same duration as above&lt;/li&gt;
&lt;/ul&gt;
&lt;div id=&#34;cli_continues_to_retry&#34;&gt;&lt;/div&gt;
&lt;p&gt;If the CLI continues to retry after a back-end timeout, then it may continue to do so indefinitely if unsupervised, as is likely if being used in &lt;a href=&#34;https://github.com/purpleteam-labs/purpleteam#ui&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;noUi&lt;/code&gt; mode&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The &lt;a href=&#34;https://github.com/purpleteam-labs/purpleteam/blob/0a054e46d02bfbd561f8b2797e86a9d16df484d3/src/presenter/apiDecoratingAdapter.js#L215&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;time-out series&lt;/a&gt; for the &lt;code&gt;test&lt;/code&gt; command currently looks like the following for the &lt;code&gt;cloud&lt;/code&gt; environment. The CLI doesn&amp;rsquo;t timeout at all for &lt;code&gt;local&lt;/code&gt;:&lt;/p&gt;
&lt;p&gt;Tries:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;23000,&lt;/li&gt;
&lt;li&gt;23000,&lt;/li&gt;
&lt;li&gt;23000,&lt;/li&gt;
&lt;li&gt;23000,&lt;/li&gt;
&lt;li&gt;23000,&lt;/li&gt;
&lt;li&gt;23000,&lt;/li&gt;
&lt;li&gt;23000,&lt;/li&gt;
&lt;li&gt;23000,&lt;/li&gt;
&lt;li&gt;23000,&lt;/li&gt;
&lt;li&gt;23000,&lt;/li&gt;
&lt;li&gt;23000,&lt;/li&gt;
&lt;li&gt;23000,&lt;/li&gt;
&lt;li&gt;23000,&lt;/li&gt;
&lt;li&gt;14000,&lt;/li&gt;
&lt;li&gt;0 // Cancel&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;This adds up to 313000 + some request and response latency, a little (7 seconds) short of 320000 + some comms latency in the AWS machine.&lt;/p&gt;
&lt;h4 id=&#34;for-tester-progress--pctcomplete--bugcount--updates&#34;&gt;For &lt;code&gt;tester&lt;/code&gt;[ &lt;code&gt;Progress&lt;/code&gt; | &lt;code&gt;PctComplete&lt;/code&gt; | &lt;code&gt;BugCount&lt;/code&gt; ] updates&lt;/h4&gt;
&lt;p&gt;Five long-poll request attempts with no data returned from the &lt;em&gt;orchestrator&lt;/em&gt; and the CLI gives up.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// ...,
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;testerFeedbackComms&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; {
  &lt;span style=&#34;color:#a6e22e&#34;&gt;longPoll&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; {
    &lt;span style=&#34;color:#a6e22e&#34;&gt;nullProgressMaxRetries&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; {
      &lt;span style=&#34;color:#a6e22e&#34;&gt;doc&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;The number of times (sequentially receiving an event with a data object containing a property with a null value) to poll the backend when the orchestrator is not receiving feedback from the testers.&amp;#39;&lt;/span&gt;,
      &lt;span style=&#34;color:#a6e22e&#34;&gt;format&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;int&amp;#39;&lt;/span&gt;,
      &lt;span style=&#34;color:#66d9ef&#34;&gt;default&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;
    }
  }
},
&lt;span style=&#34;color:#75715e&#34;&gt;// ...
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;orchestrator&#34;&gt;Orchestrator&lt;/h3&gt;
&lt;p&gt;The following is used in the &lt;code&gt;testerWatcher&lt;/code&gt; and needs to be well under the AWS API Gateway timeout which is 30 seconds:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// ...,
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;testerFeedbackComms&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; {
  &lt;span style=&#34;color:#75715e&#34;&gt;// ...,
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;longPoll&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; {
    &lt;span style=&#34;color:#a6e22e&#34;&gt;timeout&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; {
      &lt;span style=&#34;color:#a6e22e&#34;&gt;doc&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;A double that expresses seconds to wait for blocking Redis commands. We need to timeout well before the AWS Api Gateway timeout.&amp;#39;&lt;/span&gt;,
      &lt;span style=&#34;color:#a6e22e&#34;&gt;format&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; Number,
      &lt;span style=&#34;color:#66d9ef&#34;&gt;default&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;20.0&lt;/span&gt;
    }
  }
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;app-tester&#34;&gt;App Tester&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// ...,
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;s2Containers&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; {
  &lt;span style=&#34;color:#a6e22e&#34;&gt;serviceDiscoveryServiceInstances&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; {
    &lt;span style=&#34;color:#a6e22e&#34;&gt;timeoutToBeAvailable&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; {
      &lt;span style=&#34;color:#a6e22e&#34;&gt;doc&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;The duration in milliseconds before giving up on waiting for the s2 Service Discovery Service Instances to be available.&amp;#39;&lt;/span&gt;,
      &lt;span style=&#34;color:#a6e22e&#34;&gt;format&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;duration&amp;#39;&lt;/span&gt;,
&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;      &lt;span style=&#34;color:#66d9ef&#34;&gt;default&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;200000&lt;/span&gt;
&lt;/span&gt;    },
    &lt;span style=&#34;color:#a6e22e&#34;&gt;retryIntervalToBeAvailable&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; {
      &lt;span style=&#34;color:#a6e22e&#34;&gt;doc&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;The retry interval in milliseconds for the s2 Service Discovery Service Instances to be available.&amp;#39;&lt;/span&gt;,
      &lt;span style=&#34;color:#a6e22e&#34;&gt;format&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;duration&amp;#39;&lt;/span&gt;,
      &lt;span style=&#34;color:#66d9ef&#34;&gt;default&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;5000&lt;/span&gt;
    }
  },
  &lt;span style=&#34;color:#a6e22e&#34;&gt;responsive&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; {
    &lt;span style=&#34;color:#a6e22e&#34;&gt;timeout&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; {
      &lt;span style=&#34;color:#a6e22e&#34;&gt;doc&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;The duration in milliseconds before giving up on waiting for the s2 containers to be responsive.&amp;#39;&lt;/span&gt;,
      &lt;span style=&#34;color:#a6e22e&#34;&gt;format&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;duration&amp;#39;&lt;/span&gt;,
&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;      &lt;span style=&#34;color:#66d9ef&#34;&gt;default&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;120000&lt;/span&gt;
&lt;/span&gt;    },
    &lt;span style=&#34;color:#a6e22e&#34;&gt;retryInterval&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; {
      &lt;span style=&#34;color:#a6e22e&#34;&gt;doc&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;The retry interval in milliseconds for the s2 containers to be responsive.&amp;#39;&lt;/span&gt;,
      &lt;span style=&#34;color:#a6e22e&#34;&gt;format&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;duration&amp;#39;&lt;/span&gt;,
      &lt;span style=&#34;color:#66d9ef&#34;&gt;default&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;10000&lt;/span&gt;
    }
  }
},
&lt;span style=&#34;color:#75715e&#34;&gt;// ...
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;code&gt;emissary.apiFeedbackSpeed&lt;/code&gt; is used to send the CLI the following message types: &lt;code&gt;testerProgress&lt;/code&gt;, &lt;code&gt;testerPctComplete&lt;/code&gt; and &lt;code&gt;testerBugCount&lt;/code&gt;, thus keeping the &lt;code&gt;lp&lt;/code&gt; alive. This duration needs to be less than the &lt;em&gt;orchestrator&amp;rsquo;s&lt;/em&gt; &lt;code&gt;20&lt;/code&gt; second &lt;code&gt;testerFeedbackComms.longPoll.timeout&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;emissary&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; {
  &lt;span style=&#34;color:#75715e&#34;&gt;// ...,
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;apiFeedbackSpeed&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; {
    &lt;span style=&#34;color:#a6e22e&#34;&gt;doc&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;The speed to poll the Zap API for feedback of test progress&amp;#39;&lt;/span&gt;,
    &lt;span style=&#34;color:#a6e22e&#34;&gt;format&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;duration&amp;#39;&lt;/span&gt;,
    &lt;span style=&#34;color:#66d9ef&#34;&gt;default&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;5000&lt;/span&gt;
  },
  &lt;span style=&#34;color:#75715e&#34;&gt;// ...
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;tls-tester&#34;&gt;TLS Tester&lt;/h3&gt;
&lt;p&gt;If we don&amp;rsquo;t receive any update from the TLS &lt;em&gt;Emissary&lt;/em&gt; within this duration (&lt;code&gt;messageChannelHeartBeatInterval&lt;/code&gt;) then the TLS &lt;em&gt;Tester&lt;/em&gt; sends the CLI a &lt;code&gt;testerProgress&lt;/code&gt; message with the &lt;code&gt;textData&lt;/code&gt;: &lt;code&gt;Tester is awaiting Emissary feedback...&lt;/code&gt;. This duration needs to be less than the &lt;em&gt;orchestrator&amp;rsquo;s&lt;/em&gt; &lt;code&gt;20&lt;/code&gt; second &lt;code&gt;testerFeedbackComms.longPoll.timeout&lt;/code&gt; to make sure the CLI continues to poll the &lt;em&gt;orchestrator&lt;/em&gt; for &lt;code&gt;tester[Progress|PctComplete|BugCount]&lt;/code&gt; updates.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// ...,
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;messageChannelHeartBeatInterval&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; {
  &lt;span style=&#34;color:#a6e22e&#34;&gt;doc&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;This is used to send heart beat messages every n milliseconds. Primarily to keep the orchestrator\&amp;#39;s testerWatcher longPoll timeout from being reached.&amp;#39;&lt;/span&gt;,
  &lt;span style=&#34;color:#a6e22e&#34;&gt;format&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;duration&amp;#39;&lt;/span&gt;,
  &lt;span style=&#34;color:#66d9ef&#34;&gt;default&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;15000&lt;/span&gt;
},
&lt;span style=&#34;color:#75715e&#34;&gt;// ...
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;message-flows&#34;&gt;Message flows&lt;/h2&gt;
&lt;p&gt;There are two flow types in play between the &lt;em&gt;orchestrator&lt;/em&gt; and the CLI, namely Server Sent Events (&lt;code&gt;sse&lt;/code&gt;) and Long Polling (&lt;code&gt;lp&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;&lt;mark&gt;Before reading this section dive over to the &lt;em&gt;orchestrator&lt;/em&gt; &lt;a href=&#34;https://github.com/purpleteam-labs/purpleteam-orchestrator/blob/main/README.md#configuration&#34; target=&#34;_blank&#34;&gt;README&lt;/a&gt; for a quick run-down on how &lt;em&gt;PurpleTeam&lt;/em&gt; is using &lt;code&gt;sse&lt;/code&gt; and &lt;code&gt;lp&lt;/code&gt;.&lt;/mark&gt; &lt;/p&gt;
&lt;p&gt;Before The TLS implementation, the &lt;code&gt;testerFeedbackComms.medium&lt;/code&gt; was defined in the configuration for both the &lt;em&gt;orchestrator&lt;/em&gt; and the CLI. Both configurations had to match. If they didn&amp;rsquo;t the &lt;em&gt;orchestrator&lt;/em&gt; would respond with an error message. Now this is defined in the &lt;em&gt;orchestrator&lt;/em&gt; only and the &lt;em&gt;orchestrator&lt;/em&gt; tells the CLI which medium it should use before stating either &lt;code&gt;sse&lt;/code&gt; or &lt;code&gt;lp&lt;/code&gt;.&lt;/p&gt;
&lt;br&gt;
&lt;p&gt;When the CLI runs the &lt;code&gt;test&lt;/code&gt; command, there are three significant sequential events, I&amp;rsquo;ll brush over or omit less significant events to make explaining the flow easier to understand. If you&amp;rsquo;d rather just read the code it&amp;rsquo;s &lt;a href=&#34;https://github.com/purpleteam-labs/purpleteam-orchestrator/blob/15804fe13a294d7b37b5f2758833f562298f5685/src/api/orchestration/models/orchestrate.js#L177&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;here&lt;/a&gt;:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;CLI makes a &lt;code&gt;POST&lt;/code&gt; request&lt;/strong&gt; to the &lt;em&gt;orchestrator&amp;rsquo;s&lt;/em&gt; &lt;code&gt;/test&lt;/code&gt; route with the &lt;em&gt;Job&lt;/em&gt;, and continues to do so according to it&amp;rsquo;s &lt;a href=&#34;#cli_continues_to_retry&#34;&gt;retry schedule&lt;/a&gt;.&lt;br&gt;
The &lt;em&gt;orchestrator&amp;rsquo;s&lt;/em&gt; &lt;code&gt;testTeamAttack&lt;/code&gt; routine is where a lot of the decision making occurs
&lt;ul&gt;
&lt;li&gt;If a &lt;em&gt;Test Run&lt;/em&gt; is already in progress (&lt;code&gt;initTesterResponsesForCli&lt;/code&gt; is defined) and the &lt;em&gt;orchestrator&lt;/em&gt; already has the responses from the requests to the &lt;em&gt;Testers&lt;/em&gt; &lt;code&gt;/init-tester&lt;/code&gt; route (&lt;code&gt;initTesterResponsesForCli&lt;/code&gt; has a length), whether the &lt;em&gt;Testers&lt;/em&gt; were successfully initialised or not, then the &lt;em&gt;Tester&lt;/em&gt; responses along with whether to use &lt;code&gt;sse&lt;/code&gt; or &lt;code&gt;lp&lt;/code&gt; to subscribe to &lt;em&gt;Tester&lt;/em&gt; feedback are returned to the CLI&lt;/li&gt;
&lt;li&gt;If a &lt;em&gt;Test Run&lt;/em&gt; is already in progress (&lt;code&gt;initTesterResponsesForCli&lt;/code&gt; is defined), the &lt;em&gt;orchestrator&lt;/em&gt; causes a client-side time-out because a response from the request to the &lt;em&gt;Testers&lt;/em&gt; &lt;code&gt;/init-tester&lt;/code&gt; route has not yet been received, and the &lt;em&gt;orchestrator&lt;/em&gt; wants the CLI to try again once it times out&lt;/li&gt;
&lt;li&gt;If execution gets past the above then a &lt;em&gt;Test Run&lt;/em&gt; is not currently in progress, so the &lt;em&gt;orchestrator&lt;/em&gt;:
&lt;ol&gt;
&lt;li&gt;Sets a in-progress flag&lt;/li&gt;
&lt;li&gt;Asks it&amp;rsquo;s &lt;em&gt;Tester&lt;/em&gt; models to initialise their &lt;em&gt;Testers&lt;/em&gt; and wait for the responses&lt;/li&gt;
&lt;li&gt;Once all of the responses are received, the &lt;em&gt;orchestrator&lt;/em&gt; populates a &lt;code&gt;failedTesterInitialisations&lt;/code&gt; array with any &lt;code&gt;Tester failure:&lt;/code&gt;&amp;hellip; messages&lt;/li&gt;
&lt;li&gt;The &lt;em&gt;orchestrator&lt;/em&gt; creates a &lt;code&gt;startTesters&lt;/code&gt; boolean and assigns it true if every active &lt;em&gt;Tester&lt;/em&gt; has it&amp;rsquo;s state set to &lt;code&gt;Tester initialised.&lt;/code&gt;&amp;hellip; (not &lt;code&gt;Awaiting Job.&lt;/code&gt;, &lt;code&gt;Initialising Tester.&lt;/code&gt;, or &lt;code&gt;[App|Tls] tests are running.&lt;/code&gt;), otherwise false is assigned&lt;/li&gt;
&lt;li&gt;If there were any &lt;code&gt;failedTesterInitialisations&lt;/code&gt; or &lt;code&gt;startTesters&lt;/code&gt; is false:
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;initTesterResponsesForCli&lt;/code&gt; is populated with the responses from trying to initialise the &lt;em&gt;Testers&lt;/em&gt; (both successful and/or unsuccessful)&lt;/li&gt;
&lt;li&gt;A response is returned to the CLI with &lt;code&gt;initTesterResponsesForCli&lt;/code&gt; and whether the &lt;em&gt;orchestrator&lt;/em&gt; expects the CLI to use &lt;code&gt;sse&lt;/code&gt; or &lt;code&gt;lp&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;Otherwise:
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;The &lt;em&gt;orchestrator&lt;/em&gt; invokes each &lt;em&gt;Testers&lt;/em&gt; &lt;code&gt;/start-tester&lt;/code&gt; route&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If we are running in &lt;code&gt;cloud&lt;/code&gt; the &lt;em&gt;orchestrator&lt;/em&gt; warms up the &lt;em&gt;Test Session&lt;/em&gt; message (Redis) channels and lists, this waits for all &lt;em&gt;Testers&lt;/em&gt; of the represented &lt;em&gt;Test Sessions&lt;/em&gt; to provide their first message set. These message sets are assigned to an array called &lt;code&gt;warmUpTestSessionMessageSets&lt;/code&gt; which looks like the following before being populated with messages:&lt;br&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;[
  {
    &lt;span style=&#34;color:#a6e22e&#34;&gt;channelName&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;app-lowPrivUser&amp;#39;&lt;/span&gt;,
    &lt;span style=&#34;color:#a6e22e&#34;&gt;testerMessageSet&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; []
  }, {
    &lt;span style=&#34;color:#a6e22e&#34;&gt;channelName&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;app-adminUser&amp;#39;&lt;/span&gt;,
    &lt;span style=&#34;color:#a6e22e&#34;&gt;testerMessageSet&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; []
  }, {
    &lt;span style=&#34;color:#a6e22e&#34;&gt;channelName&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;tls-NA&amp;#39;&lt;/span&gt;,
    &lt;span style=&#34;color:#a6e22e&#34;&gt;testerMessageSet&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; []
  }
]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt;
&lt;p&gt;If &lt;em&gt;Testers&lt;/em&gt; are started and the &lt;em&gt;orchestrator&lt;/em&gt; did not subscribe to the &lt;em&gt;Test Session&lt;/em&gt; message channels, it would never know when the &lt;em&gt;Test Sessions&lt;/em&gt; are finished in order to clean-up, so this subscription must occur&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;initTesterResponsesForCli&lt;/code&gt; is populated with the responses from trying to initialise the &lt;em&gt;Testers&lt;/em&gt; (only successful)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A response is returned to the CLI with &lt;code&gt;initTesterResponsesForCli&lt;/code&gt; and whether the &lt;em&gt;orchestrator&lt;/em&gt; expects the CLI to use &lt;code&gt;sse&lt;/code&gt; or &lt;code&gt;lp&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;CLI makes a &lt;code&gt;GET&lt;/code&gt; request&lt;/strong&gt; to either of the following (currently this happens whether all &lt;em&gt;Testers&lt;/em&gt; were initialised successfully or not, there is no point in this happening if there were any &lt;code&gt;Tester failure:&lt;/code&gt; messages returned from any &lt;em&gt;Testers&lt;/em&gt;, we will change this soon):
&lt;ul&gt;
&lt;li&gt;If using &lt;code&gt;sse&lt;/code&gt;?   &lt;code&gt;/tester-feedback/{testerName}/{sessionId}&lt;/code&gt;:&lt;br&gt;
In this case messages from the &lt;em&gt;Test Sessions&lt;/em&gt; continue to flow through the Redis channels and the &lt;em&gt;orchestrator&lt;/em&gt; continues to push them to the CLI&lt;/li&gt;
&lt;li&gt;If using &lt;code&gt;lp&lt;/code&gt;?   &lt;code&gt;/poll-tester-feedback/{testerName}/{sessionId}&lt;/code&gt;:&lt;br&gt;
In this case the CLI starts the long-poll process, the &lt;em&gt;orchestrator&lt;/em&gt; checks to see if &lt;code&gt;warmUpTestSessionMessageSets&lt;/code&gt; contains an element for the given channel name (BTW: channel names are constructed like: &lt;code&gt;${testerName}-${sessionId&lt;/code&gt;) (this will only happen in the &lt;code&gt;cloud&lt;/code&gt; environment), if so it is &lt;code&gt;splice&lt;/code&gt;d out and returned, if not the &lt;code&gt;pollTesterMessages&lt;/code&gt; of the &lt;code&gt;testerWatcher&lt;/code&gt; is invoked. &lt;code&gt;pollTesterMessages&lt;/code&gt; is responsible for providing a callback to each Redis channel which when invoked takes the given message from a &lt;em&gt;Testers&lt;/em&gt; &lt;em&gt;Test Session&lt;/em&gt; and pushes it on to the tail of a Redis list with the same name as the Redis channel that the message was received from. Each time the CLI requests a message set for a given &lt;em&gt;Test Session&lt;/em&gt;, if no messages are yet available it waits (on Redis &lt;code&gt;blpop&lt;/code&gt; (blocking head pop)), if messages are available, they are popped (Redis &lt;code&gt;lpop&lt;/code&gt; (non blocking head pop)) from the head of the Redis list&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;CLI makes a &lt;code&gt;GET&lt;/code&gt; request&lt;/strong&gt; to the &lt;code&gt;/outcomes&lt;/code&gt; route
&lt;ul&gt;
&lt;li&gt;This happens once the CLI receives a message starting with &lt;code&gt;All Test Sessions of all Testers are finished&lt;/code&gt;. By the time this has happens, the &lt;em&gt;orchestrator&lt;/em&gt; has already cleaned up the &lt;em&gt;Testers&lt;/em&gt; and created the &lt;em&gt;Outcomes&lt;/em&gt; archive based on the results and reports generated by the &lt;em&gt;Testers&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;tls-tester-implementation&#34;&gt;TLS Tester Implementation&lt;/h1&gt;
&lt;p&gt;Unlike the App &lt;em&gt;Tester&lt;/em&gt; (&lt;a href=&#34;https://github.com/purpleteam-labs/purpleteam-app-scanner&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;app-scanner&lt;/a&gt;) which supervises an external &lt;em&gt;Emissary&lt;/em&gt; (Zaproxy), the TLS &lt;em&gt;Tester&lt;/em&gt; (&lt;a href=&#34;https://github.com/purpleteam-labs/purpleteam-tls-scanner&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;tls-scanner&lt;/a&gt;) supervises an embedded &lt;em&gt;Emissary&lt;/em&gt; (testssl.sh). This means that the TLS &lt;em&gt;Emissary&lt;/em&gt; runs within the same container as the TLS &lt;em&gt;Tester&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;The &lt;a href=&#34;https://purpleteam-labs.com/doc/job-file/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;em&gt;Job&lt;/em&gt;&lt;/a&gt; file which the &lt;a href=&#34;https://purpleteam-labs.com/doc/definitions/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;em&gt;Build User&lt;/em&gt;&lt;/a&gt; provides to the &lt;a href=&#34;https://github.com/purpleteam-labs/purpleteam&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CLI&lt;/a&gt; contains everything required to get the TLS &lt;em&gt;Emissary&lt;/em&gt; running and targeting your website or web API.&lt;/p&gt;
&lt;p&gt;The implementation of the TLS &lt;em&gt;Tester&lt;/em&gt; was actually the easy part of this release. An additional stage one container image was required for &lt;code&gt;local&lt;/code&gt; and also in the Terraform configuration for &lt;code&gt;cloud&lt;/code&gt; in the form of AWS ECS Task Definition modification. The AWS ECR deployment script needed adding to.&lt;/p&gt;
&lt;p&gt;The new TLS &lt;em&gt;Tester&lt;/em&gt; isn&amp;rsquo;t that different from the App &lt;em&gt;Tester&lt;/em&gt; other than it is a lot simpler because we don&amp;rsquo;t have to bring up stage two containers, and all the potential synchronisation issues around external &lt;em&gt;Emissaries&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;The execution flow goes from the &lt;code&gt;/init-tester&lt;/code&gt; and &lt;code&gt;/start-tester&lt;/code&gt; &lt;a href=&#34;https://github.com/purpleteam-labs/purpleteam-tls-scanner/blob/main/src/api/tls/routes/post.js&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;routes&lt;/a&gt; to the &lt;a href=&#34;https://github.com/purpleteam-labs/purpleteam-tls-scanner/blob/main/src/api/tls/models/tls.js&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;model&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;/init-tester&lt;/code&gt; basically sets the &lt;em&gt;Tester&lt;/em&gt; up with the &lt;em&gt;Build User&lt;/em&gt; supplied &lt;em&gt;Job&lt;/em&gt; and sets the &lt;code&gt;status&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;/start-tester&lt;/code&gt; &lt;a href=&#34;https://github.com/purpleteam-labs/purpleteam-tls-scanner/blob/7b2d453c63f6a280132b45d2db9a546bf6fc0d19/src/api/tls/models/tls.js#L74&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;starts (&lt;code&gt;spawn&lt;/code&gt;s)&lt;/a&gt; the &lt;a href=&#34;https://github.com/purpleteam-labs/purpleteam-tls-scanner/blob/main/src/scripts/runCuc.js#L71&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Cucumber CLI&lt;/a&gt;,
which initialises the &lt;a href=&#34;https://github.com/purpleteam-labs/purpleteam-tls-scanner/blob/main/src/steps/world.js&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Cucumber world&lt;/a&gt; which is where most of the domain specific parts are glued together, and the actual Cucumber Steps (tests) are run.&lt;/p&gt;
&lt;p&gt;The following are added to the Cucumber &lt;code&gt;world&lt;/code&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The &lt;code&gt;messagePublisher&lt;/code&gt; (pushes messages onto Redis &lt;code&gt;${testerName}-${sessionId&lt;/code&gt; channels)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sut&lt;/code&gt; (System Under Test) domain object&lt;/li&gt;
&lt;li&gt;&lt;code&gt;testssl&lt;/code&gt; domain object&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The &lt;a href=&#34;https://github.com/purpleteam-labs/purpleteam-tls-scanner/blob/7b2d453c63f6a280132b45d2db9a546bf6fc0d19/src/steps/tls_scan_steps.js#L78&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;testssl.sh process is &lt;code&gt;spawn&lt;/code&gt;ed&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;When ever the TLS &lt;em&gt;Emissary&lt;/em&gt; writes to &lt;code&gt;stdout&lt;/code&gt; the &lt;em&gt;Tester&lt;/em&gt; deals with it &lt;a href=&#34;https://github.com/purpleteam-labs/purpleteam-tls-scanner/blob/7b2d453c63f6a280132b45d2db9a546bf6fc0d19/src/steps/tls_scan_steps.js#L80&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>DAST with OWASP purpleteam</title>
      <link>https://binarymist.io/publication/ser-podcast-owasp-purpleteam/</link>
      <pubDate>Wed, 07 Jul 2021 09:32:53 +1200</pubDate>
      <guid>https://binarymist.io/publication/ser-podcast-owasp-purpleteam/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://www.se-radio.net/team/kim-carter/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;













&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;
        &lt;img alt=&#34;Software Engineering Radio&#34; srcset=&#34;
               /media/publication/se-radio-logo_hua56cba13ba94bffe77c0e5cf633d61a8_4797_39b10f2cd9435d3f006e74f86974b3b4.png 400w,
               /media/publication/se-radio-logo_hua56cba13ba94bffe77c0e5cf633d61a8_4797_9708a0dd6344bd9522595665aa18325d.png 760w,
               /media/publication/se-radio-logo_hua56cba13ba94bffe77c0e5cf633d61a8_4797_1200x1200_fit_lanczos_2.png 1200w&#34;
               src=&#34;https://binarymist.io/media/publication/se-radio-logo_hua56cba13ba94bffe77c0e5cf633d61a8_4797_39b10f2cd9435d3f006e74f86974b3b4.png&#34;
               width=&#34;584&#34;
               height=&#34;80&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>PurpleTeam</title>
      <link>https://binarymist.io/project/external-project-purpleteam/</link>
      <pubDate>Sat, 12 Jun 2021 00:00:00 +0000</pubDate>
      <guid>https://binarymist.io/project/external-project-purpleteam/</guid>
      <description></description>
    </item>
    
    <item>
      <title>OWASP purpleteam</title>
      <link>https://binarymist.io/publication/dotnetrocks-interview-owasp-purpleteam/</link>
      <pubDate>Sat, 10 Apr 2021 09:32:53 +1200</pubDate>
      <guid>https://binarymist.io/publication/dotnetrocks-interview-owasp-purpleteam/</guid>
      <description>













&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;
        &lt;img alt=&#34;.Net Rocks&#34; srcset=&#34;
               /media/publication/dotnetrocks_hu962a7491b89f6e4c702b62c3ab3cbb15_5422_cdb1ba11175ed44e81cf242173ff7053.png 400w,
               /media/publication/dotnetrocks_hu962a7491b89f6e4c702b62c3ab3cbb15_5422_d4b46af28751026b66369e751311a31c.png 760w,
               /media/publication/dotnetrocks_hu962a7491b89f6e4c702b62c3ab3cbb15_5422_1200x1200_fit_lanczos_2.png 1200w&#34;
               src=&#34;https://binarymist.io/media/publication/dotnetrocks_hu962a7491b89f6e4c702b62c3ab3cbb15_5422_cdb1ba11175ed44e81cf242173ff7053.png&#34;
               width=&#34;450&#34;
               height=&#34;53&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
</description>
    </item>
    
    <item>
      <title>PurpleTeam at Alpha</title>
      <link>https://binarymist.io/blog/2021/02/17/purpleteam-at-alpha/</link>
      <pubDate>Wed, 17 Feb 2021 17:17:11 +1300</pubDate>
      <guid>https://binarymist.io/blog/2021/02/17/purpleteam-at-alpha/</guid>
      <description>&lt;p&gt;PurpleTeam alpha (both &lt;code&gt;local&lt;/code&gt; and &lt;code&gt;cloud&lt;/code&gt; environments) have been released, after several years of hard work, mostly on top of a day job.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://purpleteam-labs.com&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;













&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;
        &lt;img alt=&#34;purpleteam&#34;
           src=&#34;https://binarymist.io/media/headers/PurpleTeam_landscape_rev.svg&#34;
           loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This is a very condensed run-down of the process of taking PurpleTeam (a web security regression testing SaaS and CLI) from Proof of Concept (PoC) to Alpha release.&lt;/p&gt;
&lt;h1 id=&#34;poc&#34;&gt;PoC&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;Q&lt;/strong&gt;: What were my intentions with creating the original &lt;a href=&#34;https://github.com/OWASP/NodeGoat/blob/e2dffdb8c7e988c10bacdccba14d6f0d352c5090/test/security/profile-test.js&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Proof of Concept&lt;/a&gt; (PoC), what was I trying to achieve?&lt;br&gt;
&lt;strong&gt;A&lt;/strong&gt;: Elicit Developer feedback, Find out what Developers and their Teams really needed for just in time security regression testing of their web applications and APIs. How to get this process (dynamic security testing) as close as possible to the coding of their applications and APIs&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Q&lt;/strong&gt;: What did I do with the PoC?&lt;br&gt;
&lt;strong&gt;A&lt;/strong&gt;: Took it around the world speaking and running workshops with Developers and their Teams. That&amp;rsquo;s right, getting this process as close as possible to Developers and their Teams&lt;/p&gt;
&lt;p&gt;To name a few such events:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://binarymist.io/event/chcjs-meetup-2016-workshop-security-regression-testing-with-zapapi-and-nodegoat/&#34;&gt;CHCH.js Meetup&lt;/a&gt; 2016&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://binarymist.io/event/owaspchch-meetup-2016-workshop-security-regression-testing-with-zapapi-and-nodegoat/&#34;&gt;OWASP Chch Meetup&lt;/a&gt; 2016&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://binarymist.io/event/owaspny-meetup-2016-workshop-security-regression-testing-with-zapapi-and-nodegoat/&#34;&gt;OWASP NYC Meetup&lt;/a&gt; 2016&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://binarymist.io/event/nodeconfeu-2016-workshop-security-regression-testing-with-zapapi-and-nodegoat/&#34;&gt;NodeConf EU&lt;/a&gt; 2016&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://binarymist.io/event/nodejs-meetup-2016-workshop-security-regression-testing-with-zapapi-and-nodegoat/&#34;&gt;NodeJS Meetup Auckland&lt;/a&gt; 2016&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://binarymist.io/event/aws-meetup-2016-workshop-security-regression-testing-with-zapapi-and-nodegoat/&#34;&gt;AWS Meetup Auckland&lt;/a&gt; 2016&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://binarymist.io/event/owaspnzday-2019-talk-security-regression-testing-on-owasp-zap-node-api/&#34;&gt;OWASP NZ Day Auckland&lt;/a&gt; 2019&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;There are many Static Analyse Security Testing (SAST) tools available. As Developers we need both static and dynamic application security testing.&lt;/p&gt;
&lt;p&gt;The Proof of Concept I created several years ago was to work out exactly what Developers and their Teams needed in terms of
Dynamic Application Security Testing (DAST) capabilities to compliment the many Static Application Security Testing (SAST) tools already available
and able to be plugged into or consumed by your CI/build pipelines.&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;ve written extensively in the past on SAST offerings, for example the Web Applications chapter of my 2nd book &lt;a href=&#34;https://holisticinfosecforwebdevelopers.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Holistic Info-Sec for Web Developers&lt;/a&gt; covers:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The &lt;a href=&#34;https://f1.holisticinfosecforwebdevelopers.com/chap06.html#web-applications-identify-risks-consuming-free-and-open-source&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;perils of consuming free and open source libraries&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://f1.holisticinfosecforwebdevelopers.com/chap06.html#web-applications-countermeasures-consuming-free-and-open-source&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Countermeasures&lt;/a&gt; to the above perils&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://f1.holisticinfosecforwebdevelopers.com/chap06.html#web-applications-countermeasures-consuming-free-and-open-source-tooling&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Tooling options&lt;/a&gt; for SAST&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;journey&#34;&gt;Journey&lt;/h1&gt;
&lt;p&gt;If you&amp;rsquo;re a Developer creating internet facing applications, you know security is something you need to be thinking about right?
As Developers we all need as much automated help with improving our AppSec as possible.
As we&amp;rsquo;re creating it, no blockers, just enablers.&lt;/p&gt;
&lt;!-- .......... following is from owasp project page ................ --&gt;
&lt;p&gt;Many organisations spend many thousands of dollars on security defect remediation of the software projects they create. Usually this effort is also performed late in the development life-cycle, often even after the code is considered done. This fact makes the remediation effort &lt;a href=&#34;https://f0.holisticinfosecforwebdevelopers.com/chap06.html#leanpub-auto-cheapest-place-to-deal-with-defects&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;very costly&lt;/a&gt; and often too short. Because of this there are many bugs left in the software that get deployed to production.&lt;/p&gt;
&lt;br&gt;
&lt;script async class=&#34;speakerdeck-embed&#34; data-slide=&#34;48&#34; data-id=&#34;8ca6ad5eb9c34ba9873158026d9cfc6a&#34; data-ratio=&#34;1.37081659973226&#34; src=&#34;//speakerdeck.com/assets/embed.js&#34;&gt;&lt;/script&gt;
&lt;br&gt;
&lt;p&gt;PurpleTeam strikes at the very heart of this problem. PurpleTeam is a CLI and back-end/API (SaaS). The CLI can be run manually, but it&amp;rsquo;s sweet spot is being inserted into Development Team&amp;rsquo;s &lt;a href=&#34;https://github.com/purpleteam-labs/purpleteam#npm-install-locally&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;build pipelines&lt;/a&gt;, where it can find the security defects in your running web applications and APIs, and provide immediate and continuous notification of what and where your security defects are, along with tips on how to fix them.&lt;/p&gt;
&lt;br&gt;
&lt;script async class=&#34;speakerdeck-embed&#34; data-slide=&#34;49&#34; data-id=&#34;8ca6ad5eb9c34ba9873158026d9cfc6a&#34; data-ratio=&#34;1.37081659973226&#34; src=&#34;//speakerdeck.com/assets/embed.js&#34;&gt;&lt;/script&gt;
&lt;br&gt;
&lt;p&gt;The PurpleTeam back-end runs smart dynamic application security testing against your web applications or APIs. The purpleteam CLI drives the PurpleTeam back-end.&lt;/p&gt;
&lt;!-- end....... following is from owasp project page ................ --&gt;
&lt;br&gt;
&lt;script async class=&#34;speakerdeck-embed&#34; data-slide=&#34;18&#34; data-id=&#34;8ca6ad5eb9c34ba9873158026d9cfc6a&#34; data-ratio=&#34;1.37081659973226&#34; src=&#34;//speakerdeck.com/assets/embed.js&#34;&gt;&lt;/script&gt;
&lt;br&gt;
&lt;p&gt;I have also created the ability to add testers, There is currently a &lt;a href=&#34;https://github.com/purpleteam-labs/purpleteam-tls-checker&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;TLS checker&lt;/a&gt; and &lt;a href=&#34;https://github.com/purpleteam-labs/purpleteam-server-scanner&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;server scanner&lt;/a&gt; stubbed out and ready to be implemented. Feel free to dive in and start implementing.&lt;/p&gt;
&lt;br&gt;
&lt;script async class=&#34;speakerdeck-embed&#34; data-slide=&#34;58&#34; data-id=&#34;8ca6ad5eb9c34ba9873158026d9cfc6a&#34; data-ratio=&#34;1.37081659973226&#34; src=&#34;//speakerdeck.com/assets/embed.js&#34;&gt;&lt;/script&gt;
&lt;br&gt;
&lt;p&gt;If there is a tester that you need that PurpleTeam doesn&amp;rsquo;t have, you can now create it.&lt;/p&gt;
&lt;h1 id=&#34;environments&#34;&gt;Environments&lt;/h1&gt;
&lt;h2 id=&#34;local&#34;&gt;&lt;code&gt;local&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;The &lt;code&gt;local&lt;/code&gt; environment is &lt;a href=&#34;https://github.com/purpleteam-labs&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;free and open source&lt;/a&gt;. It is also now an &lt;a href=&#34;https://owasp.org/www-project-purpleteam/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;OWASP project&lt;/a&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;There&amp;rsquo;s quite a bit of set-up to do&lt;/li&gt;
&lt;li&gt;You need to set-up all the micro-services&lt;/li&gt;
&lt;li&gt;All the set-up should be documented &lt;a href=&#34;https://doc.purpleteam-labs.com/local/local-setup.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;here&lt;/a&gt;. Documentation &lt;a href=&#34;https://github.com/purpleteam-labs/purpleteam/issues/37&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;will be moving&lt;/a&gt; to a proper doc site soon.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You will need to set-up the following:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/purpleteam-labs/purpleteam-lambda&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Lambda functions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/purpleteam-labs/purpleteam-s2-containers&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Stage 2 containers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/purpleteam-labs/purpleteam-orchestrator&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Orchestrator&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Testers (only &lt;a href=&#34;https://github.com/purpleteam-labs/purpleteam-app-scanner&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;app&lt;/a&gt; currently)&lt;/li&gt;
&lt;li&gt;Get the &lt;a href=&#34;https://github.com/purpleteam-labs/purpleteam&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;purpleteam CLI&lt;/a&gt; on your system&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/purpleteam-labs/purpleteam/blob/3f2c97a14c617181a4bf71669a95540b99812e2d/README.md#install&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Install&lt;/a&gt; it, the options are:
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/purpleteam-labs/purpleteam/blob/3f2c97a14c617181a4bf71669a95540b99812e2d/README.md#clone-the-git-repository&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Clone the repository&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/purpleteam-labs/purpleteam/blob/3f2c97a14c617181a4bf71669a95540b99812e2d/README.md#npm-install-locally&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Local NPM install&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/purpleteam-labs/purpleteam/blob/3f2c97a14c617181a4bf71669a95540b99812e2d/README.md#npm-install-globally&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Global NPM install&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/purpleteam-labs/purpleteam/blob/3f2c97a14c617181a4bf71669a95540b99812e2d/README.md#configure&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Configure it&lt;/a&gt; and create your &lt;a href=&#34;https://doc.purpleteam-labs.com/definitions.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;em&gt;Job&lt;/em&gt;&lt;/a&gt; file&lt;/li&gt;
&lt;li&gt;Run your System under Test (SUT). we use &lt;a href=&#34;https://github.com/purpleteam-labs/purpleteam-iac-sut&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;purpleteam-iac-sut&lt;/a&gt; to build/deploy our cloud SUTs&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/purpleteam-labs/purpleteam/blob/3f2c97a14c617181a4bf71669a95540b99812e2d/README.md#run&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Run&lt;/a&gt; the purpleteam CLI&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;cloud&#34;&gt;&lt;code&gt;cloud&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;The &lt;code&gt;cloud&lt;/code&gt; environment costs because PurpleTeam-Labs have to maintain the infrastructure that the SaaS runs on, but is the easiest and quickest to get going.&lt;/p&gt;
&lt;p&gt;All infrastructure set-up is done for you. You just need to set-up the following:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Get the purpleteam CLI on your system (same as step 5.1 of &lt;code&gt;local&lt;/code&gt;). Configure the CLI and create your Job file (similar to step 5.2 of &lt;code&gt;local&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;Run your SUT (same as step 6 of &lt;code&gt;local&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;Run the purpleteam CLI (same as step 7 of &lt;code&gt;local&lt;/code&gt;)&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;architecture-and-tech&#34;&gt;Architecture and Tech&lt;/h1&gt;
&lt;h2 id=&#34;local-1&#34;&gt;&lt;code&gt;local&lt;/code&gt;&lt;/h2&gt;
&lt;!-- .......... following is from owasp project page ................ --&gt;
&lt;p&gt;Redis pub/sub is used to transfer &lt;em&gt;Tester&lt;/em&gt; messages (live update data) from the &lt;a href=&#34;https://doc.purpleteam-labs.com/definitions.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;em&gt;Tester&lt;/em&gt;&lt;/a&gt; micro-services to the &lt;a href=&#34;https://github.com/purpleteam-labs/purpleteam-orchestrator&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Orchestrator&lt;/a&gt;.
The &lt;a href=&#34;https://doc.purpleteam-labs.com/definitions.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;em&gt;Build User&lt;/em&gt;&lt;/a&gt; can configure the &lt;a href=&#34;https://github.com/purpleteam-labs/purpleteam&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;purpleteam CLI&lt;/a&gt; to receive these messages via Server Sent Events (SSE) or Long Polling (LP). The Orchestrator also needs to be configured to use either SSE or LP.
With Long Polling (LP) if the CLI goes off-line at some point during the &lt;em&gt;Test Run&lt;/em&gt; and then comes back on-line, no messages will be lost due to the fact that the Orchestrator persists the messages it&amp;rsquo;s subscribed to back to Redis lists, then pops them off the given lists as a LP request comes in and returns them to the CLI. LP is request-&amp;gt;response, SSE is one way. In saying that, LP can be quite efficient as we are able to batch messages into arrays to be returned.&lt;/p&gt;














&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;
        &lt;img alt=&#34;local architecture&#34; srcset=&#34;
               /media/post/2021/purpleteam_local_2021-01_720w_hucfd65cea1480a6a25157b97b5ad9aa7c_37485_5605e3a82d8ba95fa5762bb48d2ce1e3.png 400w,
               /media/post/2021/purpleteam_local_2021-01_720w_hucfd65cea1480a6a25157b97b5ad9aa7c_37485_6f5f2d43dfb5cdec618bc028f8e5aa0d.png 760w,
               /media/post/2021/purpleteam_local_2021-01_720w_hucfd65cea1480a6a25157b97b5ad9aa7c_37485_1200x1200_fit_lanczos_2.png 1200w&#34;
               src=&#34;https://binarymist.io/media/post/2021/purpleteam_local_2021-01_720w_hucfd65cea1480a6a25157b97b5ad9aa7c_37485_5605e3a82d8ba95fa5762bb48d2ce1e3.png&#34;
               width=&#34;720&#34;
               height=&#34;371&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;h3 id=&#34;orchestrator&#34;&gt;Orchestrator&lt;/h3&gt;
&lt;p&gt;The Orchestrator is responsible for:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Organising and supervising the Testers&lt;/li&gt;
&lt;li&gt;Sending real-time Tester messages to the CLI via either SSE or LP&lt;/li&gt;
&lt;li&gt;Packaging and sending the outcomes (test reports, test results) back to the CLI as they become available&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://f1.holisticinfosecforwebdevelopers.com/chap06.html#web-applications-countermeasures-lack-of-input-validation-filtering-and-sanitisation&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Validating, filtering and sanitising&lt;/a&gt; the &lt;em&gt;Build User&lt;/em&gt;&amp;rsquo;s input&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;testers&#34;&gt;Testers&lt;/h3&gt;
&lt;p&gt;Each Tester is responsible for:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Obtaining resources, cleaning up and releasing resources once the &lt;em&gt;Test Run&lt;/em&gt; is finished&lt;/li&gt;
&lt;li&gt;Starting and Stopping &lt;a href=&#34;https://github.com/purpleteam-labs/purpleteam-s2-containers&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Stage Two Containers&lt;/a&gt; (hosted on docker-compose-ui) dynamically (via &lt;a href=&#34;https://github.com/purpleteam-labs/purpleteam-lambda&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Lambda Functions&lt;/a&gt; hosted locally via sam cli) based on the number of Test Sessions provided by the Build User in the &lt;a href=&#34;https://doc.purpleteam-labs.com/definitions.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;em&gt;Job&lt;/em&gt;&lt;/a&gt; file which is sent from the CLI to the Orchestrator, then disseminated to the Testers. The following shows two &lt;em&gt;Test Sessions&lt;/em&gt; from a test resource &lt;a href=&#34;https://github.com/purpleteam-labs/purpleteam/blob/3f2c97a14c617181a4bf71669a95540b99812e2d/testResources/jobs/job_0.1.0-alpha.1_local&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;em&gt;Job&lt;/em&gt;&lt;/a&gt; that we use:
&lt;br&gt;&lt;br&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;...
&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;included&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; [
{
  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;type&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;testSession&amp;#34;&lt;/span&gt;,
  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;id&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;lowPrivUser&amp;#34;&lt;/span&gt;,
  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;attributes&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; {
    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;username&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;user1&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;password&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;User1_123&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;aScannerAttackStrength&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;HIGH&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;aScannerAlertThreshold&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;LOW&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;alertThreshold&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt;
  },
  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;relationships&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; {
    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;data&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; [{
      &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;type&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;route&amp;#34;&lt;/span&gt;,
      &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;id&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/profile&amp;#34;&lt;/span&gt;
    }]
  }
},
{
  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;type&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;testSession&amp;#34;&lt;/span&gt;,
  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;id&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;adminUser&amp;#34;&lt;/span&gt;,
  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;attributes&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; {
    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;username&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;admin&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;password&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Admin_123&amp;#34;&lt;/span&gt;
  },
  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;relationships&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; {
    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;data&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; [{
      &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;type&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;route&amp;#34;&lt;/span&gt;,
      &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;id&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/memos&amp;#34;&lt;/span&gt;
    },
    {
      &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;type&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;route&amp;#34;&lt;/span&gt;,
      &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;id&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/profile&amp;#34;&lt;/span&gt;
    }]
  }
},
...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;The actual (app, server, tls, etc) &lt;a href=&#34;https://github.com/purpleteam-labs/purpleteam-app-scanner/blob/e62601b76212f9bde866164fe6f4ad687fb5b458/src/features/app_scan.feature&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;test plan&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;sam-cli&#34;&gt;Sam Cli&lt;/h3&gt;
&lt;p&gt;Sam Cli stays running and listening for the &lt;em&gt;Tester&lt;/em&gt; requests to run the lambda functions which start and stop the Stage Two Containers.&lt;/p&gt;
&lt;h3 id=&#34;docker-compose-ui&#34;&gt;docker-compose-ui&lt;/h3&gt;
&lt;p&gt;In &lt;code&gt;local&lt;/code&gt; docker-compose-ui is required to be running in order to start/stop it&amp;rsquo;s hosted (Stage Two) containers (it has access to the hosts Docker socket).&lt;/p&gt;
&lt;!-- end....... following is from owasp project page ................ --&gt;
&lt;h2 id=&#34;cloud-1&#34;&gt;&lt;code&gt;cloud&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;The &lt;code&gt;cloud&lt;/code&gt; environment is similar in terms of functionality, a good number of components are quite different though.&lt;/p&gt;
&lt;p&gt;For the &lt;em&gt;Tester&lt;/em&gt; messages only Long Polling (LP) is available due to streaming APIs not being supported by AWS API Gateway. We could have used API Gateway WebSockets for bi-directional comms, but that doesn&amp;rsquo;t support OAuth client-credentials flow, which I had already completed.&lt;/p&gt;
&lt;p&gt;When the CLI makes a request to the back-end (directly to the Orchestrator in &lt;code&gt;local&lt;/code&gt;, but AWS API Gateway in &lt;code&gt;cloud&lt;/code&gt;), first that request is intercepted and a request to the PurpleTeam auth domain is made with: &lt;code&gt;grant_type&lt;/code&gt;, &lt;code&gt;client_id&lt;/code&gt; of the user pool app client, &lt;code&gt;scope&lt;/code&gt;s, &lt;code&gt;client_secret&lt;/code&gt;. Cognito Authorisation server returns an &lt;code&gt;access_token&lt;/code&gt; if all good. The CLI then makes requests with the &lt;code&gt;access_token&lt;/code&gt; to the resource server which in our case is the API Gateway. The resource server/API Gateway validates the &lt;code&gt;access_token&lt;/code&gt; with the User pool. If all good, the original request is allowed to continue on it&amp;rsquo;s way.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Testers&lt;/em&gt; run their lambdas, lambdas tell ECS to spin up and tear down n (where n is the number of &lt;i&gt;Test Session&lt;/i&gt;s) stage 2 containers. I originally used AWS ALB but that didn&amp;rsquo;t support our authentication requirements, so I had to back out and swap it for API Gateway and NLB.&lt;/p&gt;














&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;
        &lt;img alt=&#34;cloud architecture&#34; srcset=&#34;
               /media/post/2021/purpleteam_cloud_2021-01_720w_hu83a716143dd8f79317fec22591f5c2f8_43644_f54df717d7feaa38c5c21a9bdf72f347.png 400w,
               /media/post/2021/purpleteam_cloud_2021-01_720w_hu83a716143dd8f79317fec22591f5c2f8_43644_976493ddd09fb9ce1043500f1bff7bda.png 760w,
               /media/post/2021/purpleteam_cloud_2021-01_720w_hu83a716143dd8f79317fec22591f5c2f8_43644_1200x1200_fit_lanczos_2.png 1200w&#34;
               src=&#34;https://binarymist.io/media/post/2021/purpleteam_cloud_2021-01_720w_hu83a716143dd8f79317fec22591f5c2f8_43644_f54df717d7feaa38c5c21a9bdf72f347.png&#34;
               width=&#34;720&#34;
               height=&#34;371&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;h1 id=&#34;pressures&#34;&gt;Pressures&lt;/h1&gt;
&lt;h2 id=&#34;keeping-nodejs-dedendencies-up-to-date&#34;&gt;Keeping NodeJS Dedendencies up to date&lt;/h2&gt;
&lt;p&gt;The never ending battle of staying on top of a constantly moving NodeJS ecosystem. Never ending security and feature updates.
&lt;a href=&#34;https://github.com/purpleteam-labs/purpleteam/issues/29&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;This issue&lt;/a&gt; has a check list of our last major updates after we finished the IaC for the &lt;code&gt;cloud&lt;/code&gt; environment.&lt;/p&gt;
&lt;h2 id=&#34;forkingadopting-libraries&#34;&gt;Forking/adopting libraries&lt;/h2&gt;
&lt;p&gt;Then there is the forking and/or rewriting of libraries when authors lose interest, no longer maintain or just no longer have the bandwidth.
This must be expected and planned for when consuming free and open source libraries.
Yes it&amp;rsquo;s great to have the head start of being able to just use someone else&amp;rsquo;s code, but nothing is really free, everything ultimately costs.
Just realise that if you are consuming free and open source libraries in your project,
then at some stage you are going to have to dive into their code and either help out, or ultimately end up forking or rewriting.&lt;/p&gt;
&lt;p&gt;Following are some of the libraries we have forked, ported and/or rewritten:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/binarymist/mocksse&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;mocksse&lt;/a&gt; was a rewrite/port of MockEvent. We use this library for mocking Server Sent Events (SSE)&lt;/li&gt;
&lt;li&gt;Cucumber &lt;a href=&#34;https://gitlab.com/purpleteam-labs/purpleteam-app-scanner/-/blob/9be05624afc9a92ebe89da9cc82e16dd856c562d/src/scripts/cucumber-redacted.js&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;functionality&lt;/a&gt; that was &lt;a href=&#34;https://github.com/cucumber/cucumber-js/issues/1489&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;removed&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/francescou/docker-compose-ui&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;docker-compose-ui&lt;/a&gt; has been archived. This means we will have to either fork, rewrite, research to see if we can use something else.
This isn&amp;rsquo;t currently urgent&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;competitors&#34;&gt;Competitors&lt;/h2&gt;
&lt;p&gt;When I started developing PurpleTeam, as part of the business plan creation I needed to list my competitors. There was really only one. Now that competitor has mostly gone away and we have several new ones.&lt;/p&gt;
&lt;p&gt;Just to be clear, when I say competitor, I&amp;rsquo;m talking about Dynamic Application Security Tools for the web that can be used natively in any build pipeline.&lt;/p&gt;
&lt;p&gt;Our current competitors are doing things differently to us, with different offerings. We think PurpleTeam has unique aspects that make it stand out from the rest.&lt;/p&gt;
&lt;h1 id=&#34;next-steps&#34;&gt;Next Steps&lt;/h1&gt;
&lt;p&gt;PurpleTeam &lt;code&gt;local&lt;/code&gt; is now an &lt;a href=&#34;https://owasp.org/www-project-purpleteam/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;OWASP project&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;consuming-purpleteam&#34;&gt;Consuming PurpleTeam&lt;/h2&gt;
&lt;p&gt;How can you start using PurpleTeam today?&lt;/p&gt;
&lt;p&gt;As discussed in the &lt;a href=&#34;#environments&#34;&gt;Environments&lt;/a&gt; sub section you have a few options&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;local&lt;/code&gt;: set everything up yourself&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cloud&lt;/code&gt;: Sign-up for an account, set-up your test &lt;em&gt;Job&lt;/em&gt;, get the CLI on your system&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You can use the purpleteam CLI manually or consume it within your build pipelines.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Manual examples:
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/purpleteam-labs/purpleteam/tree/3f2c97a14c617181a4bf71669a95540b99812e2d#clone-the-git-repository-option&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;bin/purpleteam via npm script&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/purpleteam-labs/purpleteam/tree/3f2c97a14c617181a4bf71669a95540b99812e2d#run-the-binpurpleteam-file-directly&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;bin/purpleteam directly&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/purpleteam-labs/purpleteam/tree/3f2c97a14c617181a4bf71669a95540b99812e2d#run-the-purpleteam-cli-directly&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;purpleteam CLI directly&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/purpleteam-labs/purpleteam/tree/3f2c97a14c617181a4bf71669a95540b99812e2d#run-your-app&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Within your NodeJS app or build pipeline&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/purpleteam-labs/purpleteam/tree/3f2c97a14c617181a4bf71669a95540b99812e2d#npm-install-globally-option&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Within your non NodeJS app or build pipelines&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;contributing-to-purpleteam&#34;&gt;Contributing to PurpleTeam&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Is PurpleTeam missing something you need that would otherwise allow you to use it?&lt;/li&gt;
&lt;li&gt;Do you need to add a different kind of &lt;a href=&#34;https://doc.purpleteam-labs.com/definitions.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;em&gt;Tester&lt;/em&gt;&lt;/a&gt;?&lt;/li&gt;
&lt;li&gt;Have you found a bug?&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;Ways you can contribute to building &lt;a href=&#34;https://twitter.com/hashtag/owasp?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#owasp&lt;/a&gt; &lt;a href=&#34;https://twitter.com/hashtag/purpleteam?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#purpleteam&lt;/a&gt; &lt;a href=&#34;https://t.co/yxdb9XJaIT&#34;&gt;https://t.co/yxdb9XJaIT&lt;/a&gt;&lt;/p&gt;&amp;mdash; PurpleTeam (@purpleteamlabs) &lt;a href=&#34;https://twitter.com/purpleteamlabs/status/1363257338283622400?ref_src=twsrc%5Etfw&#34;&gt;February 20, 2021&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;

&lt;p&gt;As you can see, there are plenty of avenues that you can contribute to:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/purpleteam-labs/purpleteam/discussions&#34; target=&#34;_blank&#34;&gt;Github Discussions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://owasp.slack.com/messages/project-purpleteam&#34; target=&#34;_blank&#34;&gt;OWASP purpleteam Slack&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/purpleteam-labs/purpleteam/projects/2&#34; target=&#34;_blank&#34;&gt;Project Board&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/purpleteam-labs/purpleteam/issues&#34; target=&#34;_blank&#34;&gt;Submit Issue&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/purpleteam-labs/purpleteam/pulls&#34; target=&#34;_blank&#34;&gt;Submit PR&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/purpleteam-labs/purpleteam/security/policy&#34; target=&#34;_blank&#34;&gt;Reporting Security Issues&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/purpleteam-labs/purpleteam/projects/1&#34; target=&#34;_blank&#34;&gt;Public Roadmap&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/purpleteam-labs/purpleteam/blob/main/CONTRIBUTING.md&#34; target=&#34;_blank&#34;&gt;CONTRIBUTING.md&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;PurpleTeam-Labs also has a submission in with Google Summer of Code for students this year. We&amp;rsquo;ve got plenty to work on, so here&amp;rsquo;s hoping!&lt;/p&gt;
&lt;h2 id=&#34;purpleteam-next-steps&#34;&gt;PurpleTeam Next Steps&lt;/h2&gt;
&lt;p&gt;We will be getting started on a documentation site (not just a &lt;a href=&#34;https://doc.purpleteam-labs.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;hosted doc git repo&lt;/a&gt;) soon. We will also be working on a real website.
If you have a Dev Team that is keen to try PurpleTeam out, reach out to us if you need to.
We are always looking for people to work on the codebase. Even if you&amp;rsquo;re a student, it&amp;rsquo;s a great way to learn about security, by coding it.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Talk - Building PurpleTeam (a Security Regression Testing SaaS) - From PoC to Alpha</title>
      <link>https://binarymist.io/event/appsecnz-2021-talk-building-purpleteam-a-security-regression-testing-saas-from-poc-to-alpha/</link>
      <pubDate>Fri, 12 Feb 2021 14:25:00 +1300</pubDate>
      <guid>https://binarymist.io/event/appsecnz-2021-talk-building-purpleteam-a-security-regression-testing-saas-from-poc-to-alpha/</guid>
      <description>&lt;p&gt;Let me take you on the journey of trials, errors, and lessons learnt from getting a web app/API security regression testing proof of concept (PoC) to the next stage (alpha release).&lt;/p&gt;
&lt;p&gt;In 2019, I gave a &lt;a href=&#34;https://binarymist.io/event/owaspnzday-2019-talk-security-regression-testing-on-owasp-zap-node-api&#34;&gt;talk at OWASP New Zealand Day&lt;/a&gt; on a security regression testing PoC I had developed based on developer feedback. Since then, on top of a normal day job, I’ve been working on this project with every spare minute of time.&lt;/p&gt;

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/0RFmweM7bwM&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;br&gt;
&lt;p&gt;Let’s walk through the:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Architecture: How the micro-services hang together and communicate with each other. Design decisions, including backing out of some and redesigning when I got them wrong&lt;/li&gt;
&lt;li&gt;Environments: &lt;code&gt;local&lt;/code&gt;: you set-up all the purpleteam micro-services on your own machine or within your network. &lt;code&gt;cloud&lt;/code&gt;: all set-up is done for you, just create a job file and run it&lt;/li&gt;
&lt;li&gt;Technologies: Micro-services written in NodeJS. Docker containers. Authentication/authorisation in the &lt;code&gt;cloud&lt;/code&gt;. Lambda functions (&lt;code&gt;local&lt;/code&gt; and &lt;code&gt;cloud&lt;/code&gt;). Redis pub/sub and lists, along with Server Sent Events for messaging. Many AWS services. Terraform and Terragrunt for IaC&lt;/li&gt;
&lt;li&gt;Pressures: The never ending battle of keeping your NodeJS dependencies up to date. Forking/adopting libraries when maintainers disappear. Keeping relationships alive. Keeping yourself alive (eating, sleeping, fitness). Dealing with competitors&lt;/li&gt;
&lt;/ul&gt;
&lt;br&gt;
&lt;script async class=&#34;speakerdeck-embed&#34; data-id=&#34;1784d6fdfc3d4fab8ec5a67156387bf3&#34; data-ratio=&#34;1.37081659973226&#34; src=&#34;//speakerdeck.com/assets/embed.js&#34;&gt;&lt;/script&gt;
&lt;br&gt;
&lt;p&gt;We will then discuss the &lt;a href=&#34;https://binarymist.io/blog/2021/02/17/purpleteam-at-alpha/#next-steps&#34;&gt;next steps&lt;/a&gt; for PurpleTeam, and how you can start using - and contributing to it if it’s missing something you need.&lt;/p&gt;
&lt;br&gt;
</description>
    </item>
    
    <item>
      <title>Workshop - Init Security Titans</title>
      <link>https://binarymist.io/event/jade-2019-security-titans-workshop/</link>
      <pubDate>Wed, 13 Mar 2019 09:00:00 +1300</pubDate>
      <guid>https://binarymist.io/event/jade-2019-security-titans-workshop/</guid>
      <description>&lt;p&gt;This workshop was specifically taylored to initialise, train, motivate, and empower the new Security Champions within Jade, to scale security capability within all Jade Development Teams.&lt;/p&gt;
&lt;p&gt;With the primary objective of revealing the &lt;a href=&#34;https://binarymist.io/event/all-day-devops-2017-talk-secrets-of-a-high-performance-security-focussed-agile-team&#34;&gt;secrets&lt;/a&gt; of shifting the focus on security from late in the software development life-cycle to within the Development Teams.&lt;/p&gt;
&lt;p&gt;Not only does this significantly reduce the number of security defects being pushed to production systems, but also significantly reduces the total cost of development.&lt;/p&gt;
&lt;h2 id=&#34;cheapest-placehttpsf0holisticinfosecforwebdeveloperscomchap06htmlleanpub-auto-cheapest-place-to-deal-with-defects-to-deal-with-defects&#34;&gt;&lt;a href=&#34;https://f0.holisticinfosecforwebdevelopers.com/chap06.html#leanpub-auto-cheapest-place-to-deal-with-defects&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Cheapest place&lt;/a&gt; to deal with defects&lt;/h2&gt;
&lt;p&gt;There have been many studies specifically looking at the costs of finding and fixing defects early, as opposed to the planning of how to fix defects once the product is delivered, or not planning at all.&lt;/p&gt;
&lt;p&gt;The following table shows the average cost of fixing defects based on when they were introduced versus when they are detected. Putting these practises in the right order can reduce costs of fixing security defects by up to 100 times.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://f0.holisticinfosecforwebdevelopers.com/chap06.html#leanpub-auto-cheapest-place-to-deal-with-defects&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;













&lt;figure  id=&#34;figure-average-cost-of-fixing-defects&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;
        &lt;img alt=&#34;Average Cost of Fixing Defects&#34; srcset=&#34;
               /media/project/AverageCostOfFixingDefects_hu1116be9223305b5430a4c24c99b45b69_22716_ed27cdb2fbfc30d6acec20dfcd78affb.png 400w,
               /media/project/AverageCostOfFixingDefects_hu1116be9223305b5430a4c24c99b45b69_22716_93f5afcbbbc4d8578702cc7bb13ae8ea.png 760w,
               /media/project/AverageCostOfFixingDefects_hu1116be9223305b5430a4c24c99b45b69_22716_1200x1200_fit_lanczos_2.png 1200w&#34;
               src=&#34;https://binarymist.io/media/project/AverageCostOfFixingDefects_hu1116be9223305b5430a4c24c99b45b69_22716_ed27cdb2fbfc30d6acec20dfcd78affb.png&#34;
               width=&#34;760&#34;
               height=&#34;144&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      Average Cost of Fixing Defects
    &lt;/figcaption&gt;&lt;/figure&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;So&amp;hellip; by simply shifting the security expertise from the end of the project to within the development team, thus enabling developers to find and fix their defects as they are being introduced, huge cost savings can be enjoyed.&lt;/p&gt;
&lt;p&gt;This is not as difficult as you may think.&lt;/p&gt;
&lt;h2 id=&#34;on-the-day&#34;&gt;On the Day&lt;/h2&gt;
&lt;p&gt;Kim will lead the class through the tools, techniques and thought processes of both red (attacking) and blue (defending) teams along with how to combine these attributes into the purple team focussing on security, productivity, and tasked with continuously delivering sustainable maintainable technical solutions to market.&lt;/p&gt;
&lt;p&gt;Kim will explain the roles of &amp;lsquo;T&amp;rsquo; shaped professionals, including placement of security champions to create your purple Development Teams.&lt;/p&gt;
&lt;p&gt;We will work through how to implement the Sensible Security Model (SSM) within each and every Sprint, including:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Creating actionable countermeasure Product Backlog Items&lt;/li&gt;
&lt;li&gt;Integrating them into the same Product Backlog that your Development Team has been pulling business focussed items from&lt;/li&gt;
&lt;li&gt;Ordering them based on the risk ratings you create for each&lt;/li&gt;
&lt;/ol&gt;














&lt;figure  id=&#34;figure-countermeasures-backlog&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;
        &lt;img alt=&#34;Countermeasures Backlog&#34; srcset=&#34;
               /media/project/Countermeasures-Backlog_hu6c0da8d250bbaca3225252814323b04b_73370_43de82003111eeefbf6287f3c710fbff.jpg 400w,
               /media/project/Countermeasures-Backlog_hu6c0da8d250bbaca3225252814323b04b_73370_fe08344f00ad4fc4683a3e1bc4da5c96.jpg 760w,
               /media/project/Countermeasures-Backlog_hu6c0da8d250bbaca3225252814323b04b_73370_1200x1200_fit_q90_lanczos.jpg 1200w&#34;
               src=&#34;https://binarymist.io/media/project/Countermeasures-Backlog_hu6c0da8d250bbaca3225252814323b04b_73370_43de82003111eeefbf6287f3c710fbff.jpg&#34;
               width=&#34;720&#34;
               height=&#34;590&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      Countermeasures Backlog
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;p&gt;Kim will discuss how and where Agile Development Teams often fail, along with how to succeed with security with a &lt;a href=&#34;https://f0.holisticinfosecforwebdevelopers.com/chap06.html#leanpub-auto-how-and-why-many-software-development-shops-fail&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;familiar anecdote&lt;/a&gt;. Then augmenting your Scrum process within each and every Sprint, with a collection of development focussed &lt;a href=&#34;http://f0.holisticinfosecforwebdevelopers.com/chap06.html#process-and-practises-agile-development-and-practices&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;processes and practises&lt;/a&gt;, tools and techniques that have proven their value at drastically reducing defects before production deployment.&lt;/p&gt;
&lt;p&gt;Kim will walk us through the SSM threat modelling process with theory and hands on exercises in areas such as Physical, People, VPS, Network, Cloud and Web Applications. Including sub topics such as &lt;a href=&#34;https://binarymist.io/publication/docker-security/&#34;&gt;Docker&lt;/a&gt;, &lt;a href=&#34;https://f1.holisticinfosecforwebdevelopers.com/chap05.html#cloud-countermeasures-serverless&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Serverless&lt;/a&gt;, &lt;a href=&#34;https://binarymist.io/event/isig-2017-workshop-windows-exploitation-and-persistence-with-ps/&#34;&gt;PowerShell&lt;/a&gt; and many others.&lt;/p&gt;














&lt;figure  id=&#34;figure-sensible-security-model&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;
        &lt;img alt=&#34;Sensible Security Model&#34; srcset=&#34;
               /media/project/SSM_hud377ef778310226cac3a9943c776b1f7_52032_c36cad7901a6f9b82609c51780b94d72.jpg 400w,
               /media/project/SSM_hud377ef778310226cac3a9943c776b1f7_52032_697f09cbc2f8d0105db84cebeed25e25.jpg 760w,
               /media/project/SSM_hud377ef778310226cac3a9943c776b1f7_52032_1200x1200_fit_q90_lanczos.jpg 1200w&#34;
               src=&#34;https://binarymist.io/media/project/SSM_hud377ef778310226cac3a9943c776b1f7_52032_c36cad7901a6f9b82609c51780b94d72.jpg&#34;
               width=&#34;720&#34;
               height=&#34;327&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      Sensible Security Model
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;br&gt;
&lt;h2 id=&#34;more-detailh4&#34;&gt;More Detail&lt;/h4&gt;&lt;/h2&gt;
&lt;p&gt;Training material will be augmented with Extracts from Kim&amp;rsquo;s interviews on Software Engineering Radio with security experts such as Diogo Mónica (&lt;a href=&#34;https://binarymist.io/publication/ser-podcast-docker-security/&#34;&gt;Docker Security&lt;/a&gt; Team Lead) and &lt;a href=&#34;https://binarymist.io/publication/ser-podcast-network-security&#34;&gt;Haroon Meer&lt;/a&gt; (creator of Canary tools and tokens).&lt;/p&gt;
&lt;h3 id=&#34;learnings&#34;&gt;Learnings&lt;/h3&gt;
&lt;p&gt;Coverage of topic chapters:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://f0.holisticinfosecforwebdevelopers.com/chap07.html#physical&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Physical&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://f0.holisticinfosecforwebdevelopers.com/chap08.html#people&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;People&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://f1.holisticinfosecforwebdevelopers.com/chap03.html#vps&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;VPS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://f1.holisticinfosecforwebdevelopers.com/chap04.html#network&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Network&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://f1.holisticinfosecforwebdevelopers.com/chap05.html#cloud&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Cloud&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://f1.holisticinfosecforwebdevelopers.com/chap06.html#web-applications&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Web Applications&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;br&gt;
&lt;br&gt;
</description>
    </item>
    
    <item>
      <title>Talk - Hardening Your Docker Infrastructure</title>
      <link>https://binarymist.io/event/owaspnzday-2019-talk-hardening-your-docker-infrastructure/</link>
      <pubDate>Fri, 22 Feb 2019 16:00:00 +1300</pubDate>
      <guid>https://binarymist.io/event/owaspnzday-2019-talk-hardening-your-docker-infrastructure/</guid>
      <description>&lt;p&gt;Reports state very high numbers of security vulnerabilities in official images on Docker Hub. Host kernels contain 20+ M LoC, reachable from untrusted applications via many kernel APIs, providing huge attack surface. Dockers default is to run containers and all commands/processes within a container as root.&lt;/p&gt;
&lt;p&gt;Kim will discuss:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Tooling options around significantly improving visibility of vulnerabilities in Docker components and containers&lt;/li&gt;
&lt;li&gt;Safe consumption of Docker images from public registries. Addressing origin, authorship with identification using digests and integrity with opt-in Docker Content Trust&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Based on Kim&amp;rsquo;s:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Experience building a full dynamically Dockerised &lt;a href=&#34;https://gitlab.com/purpleteam-labs&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;security regression testing SaaS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Writing and publishing the &lt;a href=&#34;https://binarymist.io/publication/docker-security/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Docker Security - Quick Reference&lt;/a&gt; book&lt;/li&gt;
&lt;li&gt;Interviews with experts such as &lt;a href=&#34;https://binarymist.io/publication/ser-podcast-docker-security/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Docker Security Team Lead Diogo Mónica&lt;/a&gt;, and Michael Hausenblas of Red Hat (author of the book Container Networking) on &lt;a href=&#34;https://binarymist.io/publication/ser-podcast-container-networking/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Container Networking&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Docker host, engine, container, networking and deployment security will be covered with many examples. We will cover:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Namespaces&lt;/li&gt;
&lt;li&gt;Controlling system resources accessible to containers with CGrouups&lt;/li&gt;
&lt;li&gt;LSMs&lt;/li&gt;
&lt;li&gt;Reducing default Capabilities of the Container root user&lt;/li&gt;
&lt;li&gt;Reducing default syscalls to only the essentials with Seccomp&lt;/li&gt;
&lt;li&gt;Filesystem Mounts&lt;/li&gt;
&lt;li&gt;Coverage of good security practises in Dockerfiles and docker-compose&lt;/li&gt;
&lt;/ul&gt;
&lt;br&gt;
</description>
    </item>
    
    <item>
      <title>Talk - Security Regression Testing on OWASP Zap Node API</title>
      <link>https://binarymist.io/event/owaspnzday-2019-talk-security-regression-testing-on-owasp-zap-node-api/</link>
      <pubDate>Fri, 22 Feb 2019 13:30:00 +1300</pubDate>
      <guid>https://binarymist.io/event/owaspnzday-2019-talk-security-regression-testing-on-owasp-zap-node-api/</guid>
      <description>&lt;p&gt;As Developers, we’re still creating defective code. There are many areas we’ve been able to configure and automate to help improve security, but the very human aspect of creating secure code is still a dark art, and in many cases our single point of failure.&lt;/p&gt;
&lt;p&gt;We’re going to discuss traditional approaches of addressing security in our software, and why they’re just not cutting it any more. A red teaming engagement can be very expensive, is too late in the SDLC to be finding then fixing bugs. In many cases we’re pushing code to production continuously,
the traditional approaches and security checks are no longer viable.&lt;/p&gt;
&lt;br&gt;
&lt;script async class=&#34;speakerdeck-embed&#34; data-id=&#34;8ca6ad5eb9c34ba9873158026d9cfc6a&#34; data-ratio=&#34;1.37081659973226&#34; src=&#34;//speakerdeck.com/assets/embed.js&#34;&gt;&lt;/script&gt;
&lt;br&gt;
&lt;p&gt;In this session, Kim will attempt to demystify how security can become less of a disabler/blocker and more of an enabler/selling point, allowing you to create and deliver robust software with security baked in as frequently and confidently as your business demands.&lt;br&gt;We’re going to unlock the secrets of building and running a Development Team with security super powers (the &lt;a href=&#34;https://purpleteam-labs.com/&#34; target=&#34;_blank&#34;&gt;purpleteam&lt;/a&gt;), finding and fixing defects at the very point that they’re introduced.&lt;/p&gt;
&lt;p&gt;One of the tools often used is the OWASP ZAP API, now we have an officially supported &lt;a href=&#34;https://github.com/zaproxy/zap-api-nodejs/&#34; target=&#34;_blank&#34;&gt;Node API&lt;/a&gt;.
In this talk we build on the Node API to create a &lt;a href=&#34;https://github.com/purpleteam-labs&#34; target=&#34;_blank&#34;&gt;fully featured security regression testing CLI&lt;/a&gt; that can be consumed by your CI/nightly builds.&lt;/p&gt;
&lt;br&gt;
</description>
    </item>
    
    <item>
      <title>Michael Hausenblas on Container Networking</title>
      <link>https://binarymist.io/publication/ser-podcast-container-networking/</link>
      <pubDate>Wed, 10 Oct 2018 00:00:00 +0000</pubDate>
      <guid>https://binarymist.io/publication/ser-podcast-container-networking/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://www.se-radio.net/team/kim-carter/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;













&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;
        &lt;img alt=&#34;Software Engineering Radio&#34; srcset=&#34;
               /media/publication/se-radio-logo_hua56cba13ba94bffe77c0e5cf633d61a8_4797_39b10f2cd9435d3f006e74f86974b3b4.png 400w,
               /media/publication/se-radio-logo_hua56cba13ba94bffe77c0e5cf633d61a8_4797_9708a0dd6344bd9522595665aa18325d.png 760w,
               /media/publication/se-radio-logo_hua56cba13ba94bffe77c0e5cf633d61a8_4797_1200x1200_fit_lanczos_2.png 1200w&#34;
               src=&#34;https://binarymist.io/media/publication/se-radio-logo_hua56cba13ba94bffe77c0e5cf633d61a8_4797_39b10f2cd9435d3f006e74f86974b3b4.png&#34;
               width=&#34;584&#34;
               height=&#34;80&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&#34;show-outline&#34;&gt;Show Outline&lt;/h1&gt;
&lt;h2 id=&#34;container-networking-stack&#34;&gt;Container Networking Stack&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;What is container networking, and why do we need to network containers?&lt;/li&gt;
&lt;li&gt;Let’s talk a bit about what the networking stack is comprised of when it comes to containers. Can you explain briefly the three layers:
&lt;ul&gt;
&lt;li&gt;Low-level networking&lt;/li&gt;
&lt;li&gt;Container networking&lt;/li&gt;
&lt;li&gt;Container orchestration&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;We talked a bit about how most networks today are becoming the responsibility of Software Engineers in show &lt;a href=&#34;https://binarymist.io/publication/ser-podcast-network-security&#34;&gt;#302 Network Security with Haroon Meer&lt;/a&gt;. I also cover this in my book “&lt;a href=&#34;https://binarymist.io/publication/cloud-security&#34;&gt;Cloud Security&lt;/a&gt;”. Can you explain what Software-Defined Networking (SDN) is, and why Software Engineers need to understand it?&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;single-host-container-networking&#34;&gt;Single-Host Container Networking&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;There are four single host networking modes based on the four Linux kernel network namespace drivers.
&lt;ol&gt;
&lt;li&gt;bridge&lt;/li&gt;
&lt;li&gt;host (faster, less secure)&lt;/li&gt;
&lt;li&gt;container&lt;/li&gt;
&lt;li&gt;none&lt;br&gt;
Can you give us a description of these modes, what they give us, how they work, and where we would use each one?&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;In terms of allocating IP addresses, the bridge mode mostly takes care of this, what about the other modes?&lt;/li&gt;
&lt;li&gt;In terms of managing ports, we have fixed and dynamic port allocation. How do each of these work, and in which cases would we use each one?&lt;/li&gt;
&lt;li&gt;There are quite a few things to consider in terms of network security with Docker containers. By default, containers on the same host can communicate with each other due to &lt;code&gt;--icc=true&lt;/code&gt; which means comms work by default, but there are risks that need to be considered. What are these risks, and how do Engineers mitigate them?&lt;/li&gt;
&lt;li&gt;If one container gets compromised, it could potentially access other containers on the host and compromise them also. What else do we need to be thinking about in order to provide solid configuration and mitigation?&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;multi-host-container-networking&#34;&gt;Multi-Host Container Networking&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;We’re going to dive into the section within your book on Multi-Host Container Networking now, just before we do, can you give a quick explanation of what IpTables is?&lt;/li&gt;
&lt;li&gt;According to the Docker networking communication docs:
&lt;ul&gt;
&lt;li&gt;With the section on &lt;em&gt;Communicating to the outside world&lt;/em&gt; stating &lt;em&gt;Docker’s forward rules permit all external source IPs by default&lt;/em&gt;. So by default, any interface outside of the host can access the hosts container&lt;/li&gt;
&lt;li&gt;Then the section on &lt;em&gt;Container communication between hosts&lt;/em&gt; states &lt;em&gt;Docker sets the default policy of the iptables FORWARD chain to DROP&lt;/em&gt;, so a host receiving comms from the outside does not by default forward them on to the hosts container&lt;br&gt;
Can you explain what actually happens here? What are the actual defaults with inter-host comms of containers, how when and why should Engineers go about changing this?&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;What is an overlay network?&lt;/li&gt;
&lt;li&gt;What does Dockers support for overlay networks look like?&lt;/li&gt;
&lt;li&gt;How do you go about creating an overlay network?&lt;/li&gt;
&lt;li&gt;What’s the difference between an overlay network and a swarm?&lt;/li&gt;
&lt;li&gt;How do we encrypt traffic between all containers on an overlay network?
&lt;code&gt;docker network create --opt encrypted --driver overlay&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;What are some of the network plugins Docker provides, and how do you use them?&lt;/li&gt;
&lt;li&gt;Can you give us a run-down on the following multi-host container networking options, along with their pros and cons:
&lt;ul&gt;
&lt;li&gt;Flannel by CoreOS&lt;/li&gt;
&lt;li&gt;WeaveNet by Weaveworks&lt;/li&gt;
&lt;li&gt;Project Calico by Metaswitch&lt;/li&gt;
&lt;li&gt;Open vSwitch from the OpenStack project&lt;/li&gt;
&lt;li&gt;OpenVpn&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;What sort of issues arise out of IP address management and how are these addressed?&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;orchestration&#34;&gt;Orchestration&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;What is container orchestration, tell us a bit about the different roles involved?
&lt;ul&gt;
&lt;li&gt;organisational primitives&lt;/li&gt;
&lt;li&gt;Scheduling&lt;/li&gt;
&lt;li&gt;Automated health checks&lt;/li&gt;
&lt;li&gt;Autoscaling&lt;/li&gt;
&lt;li&gt;upgrade strategies&lt;/li&gt;
&lt;li&gt;service discovery&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;What are the main players/products in container orchestration, and what platforms do they run on?&lt;/li&gt;
&lt;li&gt;What are the organisational primitives that exist, what are they used for and responsible for?&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;kubernetes-networking&#34;&gt;Kubernetes Networking&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Give us a rundown on what Kubernetes is, and what the problem is that it’s trying to solve?&lt;/li&gt;
&lt;li&gt;What are the main components in Kubernetes, and what are they responsible for?&lt;/li&gt;
&lt;li&gt;Give us a bit of an overview of Kubernetes networking?
Containers can communicate with all other containers without NAT
Nodes can communicate with all containers (and vice versa) without NAT
The IP a container sees itself is the same IP as others see it&lt;/li&gt;
&lt;li&gt;Tell us a bit about how Kubernetes does:&lt;br&gt;
Intra-pod networking (container mode networking (all containers share the same IP), isn’t this a security flaw?)&lt;br&gt;
Inter-pod networking&lt;br&gt;
Ingress and egress&lt;/li&gt;
&lt;li&gt;What are the different options for service discovery in Kubernetes?&lt;/li&gt;
&lt;li&gt;Tell us a bit about how service meshes work in Kubernetes?&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;service-discovery&#34;&gt;Service Discovery&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;In terms of registering a container, what happens when the scheduler dies and the registered containers keep running, essentially the containers are now running rogue?&lt;/li&gt;
&lt;li&gt;There are a few service discovery tools listed in your book Container Networking, such as ZooKeeper, etcd, Consul and a couple of others. Do the orchestrator solutions not have their own service discovery tools?&lt;/li&gt;
&lt;li&gt;Tell us a bit about the service discovery solutions available, where they shine, and not so much?&lt;/li&gt;
&lt;li&gt;You also mention a collection of load balancing tools in your book, do the orchestration solutions not have their own integrated load balancers, and if not, how do you go about integrating a load balancer?&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;container-network-interface&#34;&gt;Container Network Interface&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Tell us a bit about the Container Network Interface (CNI), Docker’s libnetwork and how they differ?&lt;/li&gt;
&lt;li&gt;What are some of the CNI plugins and what are they responsible for?&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Cloud Security</title>
      <link>https://binarymist.io/blog/2018/04/28/cloud-security/</link>
      <pubDate>Sat, 28 Apr 2018 00:00:00 +1200</pubDate>
      <guid>https://binarymist.io/blog/2018/04/28/cloud-security/</guid>
      <description>&lt;p&gt;Following on from last months news of my new &lt;a href=&#34;https://binarymist.io/blog/2018/03/31/docker-security/&#34;&gt;Docker Security - Quick Reference&lt;/a&gt; book, I bring you &lt;a href=&#34;https://binarymist.io/publication/cloud-security/&#34;&gt;Cloud Security - Quick Reference&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This book is purposed to help Software Developers/DevOps Engineers, and also the likes of Product Owner and Product Manager types gain a good understanding of the risks and countermeasures when dealing with Cloud Service Providers (CSPs) and your environments within.&lt;/p&gt;
&lt;p&gt;There are quite a few anecdotes based on my own experience consulting for organisations navigating the perils of the many Cloud environments available today, along with tips, tricks, tools, advice, and implementation details from many client lessons learnt the hard way.&lt;/p&gt;
&lt;p&gt;Also be sure to have a listen to the show on &lt;a href=&#34;https://binarymist.io/publication/ser-podcast-cloud-security/&#34;&gt;Cloud Security&lt;/a&gt; I recorded with Scott Piper (AWS Cloud Specialist) as guest for &lt;a href=&#34;http://www.se-radio.net/team/kim-carter/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Software Engineering Radio&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The following is a snapshot of what you can expect inside of the book, laid out in the Sensible Security Model (SSM) threat modelling approach:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Asset Identification&lt;/li&gt;
&lt;li&gt;Identify Risks&lt;/li&gt;
&lt;li&gt;Countermeasures&lt;/li&gt;
&lt;li&gt;Risks that Solution Causes&lt;/li&gt;
&lt;li&gt;Costs and Trade-offs&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;a href=&#34;https://binarymist.io/publication/cloud-security/&#34;&gt;













&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;
        &lt;img alt=&#34;Cloud Security - Quick Reference&#34; srcset=&#34;
               /media/publication/title_page_cloud-security_720_huc32bfe701ea70199af6b38d1cbbdcf7d_105403_2f08adb9cb7f0bbee2cd056c626babfe.jpg 400w,
               /media/publication/title_page_cloud-security_720_huc32bfe701ea70199af6b38d1cbbdcf7d_105403_150be87133747b2c237d233d07f02d8d.jpg 760w,
               /media/publication/title_page_cloud-security_720_huc32bfe701ea70199af6b38d1cbbdcf7d_105403_1200x1200_fit_q90_lanczos.jpg 1200w&#34;
               src=&#34;https://binarymist.io/media/publication/title_page_cloud-security_720_huc32bfe701ea70199af6b38d1cbbdcf7d_105403_2f08adb9cb7f0bbee2cd056c626babfe.jpg&#34;
               width=&#34;587&#34;
               height=&#34;760&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div style=&#34;display: table;&#34;&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;1&lt;/th&gt;
&lt;th&gt;Asset Identification&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Productivity&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Competitive Advantage&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Control&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Data&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;2&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;Identify Risks&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;&lt;a href=&#34;#cloud-identify-risks-shared-responsibility-model&#34;&gt;Shared Responsibility Model&lt;/a&gt; ⭐&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;mdash; &lt;strong&gt;&lt;a href=&#34;#cloud-identify-risks-shared-responsibility-model-csp-responsibility&#34;&gt;CSP Responsibility&lt;/a&gt; ⭐&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;mdash; &lt;strong&gt;&lt;a href=&#34;#cloud-identify-risks-shared-responsibility-model-csp-customer-responsibility&#34;&gt;CSP Customer Responsibility&lt;/a&gt; ⭐&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;&lt;a href=&#34;#cloud-identify-risks-csp-evaluation&#34;&gt;CSP Evaluation&lt;/a&gt; ⭐&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Cloud Service Provider vs In-house&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;mdash; Skills&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;mdash; EULA&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;mdash; Giving up Secrets&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;mdash; Location of Data&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;mdash; Vendor lock-in&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;mdash; Possible Single Points of Failure&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Review Other Chapters&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;People&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Application Security&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Network Security&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Violations of Least Privilege&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;mdash; Machine Instance Single User Root&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;mdash; CSP Account Single User Root&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Storage of Secrets&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;mdash; Private Key Abuse&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;mdash;&amp;mdash; &lt;strong&gt;&lt;a href=&#34;#cloud-identify-risks-storage-of-secrets-private-key-abuse-ssh&#34;&gt;SSH&lt;/a&gt; ⭐&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;mdash;&amp;mdash; &lt;strong&gt;&lt;a href=&#34;#cloud-identify-risks-storage-of-secrets-private-key-abuse-tls&#34;&gt;TLS&lt;/a&gt; ⭐&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;mdash; Credentials and Other Secrets&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;mdash;&amp;mdash; Entered by People (manually)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;mdash;&amp;mdash; Entered by Software (automatically)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Serverless&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;mdash; Third Party Services&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;mdash; Perimeterless&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;mdash; Functions&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;mdash; DoS of Lambda Functions&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Infrastructure and Configuration Management&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;AWS&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;mdash; Password-less sudo&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;3&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;Countermeasures&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Shared Responsibility Model&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;mdash; CSP Responsibility&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;mdash; CSP Customer Responsibility&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;CSP Evaluation (Includes Answers)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Cloud Service Provider vs In-house&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;mdash; Skills&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;mdash; EULA&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;mdash; Giving up Secrets&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;mdash; Location of Data&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;mdash; Vendor lock-in&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;mdash; Possible Single Points of Failure&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Review Other Chapters&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;People&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Application Security&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Network Security&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;&lt;a href=&#34;#cloud-countermeasures-violations-of-least-privilege&#34;&gt;Violations of Least Privilege&lt;/a&gt; ⭐&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;mdash; &lt;strong&gt;&lt;a href=&#34;#cloud-countermeasures-violations-of-least-privilege-machine-instance-single-user-root&#34;&gt;Machine Instance Single User Root&lt;/a&gt; ⭐&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;mdash; &lt;strong&gt;&lt;a href=&#34;#cloud-countermeasures-violations-of-least-privilege-csp-account-single-user-root&#34;&gt;CSP Account Single User Root&lt;/a&gt; ⭐&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Storage of Secrets&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;mdash; Private Key Abuse&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;mdash;&amp;mdash; &lt;strong&gt;&lt;a href=&#34;#cloud-countermeasures-storage-of-secrets-private-key-abuse-ssh&#34;&gt;SSH&lt;/a&gt; ⭐&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;mdash;&amp;mdash; &lt;strong&gt;&lt;a href=&#34;#cloud-countermeasures-storage-of-secrets-private-key-abuse-tls&#34;&gt;TLS&lt;/a&gt; ⭐&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;mdash; Credentials and Other Secrets&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;mdash;&amp;mdash; &lt;strong&gt;&lt;a href=&#34;#cloud-countermeasures-storage-of-secrets-credentials-and-other-secrets-entered-by-people-manually&#34;&gt;Entered by People (manually)&lt;/a&gt; ⭐&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;mdash;&amp;mdash; &lt;strong&gt;&lt;a href=&#34;#cloud-countermeasures-storage-of-secrets-credentials-and-other-secrets-entered-by-software&#34;&gt;Entered by Software (automatically)&lt;/a&gt; ⭐&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Serverless&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;mdash; Third Party Services&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;mdash; Perimeterless&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;mdash; Functions&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;mdash; DoS of Lambda Functions&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;mdash; Centralised logging of AWS Lambda Functions&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;mdash; Frameworks&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Infrastructure and Configuration Management&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;AWS&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;mdash; Password-less sudo&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;mdash; &lt;strong&gt;&lt;a href=&#34;#cloud-countermeasures-aws-additional-tooling&#34;&gt;Additional Tooling&lt;/a&gt; ⭐&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;4&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;Risks that Solution Causes&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Shared Responsibility Model&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;CSP Evaluation&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Cloud Service Provider vs In-house&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;People&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Application Security&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Network Security&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Violations of Least Privilege&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Storage of Secrets&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;mdash; Private Key Abuse&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;mdash;&amp;mdash; SSH&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;mdash;&amp;mdash; TLS&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;mdash; Credentials and Other Secrets&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;mdash;&amp;mdash; Entered by People (manually)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;mdash;&amp;mdash; Entered by Software (automatically)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Serverless&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;mdash; Functions&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;mdash; DoS of Lambda Functions&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;mdash; Frameworks&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Infrastructure and Configuration Management&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;AWS&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;mdash; Password-less sudo&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;5&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;Costs and Trade-offs&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Shared Responsibility Model&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;CSP Evaluation&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Cloud Service Provider vs In-house&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;People&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Application Security&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Network Security&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;&lt;a href=&#34;#cloud-costs-and-trade-offs-violations-of-least-privilege&#34;&gt;Violations of Least Privilege&lt;/a&gt; ⭐&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Storage of Secrets&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;mdash; Private Key Abuse&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;mdash;&amp;mdash; SSH&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;mdash;&amp;mdash; TLS&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;mdash; Credentials and Other Secrets&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;mdash;&amp;mdash; Entered by People (manually)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;mdash;&amp;mdash; Entered by Software (automatically)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Serverless&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;mdash; Functions&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;mdash; DoS of Lambda Functions&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;mdash; Frameworks&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Infrastructure and Configuration Management&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;AWS&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;mdash; Password-less sudo&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;br&gt;
&lt;p&gt;&lt;strong&gt;⭐&lt;/strong&gt; I&amp;rsquo;ve provided a few of the sections from the book below, and linked to from the book contents above. Enjoy 😃&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;em&gt;Oh, and for less than the cost of a lunch you can own the complete book&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;btn btn-outline-primary&#34; href=&#34;https://leanpub.com/cloudsecurity-quickreference&#34; target=&#34;_blank&#34;&gt;&lt;i class=&#34;fab fa-leanpub&#34;&gt;&lt;/i&gt; &lt;b&gt;Own The Book&lt;/b&gt;&lt;/a&gt;&lt;/p&gt;
&lt;br&gt;
&lt;hr&gt;
&lt;h1 id=&#34;cloud-identify-risks-shared-responsibility-model&#34;&gt;Shared Responsibility Model&lt;/h1&gt;
&lt;p&gt;The shared responsibility model is one that many have not grasped or understood well. Let&amp;rsquo;s look at the responsibilities of the parties involved.&lt;/p&gt;
&lt;h2 id=&#34;cloud-identify-risks-shared-responsibility-model-csp-responsibility&#34;&gt;CSP Responsibility&lt;/h2&gt;
&lt;p&gt;The CSP takes care of the infrastructure, not the customer specific configuration of it. Due to the sheer scale of what they are building, the CSP is often able to build in good security controls, in contrast to the average system administrator, who has limited resources or ability to focus on security to the same degree.&lt;/p&gt;
&lt;p&gt;Again, due to sheer scale, the average CSP has a concentrated group of good security professionals versus a business who&amp;rsquo;s core focus is often not security related. CSPs provide good security mechanisms, but the customer has to know and care enough to use them.&lt;/p&gt;
&lt;p&gt;CSPs who architect infrastructure, build components, frameworks, hardware, and platform software in most cases take security seriously and are doing a reasonable job.&lt;/p&gt;
&lt;h2 id=&#34;cloud-identify-risks-shared-responsibility-model-csp-customer-responsibility&#34;&gt;CSP Customer Responsibility&lt;/h2&gt;
&lt;p&gt;CSP customers are expected to be responsible for their own security as it pertains to:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Their people working with the technology&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://binarymist.io/tags/application-security/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Application security&lt;/a&gt;, specific to shortcomings in people: lack of skills, experience, engagement, etc.&lt;/li&gt;
&lt;li&gt;Configuring the infrastructure and/or platform components, again referencing people defects&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;All too often the customer&amp;rsquo;s responsibility is neglected, which renders the Cloud no better for the customer in terms of security.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The primary problem with the Cloud is this: customers have the misconception that someone else is taking care of all their security. That is not how the shared responsibility model works though. Yes, the CSP is probably taking care of infrastructure security, but other forms of security as listed above are even more important than before the shift to the Cloud. These items are now the lowest hanging fruit for the attacker.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The following are a set of questions (verbatim) I have been asked recently, and that I hear similar versions of frequently:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;As a software engineer, do I really care about physical network security and network logging?&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Surely &amp;ldquo;as a software engineer&amp;rdquo;, I can just use TLS and that is the end of it?&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;If the machine is compromised, do we give up on security because we aren&amp;rsquo;t responsible for the network?&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;What is the difference between application security and network security? Aren&amp;rsquo;t they just two aspects of the same thing?&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;If I have implemented TLS for communication, have I fixed all of the network security problems?&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;cloud-identify-risks-csp-evaluation&#34;&gt;CSP Evaluation&lt;/h1&gt;
&lt;p&gt;CSPs are constantly changing their terms and conditions, as well as many other components and aspects of what they offer. I have compiled a set of must-answer questions to quiz your CSP with as part of your threat modelling before (or even after) you sign their service agreement.&lt;br&gt;
Most of these questions were already part of my &lt;a href=&#34;https://binarymist.io/event/saturn-2015-talk-does-your-cloud-solution-look-like-a-mushroom/&#34;&gt;Cloud vs In-house talk&lt;/a&gt; at the Saturn Architects conference I spoke at. I recommend using these as a basis for identifying risks that are important for you to consider. This should make you well armed to come up with countermeasures and think of any additional risks.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Do you keep a signed audit log of what actions users performed, and when, via UIs and APIs?&lt;/p&gt;
&lt;p&gt;Both authorised and unauthorised users are more careful about the actions they take, or do not take, when they know their actions are being recorded and are potentially being watched&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;How do you enact the shared responsibility model between CSPs and their customers? Please explain your role and my role in the protection of my and my customers data.&lt;/p&gt;
&lt;p&gt;You will almost certainly not have complete control over the data you entrust to your CSP, but they will also not assume responsibility over the data you entrust to them, or how it is accessed. One example of this might be, how do you preserve secrecy for data at rest? For example, are you using the most suitable Key Derivation Function (KDF) as I discuss in depth in the &lt;a href=&#34;https://f1.holisticinfosecforwebdevelopers.com/chap06.html#web-applications-countermeasures-data-store-compromise-which-kdf-to-use&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Web Applications chapter&lt;/a&gt; of &lt;a href=&#34;http://f1.holisticinfosecforwebdevelopers.com&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Holistic Info-Sec for Web Developers, Fascicle 1&lt;/a&gt; and adjusting the number of iterations applied each year (as discussed in the &lt;a href=&#34;https://f1.holisticinfosecforwebdevelopers.com/chap06.html#web-applications-countermeasures-lack-of-authentication-authorisation-session-management-technology-and-design-decisions-membershipreboot&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;MembershipReboot&lt;/a&gt; subsection of the &lt;a href=&#34;https://f1.holisticinfosecforwebdevelopers.com/chap06.html#web-applications&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Web Applications chapter&lt;/a&gt; of Holistic Info-Sec for Web Developers Fascicle 1) to the secrets stored in your data stores? The data you hand over to your CSP is no more secure than I discuss in the Management of Application Secrets subsections of the Web Applications chapter of Holistic Info-Sec for Web Developers Fascicle 1, and in many cases has the potential to be less secure for some of the following reasons:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;An often encountered false assumption is that somehow the data you provide is safer by default on your CSP&amp;rsquo;s network&lt;/li&gt;
&lt;li&gt;Your CSP can be forced by governing authorities to give up the data you entrust to them, as we discuss in the &lt;a href=&#34;#cloud-identify-risks-cloud-service-provider-vs-in-house-giving-up-secrets&#34;&gt;Giving up Secrets&lt;/a&gt; subsection&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Do you encrypt all communications between servers within your data centres as well as your service providers?&lt;/p&gt;
&lt;p&gt;How is your data encrypted in transit (as discussed in the Management of Application Secrets subsections of the Web Applications chapter)? In reality, you have no idea what paths it will take once in your CSPs possession, and could very well be intercepted without your knowledge.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;You have little to no control over the network path that the data you provide will travel on&lt;/li&gt;
&lt;li&gt;There are more parties involved in your CSPs infrastructure than on your own network&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Do you provide access to logs, if so, what sort of access, and to what sort of logs?&lt;/p&gt;
&lt;p&gt;Hopefully you will have easy access to any and all logs, just as you would if it was your own network. That includes hosts, routing, firewall, and any other service logs&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;What is your process around terminating my contract with you and/or moving to another CSP?&lt;/p&gt;
&lt;p&gt;No CSP is going to last forever, termination or migration is inevitable, it is just a matter of when&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Where do your servers, processes and data reside physically?&lt;/p&gt;
&lt;p&gt;As we discuss a little later in the Cloud Services Provider vs In-house subsection of Countermeasures, your data is governed by different people and jurisdictions depending on where it physically resides. CSPs have data centres in different countries and jurisdictions, each having different data security laws&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Who can view the data I store in the Cloud?&lt;/p&gt;
&lt;p&gt;Who has access to view this data? What checks and controls are in place to make sure that this data cannot be exfiltrated?&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;What is your Service Level Agreement (SLA) for uptime?&lt;/p&gt;
&lt;p&gt;Make sure you are aware of what the uptime promises mean in terms of real time. Some CSPs will allow 99.95% uptime if you are running on a single availability zone, but closer to 100% if you run on multiple availability zones. Some CSPs do not have a SLA at all.&lt;/p&gt;
&lt;p&gt;CSPs will often provide credits for the downtime, but these credits in many cases may not cover the losses you encounter during high traffic events&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Are you ISO/IEC 27001:2013 Certified? If so, what is within its scope?&lt;/p&gt;
&lt;p&gt;If the CSP can answer this with a &amp;ldquo;everything&amp;rdquo; and prove it, they have done a lot of work to make this possible. This shows a certain level of commitment to their security posture. Just be aware, as with any certification, it is just that, it doesn&amp;rsquo;t necessarily prove sound security&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Do you allow your customers to carry out regular penetration testing of production and/or test environments, and allow the network to be in-scope?&lt;/p&gt;
&lt;p&gt;CSPs that allow penetration testing of their environments demonstrate that they embrace transparency and openness. If their networks stand up to penetration tests they obviously take security seriously. Ideally, this is what you are looking for. CSPs that do not permit penetration testing of their environments are usually trying to hide something. It may be that they know they have major insecurities, or a skills shortage in terms of security professionals. Worse, they may be unaware of where their security stature lies and are not willing to have their faults demonstrated&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Do you have bug bounty programmes running, if so, what do they look like?&lt;/p&gt;
&lt;p&gt;This is another example if their programme is run well, it conveys that the CSP is open and transparent about their security faults and are willing to mitigate them as soon as possible&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt; &lt;/p&gt;
&lt;h3 id=&#34;cloud-identify-risks-storage-of-secrets-private-key-abuse-ssh&#34;&gt;SSH&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://f1.holisticinfosecforwebdevelopers.com/chap03.html#vps-countermeasures-disable-remove-services-harden-what-is-left-ssh&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;SSH&lt;/a&gt; key-pair auth is no better than password auth if it is abused in the following way, in-fact it may even be worse. I have seen some organisations who store a single private key with no pass-phrase for all of their EC2 instances in their developer wiki. All or many of the developers have access to this, with the idea being that they just copy the key from the wiki to their local &lt;code&gt;~/.ssh/&lt;/code&gt;. There are a number of things wrong with this.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Private key is not private if it is shared amongst the team&lt;/li&gt;
&lt;li&gt;No pass-phrase, means no second factor of authentication&lt;/li&gt;
&lt;li&gt;Because there is only one user (single key-pair) being used on the VPSs, there is also no audit trail&lt;/li&gt;
&lt;li&gt;The weakest link is the weakest wiki password of all the developers, and we all know how weak that is likely to be, with a bit of reconnaissance, probably guessable in a few attempts without any password profiling tools. I have discussed this and demonstrated a collection of password profiling tools in the &amp;ldquo;Weak Password Strategies&amp;rdquo; subsection of the People chapter of &lt;a href=&#34;https://f0.holisticinfosecforwebdevelopers.com&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Fascicle 0&lt;/a&gt;. Once the attacker has the weakest password, then they own all of the EC2 (if on AWS) instances, or any resource that is using key-pair authentication. If the organisation is failing this badly, then they almost certainly will not have any password complexity constraints on their wiki either&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Most developers will also blindly accept what they think are the server key fingerprints without verifying them, which opens them up to a MItM attack, as discussed in the VPS chapter under the &lt;a href=&#34;https://f1.holisticinfosecforwebdevelopers.com/chap03.html#vps-countermeasures-disable-remove-services-harden-what-is-left-ssh-establishing-your-ssh-servers-key-fingerprint&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;SSH subsection&lt;/a&gt;. This quickly moves from just being a technical issue to a cultural one, where people are trained to accept that the server is who it says it is. The fact that they have to verify the fingerprint is essentially a step that gets in their way.&lt;/p&gt;
&lt;h3 id=&#34;cloud-identify-risks-storage-of-secrets-private-key-abuse-tls&#34;&gt;TLS&lt;/h3&gt;
&lt;p&gt;When Docker reads the instructions in the following &lt;code&gt;Dockerfile&lt;/code&gt;, an image is created that copies your certificate, private key, and any other secrets you have declared, and adds them to an additional layer and forms the resulting image. Both &lt;code&gt;COPY&lt;/code&gt; and &lt;code&gt;ADD&lt;/code&gt; will bake what ever you are copying or adding into an additional layer or delta, as discussed in the Consumption from Registries subsection in my &lt;a href=&#34;https://binarymist.io/publication/docker-security/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Docker Security book&lt;/a&gt;. Whoever can access this image from a public or less public registry now has access to your certificate and even worse your private key.&lt;/p&gt;
&lt;p&gt;Anyone can see how these images were built using the following tools:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/CenturyLinkLabs/dockerfile-from-image&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;dockerfile-from-image&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://imagelayers.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;ImageLayers&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The &lt;code&gt;ENV&lt;/code&gt; command similarly adds the &lt;code&gt;dirty little secret&lt;/code&gt; value as the &lt;code&gt;mySecret&lt;/code&gt; key into the image layer.&lt;/p&gt;
&lt;h6 id=&#34;private-key-abuse-with-dockerfile&#34;&gt;Private key abuse with Dockerfile&lt;/h6&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;FROM nginx

&lt;span style=&#34;color:#75715e&#34;&gt;# ...&lt;/span&gt;
COPY /host-path/star.mydomain.com.cert /etc/nginx/certs/my.cert
COPY /host-path/star.mydomain.com.key /etc/nginx/certs/my.key
ENV mySecret&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;dirty little secret&amp;#34;&lt;/span&gt;
COPY /host-path/nginx.conf /etc/nginx/nginx.conf 
&lt;span style=&#34;color:#75715e&#34;&gt;# ...&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt; &lt;/p&gt;
&lt;h1 id=&#34;cloud-countermeasures-violations-of-least-privilege&#34;&gt;Violations of &lt;a href=&#34;https://f1.holisticinfosecforwebdevelopers.com/chap06.html#web-applications-countermeasures-management-of-application-secrets-least-privilege&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Least Privilege&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;When you create IAM policies, grant only the permissions required to perform the task(s) necessary for given users. If the user needs additional permissions, then they can be added, rather than adding everything up front and potentially having to remove again at some stage. Adding as required, rather than removing as required, will cause much less friction technically and socially.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;For example, &lt;a href=&#34;https://docs.aws.amazon.com/IAM/latest/UserGuide/best-practices.html#grant-least-privilege&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;in AWS&lt;/a&gt;&lt;/strong&gt;, you need to keep a close watch on which &lt;a href=&#34;https://docs.aws.amazon.com/IAM/latest/UserGuide/access_permissions.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;permissions&lt;/a&gt; are assigned to &lt;a href=&#34;https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;policies&lt;/a&gt; that your groups and roles have applied, and subsequently, which groups and roles your users are in or part of.&lt;/p&gt;
&lt;p&gt;This is the recommended sequence for granting least privilege in AWS, other CSPs will be similar:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;First, work out which permissions a given user requires&lt;/li&gt;
&lt;li&gt;Create or select an existing group or role&lt;/li&gt;
&lt;li&gt;Attach policy to the group or role that has the permissions that your given user requires. You can select existing policies or create new ones&lt;/li&gt;
&lt;li&gt;Add the given user to the group or role&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Regularly review all of the IAM policies you are using, making sure only the required permissions (Services, Access Levels, and Resources) are available to the users and/or groups attached to the specific policies.&lt;/p&gt;
&lt;p&gt;Enable &lt;a href=&#34;https://docs.aws.amazon.com/IAM/latest/UserGuide/best-practices.html#enable-mfa-for-privileged-users&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Multi Factor Authentication&lt;/a&gt; (MFA) on the root user, and all IAM users with console access, especially privileged users at a minimum. AWS provides the ability to mandate that users use MFA, you can do this by creating a new managed policy based on the AWS guidance to &lt;a href=&#34;https://docs.aws.amazon.com/IAM/latest/UserGuide/tutorial_users-self-manage-mfa-and-creds.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Enable Your Users to Configure Their Own Credentials and MFA Settings&lt;/a&gt;. Attach the new policy to a group that you have created and add users that must use MFA to that group.&lt;br&gt;
This process was pointed out to me by Scott Piper during our &lt;a href=&#34;https://binarymist.io/publication/ser-podcast-cloud-security/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Cloud Security interview&lt;/a&gt; by way of his &lt;a href=&#34;https://duo.com/blog/potential-gaps-in-suggested-amazon-web-services-security-policies-for-mfa&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;blog post&lt;/a&gt; and generous Github pull request.&lt;/p&gt;
&lt;p&gt;The &lt;a href=&#34;https://aws.amazon.com/blogs/security/remove-unnecessary-permissions-in-your-iam-policies-by-using-service-last-accessed-data/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Access Advisor&lt;/a&gt; tab, is visible on the IAM console details page for Users, Groups, Roles, or Policies after you select a list item. This provides information about which services are accessible for any of your users, groups, or roles. This can also be helpful for auditing permissions that should not be available to any of your users who are part of the group, role or policy you selected.&lt;/p&gt;
&lt;p&gt;The &lt;a href=&#34;https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_testing-policies.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;IAM Policy Simulator&lt;/a&gt; is accessible from the IAM console. This is good for granular reporting on the permissions of your specific Users, Groups and Roles, filtered by service and actions.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://aws.amazon.com/premiumsupport/trustedadvisor/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;AWS Trusted Advisor&lt;/a&gt; should be run periodically to check for security issues. It is accessible from the &lt;a href=&#34;https://console.aws.amazon.com/trustedadvisor/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Console&lt;/a&gt;, CLI and API. Trusted Advisor has a collection of core checks and recommendations which are free to use. These include security groups, specific ports unrestricted, IAM use, MFA on root user, EBS and RDS public snapshots.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Running services as root&lt;/strong&gt;: Make sure that Docker containers are not running under the root account. There are full details in my &lt;a href=&#34;https://binarymist.io/publication/docker-security/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Docker Security book&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Configuration Settings Changed Ad Hoc&lt;/strong&gt;: One option is to have solid change control in place. &lt;a href=&#34;https://aws.amazon.com/config/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;AWS Config&lt;/a&gt; can assist with this. &lt;a href=&#34;https://docs.aws.amazon.com/config/latest/developerguide/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;AWS Config&lt;/a&gt; continuously monitors and records how the AWS resources were configured and how they have changed, including how they are related to each other. This enables you to assess, audit, and evaluate the configurations of your AWS resources, and have notifications sent to you when AWS Config detects a violation, including created, modified or deleted rules changes.&lt;/p&gt;
&lt;p&gt;AWS Config records IAM policies assigned to users, groups, or roles, and EC2 security groups, including port rules. Changes to your configuration settings can trigger Amazon Simple Notification Service (SNS) notifications, which you can have sent to your personnel tasked with controlling changes to your configurations.&lt;/p&gt;
&lt;p&gt;Your custom rules can be codified and therefore source controlled. AWS calls this Compliance as Code. I discussed AWS CloudTrail briefly in item 1 of the &lt;a href=&#34;#cloud-countermeasures-csp-evaluation&#34;&gt;CSP Evaluation&lt;/a&gt; countermeasures subsection. AWS Config is integrated with CloudTrail, which captures all API calls from AWS Config console or API, SDKs, CLI tools, and other AWS services. The information collected by CloudTrail provides insight on what request was made, from which IP address, by who, and when&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Machine Instance Access To Open&lt;/strong&gt;: Reduce your attack surface by disabling access to your machine instances from &lt;em&gt;any&lt;/em&gt; source IP address&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;There are also a collection of IAM specific items that you should review in the Identity and Access Management subsection of the &lt;a href=&#34;https://d0.awsstatic.com/whitepapers/compliance/AWS_CIS_Foundations_Benchmark.pdf&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CIS AWS Foundations document&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;cloud-countermeasures-violations-of-least-privilege-machine-instance-single-user-root&#34;&gt;Machine Instance Single User Root&lt;/h2&gt;
&lt;p&gt;As part of the VPS and container builds, there should be &lt;a href=&#34;https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/managing-users.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;specific users created&lt;/a&gt; for specific jobs, every user within your organisation that needs VPS access should have their own user account on every VPS, including &lt;a href=&#34;#cloud-countermeasures-storage-of-secrets-private-key-abuse-ssh&#34;&gt;SSH access&lt;/a&gt; if required (ideally this should be automated). With Docker, I discussed how this is done in the &lt;code&gt;Dockerfile&lt;/code&gt; in my &lt;a href=&#34;https://binarymist.io/publication/docker-security/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Docker Security book&lt;/a&gt; and &lt;a href=&#34;https://binarymist.io/blog/2018/03/31/docker-security/#the-default-user-is-root&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;blog post&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Drive a &lt;a href=&#34;https://docs.aws.amazon.com/IAM/latest/UserGuide/best-practices.html#grant-least-privilege&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;least privilege policy&lt;/a&gt; around this, configuring a strong &lt;a href=&#34;https://docs.aws.amazon.com/IAM/latest/UserGuide/best-practices.html#configure-strong-password-policy&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;password policy&lt;/a&gt; for your users, and implement &lt;a href=&#34;https://aws.amazon.com/iam/details/mfa/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;multi-factor authentication&lt;/a&gt;, which will help with poor password selection. I discuss this in more depth in the &lt;a href=&#34;#cloud-countermeasures-storage-of-secrets&#34;&gt;Storage of Secrets&lt;/a&gt; subsection.&lt;/p&gt;
&lt;h2 id=&#34;cloud-countermeasures-violations-of-least-privilege-csp-account-single-user-root&#34;&gt;CSP Account Single User Root&lt;/h2&gt;
&lt;p&gt;As I discuss in the &lt;a href=&#34;#cloud-countermeasures-storage-of-secrets-credentials-and-other-secrets&#34;&gt;Credentials and Other Secrets&lt;/a&gt; Countermeasures subsection of this chapter, create multiple accounts with least privileges required for each; the root user should hardly ever be used. Create groups and attach restricted policies to them, then add the specific users to them.&lt;/p&gt;
&lt;p&gt;Also as discussed in the &lt;a href=&#34;#cloud-countermeasures-storage-of-secrets-credentials-and-other-secrets-entered-by-people-manually&#34;&gt;Credentials and Other Secrets&lt;/a&gt; countermeasures subsection, there should be almost no reason to generate key(s) for the AWS Command Line Tools for the AWS account root user. But if you do, consider setting up notifications for when they are used. As usual, AWS has plenty of &lt;a href=&#34;https://aws.amazon.com/blogs/security/how-to-receive-notifications-when-your-aws-accounts-root-access-keys-are-used/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;documentation&lt;/a&gt;
on the topic.&lt;/p&gt;
&lt;p&gt;Another idea is to set-up monitoring and notifications on activity of your AWS account root user. AWS &lt;a href=&#34;https://aws.amazon.com/blogs/mt/monitor-and-notify-on-aws-account-root-user-activity/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;documentation&lt;/a&gt; explains how to do this.&lt;/p&gt;
&lt;p&gt;There are also a collection of monitoring specific items that you should review in the Monitoring subsection of the &lt;a href=&#34;https://d0.awsstatic.com/whitepapers/compliance/AWS_CIS_Foundations_Benchmark.pdf&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CIS AWS Foundations document&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Another great idea is to generate an AWS key &lt;a href=&#34;https://canarytokens.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Canarytoken&lt;/a&gt; from canarytokens.org, and put it somewhere more obvious than your real AWS key(s). When someone uses it, you will be automatically notified. I discussed these with Haroon Meer on the Software Engineering Radio &lt;a href=&#34;https://binarymist.io/publication/ser-podcast-network-security/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Network Security&lt;/a&gt; podcast. &lt;a href=&#34;https://twitter.com/HeyJayza&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Jay&lt;/a&gt; also wrote a &lt;a href=&#34;http://blog.thinkst.com/2017/09/canarytokens-new-member-aws-api-key.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;blog post&lt;/a&gt; on the thinkst blog on how you can set this up, and what the inner workings look like.&lt;/p&gt;
&lt;p&gt;Also consider rotating your IAM access keys for your CSP services. AWS EC2, for example, provides &lt;a href=&#34;https://aws.amazon.com/blogs/security/how-to-rotate-access-keys-for-iam-users/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;auto-expire, auto-renew&lt;/a&gt; access keys when using roles.&lt;/p&gt;
&lt;p&gt; &lt;/p&gt;
&lt;h3 id=&#34;cloud-countermeasures-storage-of-secrets-private-key-abuse-ssh&#34;&gt;SSH&lt;/h3&gt;
&lt;p&gt;There are many ways to harden SSH as we discussed in the &lt;a href=&#34;https://f1.holisticinfosecforwebdevelopers.com/chap03.html#vps-countermeasures-disable-remove-services-harden-what-is-left-ssh&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;SSH&lt;/a&gt; subsection of the VPS chapter of Holistic Info-Sec for Web Developers, Fascicle 1. Usually the issue will be specific to lack of knowledge, desire and a dysfunctional &lt;a href=&#34;https://blog.binarymist.net/2014/04/26/culture-in-the-work-place/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;culture&lt;/a&gt; in the work place. You will need to address the people issues before looking at basic SSH hardening techniques.&lt;/p&gt;
&lt;p&gt;Ideally, SSH access should be reduced to a selected few. Most of the work we do now by SSHing should be automated. If you review the commands in history on most VPSs, the majority of the commands are either deployment or monitoring which should all be &lt;a href=&#34;https://github.com/binarymist/aws-docker-host&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;automated&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;When you create an AWS EC2 instance you can create a key pair &lt;a href=&#34;https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-key-pairs.html#having-ec2-create-your-key-pair&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;using EC2&lt;/a&gt; or you can &lt;a href=&#34;https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-key-pairs.html#how-to-generate-your-own-key-and-import-it-to-aws&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;provide your own&lt;/a&gt;. Either way, to be able to log-in to your instance, you need to have provided EC2 with the public key of your key pair and specified it by name.&lt;/p&gt;
&lt;p&gt;Every user should have their &lt;a href=&#34;https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-key-pairs.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;own key-pair&lt;/a&gt;, the private part should always be private, kept in the users local &lt;code&gt;~/.ssh/&lt;/code&gt; directory (not the server) with permissions &lt;code&gt;600&lt;/code&gt; or more restrictive, and not shared on your developer wiki, or anywhere else for that matter. The public part can be put on every server that the user needs access to. There is no excuse for users not to have their own key pair, you can have up to five thousand key pairs per AWS region. AWS has &lt;a href=&#34;https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-key-pairs.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;clear directions&lt;/a&gt; on how to create additional users and provide SSH access with their own key pairs.&lt;/p&gt;
&lt;p&gt;For generic confirmation of the host&amp;rsquo;s SSH key fingerprint when prompted before establishing the SSH connection, follow the procedure I laid out for &lt;a href=&#34;https://f1.holisticinfosecforwebdevelopers.com/chap03.html#vps-countermeasures-disable-remove-services-harden-what-is-left-ssh-establishing-your-ssh-servers-key-fingerprint&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Establishing your SSH Servers Key Fingerprint&lt;/a&gt; in the VPS chapter of Holistic Info-Sec for Web Developers, Fascicle 1, and make it organisational policy. We should never blindly accept key fingerprints. The key fingerprints should be stored in a relatively secure place, so that only trusted parties can modify them. I would like to see, as part of the server creation process, the entity (probably the wiki) that specifies the key fingerprints is automatically updated by something on the VPS that keeps watch of the key fingerprints. Something like &lt;a href=&#34;https://f1.holisticinfosecforwebdevelopers.com/chap03.html#vps-countermeasures-lack-of-visibility-proactive-monitoring-getting-started-with-monit&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Monit&lt;/a&gt;, would be capable of the monitoring and executing a script to do this.&lt;/p&gt;
&lt;p&gt;To SSH to an EC2 instance, you will have to view the console output of the keys being generated. You can see this &lt;strong&gt;only for the first run&lt;/strong&gt; of the instance when it is being created, this can be seen by first fetching &lt;a href=&#34;https://console.aws.amazon.com&#34;&gt;https://console.aws.amazon.com&lt;/a&gt;, then:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Click the &amp;ldquo;EC2&amp;rdquo; link&lt;/li&gt;
&lt;li&gt;Click &amp;ldquo;Instances&amp;rdquo; in the left column&lt;/li&gt;
&lt;li&gt;Click the instance name you want&lt;/li&gt;
&lt;li&gt;Click the select button &amp;ldquo;Actions&amp;rdquo; and choose &amp;ldquo;Get System Log&amp;rdquo; (a.k.a. &amp;ldquo;Console Output&amp;rdquo;)&lt;/li&gt;
&lt;li&gt;In the console output, you should see the keys being generated. Record them&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Then, to SSH to your EC2 instance, the command to use can be seen by fetching&lt;br&gt;
&lt;a href=&#34;https://console.aws.amazon.com&#34;&gt;https://console.aws.amazon.com&lt;/a&gt;, then:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;EC2&lt;/li&gt;
&lt;li&gt;Instances&lt;/li&gt;
&lt;li&gt;Select your instance&lt;/li&gt;
&lt;li&gt;Click the Connect button for details&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;cloud-countermeasures-storage-of-secrets-private-key-abuse-tls&#34;&gt;TLS&lt;/h3&gt;
&lt;p&gt;So, how do we stop baking secrets into our Docker images?&lt;/p&gt;
&lt;p&gt;The easiest way is to avoid adding secrets to the process of building your images. You can add them at run time in several ways. If you have a look at Namespaces in my &lt;a href=&#34;https://binarymist.io/publication/docker-security/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Docker Security book&lt;/a&gt;, also discussed in my &lt;a href=&#34;https://binarymist.io/blog/2018/03/31/docker-security/#namespaces-risks&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Docker Security blog post&lt;/a&gt;, we used volumes. This allows us to keep the secrets entirely out of the image and only include in the container as mounted host directories, rather than adding those secrets to the &lt;code&gt;Dockerfile&lt;/code&gt;:&lt;/p&gt;
&lt;h6 id=&#34;mitigate-private-key-abuse-via-terminal&#34;&gt;Mitigate private key abuse via terminal&lt;/h6&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;docker run -d -p 443:443 -v /host-path/star.mydomain.com.cert:/etc/nginx/certs/my.cert -v /host-path/star.mydomain.com.key:/etc/nginx/certs/my.key -e &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;mySecret=dirty little secret&amp;#34;&lt;/span&gt; nginx&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;An even easier technique is to just implement adding of secrets in the &lt;code&gt;docker-compose.yml&lt;/code&gt; file, thus saving time when you run the container:&lt;/p&gt;
&lt;h6 id=&#34;mitigate-private-key-abuse-using-docker-composeyml&#34;&gt;Mitigate private key abuse using docker-compose.yml&lt;/h6&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;nginx:
    build: .
    ports:
        - &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;443:443&amp;#34;&lt;/span&gt;
    volumes:
        - /host-path/star.mydomain.com.key:/etc/nginx/ssl/nginx.key
        - /host-path/star.mydomain.com.cert:/etc/nginx/ssl/nginx.crt
        - /host-path/nginx.conf:/etc/nginx/nginx.conf
    env_file:
        - /host-path/secrets.env&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Using the &lt;code&gt;env_file&lt;/code&gt; we can hide our environment variables in the &lt;code&gt;.env&lt;/code&gt; file.&lt;br&gt;
Our &lt;code&gt;Dockerfile&lt;/code&gt; would now look like the following, even our config is volume mounted and will no longer reside in our image:&lt;/p&gt;
&lt;h6 id=&#34;mitigate-private-key-abuse-using-dockerfile&#34;&gt;Mitigate private key abuse using Dockerfile&lt;/h6&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;FROM nginx

&lt;span style=&#34;color:#75715e&#34;&gt;# ...&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# ...&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt; &lt;/p&gt;
&lt;h3 id=&#34;cloud-countermeasures-storage-of-secrets-credentials-and-other-secrets-entered-by-people-manually&#34;&gt;Entered by People (manually)&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Protecting against outsiders&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The most effective alternative to storing user-names and passwords in an insecure manner is to use a group or team password manager. There are quite a few offerings available with all sorts of different attributes. The following are some of the points you will need to consider as part of your selection process:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Cost in terms of money&lt;/li&gt;
&lt;li&gt;Cost in terms of set-up and maintenance&lt;/li&gt;
&lt;li&gt;Closed or open source. If you care about security, which you must if you are considering a team password manager, it is important to see how secrets are handled. I need to be able to see how the code is written, and which &lt;a href=&#34;https://f1.holisticinfosecforwebdevelopers.com/chap06.html#web-applications-countermeasures-data-store-compromise-which-kdf-to-use&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Key Derivation Functions&lt;/a&gt; (KDFs) and &lt;a href=&#34;https://f1.holisticinfosecforwebdevelopers.com/chap06.html#web-applications-identify-risks-cryptography-on-the-client&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;cyphers&lt;/a&gt; are used. If it is of high quality, we can have more confidence that our precious sensitive pieces of information are, in fact, going to be private&lt;/li&gt;
&lt;li&gt;Do you need a web client?&lt;/li&gt;
&lt;li&gt;Do you need a mobile client (iOS, Android)?&lt;/li&gt;
&lt;li&gt;What platforms does it need to support?&lt;/li&gt;
&lt;li&gt;Does it need to be able to manage secrets of multiple customers?&lt;/li&gt;
&lt;li&gt;Auditing of user actions? Who is accessing and changing what?&lt;/li&gt;
&lt;li&gt;Ability to be able to lock out users, when they leave the organisation, for example?&lt;/li&gt;
&lt;li&gt;Multi-factor authentication&lt;/li&gt;
&lt;li&gt;Options: Does it have all the features you need?&lt;/li&gt;
&lt;li&gt;Who is behind the offering? Are they well known for creating solid, reliable, secure solutions?&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The following are my personal top three, with the first being my preference, based on research I performed for one of my customers recently. All the points above were considered for a collection of about ten team password managers that I reviewed:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;http://pleasantsolutions.com/PasswordServer/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Pleasant Password Server&lt;/a&gt; (KeePass backed)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.manageengine.com/products/passwordmanagerpro/msp/features.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Password Manager Pro&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.lastpass.com/teams&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;LastPass&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;Protecting against insiders&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The above alone is not going to stop an account take over if you are sharing the likes of the AWS account root user email and password, even if it is in a group password manager. As AWS has &lt;a href=&#34;https://docs.aws.amazon.com/IAM/latest/UserGuide/getting-started_create-admin-group.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;already stated&lt;/a&gt;, only use the root user for what is absolutely essential (remember: least privilege). This is usually just to create an Administrators group to which you attach the &lt;code&gt;AdministratorAccess&lt;/code&gt; managed policy, then add any new IAM users to that group who require administrative access.&lt;/p&gt;
&lt;p&gt;Once you have created IAM users within an Administrators group as mentioned above, these users should set up groups to which you attach further restricted managed policies such as a group for &lt;code&gt;PowerUserAccess&lt;/code&gt;, a group for &lt;code&gt;ReadOnlyAccess&lt;/code&gt;, a group for &lt;code&gt;IAMFullAccess&lt;/code&gt;, progressively becoming more restrictive. Use the most restrictive group possible in order to achieve specific tasks, simply assigning users to the groups you have created.&lt;/p&gt;
&lt;p&gt;Be sure to use multi-factor authentication.&lt;/p&gt;
&lt;p&gt; &lt;/p&gt;
&lt;p&gt;Your AWS users are not assigned access keys to use for programmatic access by default, do not create these unless you actually need them, and again consider least privilege. There should be almost no reason to create an &lt;a href=&#34;https://docs.aws.amazon.com/IAM/latest/UserGuide/best-practices.html#lock-away-credentials&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;access key&lt;/a&gt; for the root user.&lt;/p&gt;
&lt;p&gt;Configure &lt;a href=&#34;https://docs.aws.amazon.com/IAM/latest/UserGuide/best-practices.html#configure-strong-password-policy&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;strong password policies&lt;/a&gt; for your users, make sure they are using personal password managers and know how to generate long complex passwords.&lt;/p&gt;
&lt;h3 id=&#34;cloud-countermeasures-storage-of-secrets-credentials-and-other-secrets-entered-by-software&#34;&gt;Entered by Software (automatically)&lt;/h3&gt;
&lt;p&gt;There are many places in software that require access to secrets, to communicate with services, APIs, datastores. Configuration and infrastructure management systems have a problem storing and accessing these secrets in a secure manner.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;HashiCorp &lt;a href=&#34;https://www.vaultproject.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Vault&lt;/a&gt;&lt;/strong&gt;. The most fully featured of these tools, has the following attributes/features:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/hashicorp/vault&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Open Source&lt;/a&gt; written in Go-Lang&lt;/li&gt;
&lt;li&gt;Deployable to any environment, including development machines&lt;/li&gt;
&lt;li&gt;Arbitrary key/value secrets can be stored of any type of data&lt;/li&gt;
&lt;li&gt;Supports cryptographic operations of the secrets&lt;/li&gt;
&lt;li&gt;Supports dynamic secrets, generating credentials on-demand for fine-grained security controls&lt;/li&gt;
&lt;li&gt;Auditing: Vault forces a mandatory lease contract with clients, which allows the rolling of keys, automatic revocation, along with multiple revocation mechanisms providing operators a break-glass for security incidents&lt;/li&gt;
&lt;li&gt;Non-repudiation&lt;/li&gt;
&lt;li&gt;Secrets protected in transit and at rest&lt;/li&gt;
&lt;li&gt;Not coupled to any specific configuration or infrastructure management system&lt;/li&gt;
&lt;li&gt;Can read secrets from configuration, infrastructure management systems and applications via its API&lt;/li&gt;
&lt;li&gt;Applications can query Vault for secrets to connect to services such as datastores, thus removing the need for these secrets to reside in configuration files (See the &lt;a href=&#34;#cloud-risks-that-solution-causes-storage-of-secrets-credentials-and-other-secrets-entered-by-software&#34;&gt;Risks that Solution Causes&lt;/a&gt; for the caveat)&lt;/li&gt;
&lt;li&gt;Requires multiple keys generally distributed to multiple individuals to read its encrypted secrets&lt;/li&gt;
&lt;li&gt;Check the &lt;a href=&#34;https://www.vaultproject.io/docs/secrets/index.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Secret Backends&lt;/a&gt; for integrations&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://docs.docker.com/engine/swarm/secrets/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Docker secrets&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Manages any sensitive data (including generic string or binary content up to 500 kb in size) that a &lt;a href=&#34;#cloud-countermeasures-storage-of-secrets-private-key-abuse-tls&#34;&gt;container needs at runtime&lt;/a&gt;, but you do not want to &lt;a href=&#34;#cloud-identify-risks-storage-of-secrets-private-key-abuse-tls&#34;&gt;store in the image&lt;/a&gt;, source control, or the host systems file-system as we did in the TLS section above&lt;/li&gt;
&lt;li&gt;Only available to Docker containers managed by Swarm (services). Swarm manages the secrets&lt;/li&gt;
&lt;li&gt;Secrets are stored in the Raft log, which is encrypted if using Docker 1.13 and higher&lt;/li&gt;
&lt;li&gt;Any given secret is only accessibly to services (Swarm managed container) that have been granted explicit access to the secret&lt;/li&gt;
&lt;li&gt;Secrets are decrypted and mounted into the container in an in-memory filesystem which defaults to &lt;code&gt;/run/secrets/&amp;lt;secret_name&amp;gt;&lt;/code&gt; in Linux, &lt;code&gt;C:\ProgramData\Docker\secrets&lt;/code&gt; in Windows&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://docs.ansible.com/ansible/latest/playbooks_vault.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Ansible Vault&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Ansible is an &lt;a href=&#34;https://github.com/ansible/ansible/blob/devel/docs/docsite/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Open Source&lt;/a&gt; configuration management tool, and has a simple secrets management feature.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Ansible tasks and handlers can be encrypted&lt;/li&gt;
&lt;li&gt;Arbitrary files, including binary data can be encrypted&lt;/li&gt;
&lt;li&gt;From version 2.3 can encrypt single values inside YAML files&lt;/li&gt;
&lt;li&gt;Suggested workflow is to check the encrypted files into source control for auditing purposes&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;AWS &lt;strong&gt;&lt;a href=&#34;https://aws.amazon.com/kms/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Key Management Service&lt;/a&gt;&lt;/strong&gt; (KMS)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Encrypt up to 4 KB of arbitrary data (passwords, keys)&lt;/li&gt;
&lt;li&gt;Supports cryptographic operations of the secrets: encrypt and decrypt&lt;/li&gt;
&lt;li&gt;Uses Hardware Security Modules (HSM)&lt;/li&gt;
&lt;li&gt;Integrated with AWS CloudTrail to provide auditing of all key usage&lt;/li&gt;
&lt;li&gt;AWS managed service&lt;/li&gt;
&lt;li&gt;Create, import and rotate keys&lt;/li&gt;
&lt;li&gt;Usage via AWS Management Console, SDK and CLI&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;AWS offers &lt;strong&gt;&lt;a href=&#34;https://aws.amazon.com/ec2/systems-manager/parameter-store/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Parameter Store&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Centralised store on AWS to manage configuration data, plain text, or encrypted secrets via AWS KMS&lt;/li&gt;
&lt;li&gt;All calls to the parameter store are recorded with AWS CloudTrail, supports access controls.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Also see the &lt;a href=&#34;#additional-resources&#34;&gt;Additional Resources&lt;/a&gt; section for other similar tools and resources.&lt;/p&gt;
&lt;p&gt; &lt;/p&gt;
&lt;h2 id=&#34;cloud-countermeasures-aws-additional-tooling&#34;&gt;Additional Tooling&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/Netflix/security_monkey/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Security Monkey&lt;/a&gt;: Monitors AWS and GCP accounts for policy changes, and alerts on insecure configurations, conceptually similar to AWS Config, as discussed in the &lt;a href=&#34;#cloud-countermeasures-violations-of-least-privilege&#34;&gt;Violations of Least Privilege&lt;/a&gt; countermeasures subsection. Security Monkey is free and open source. Although not strictly security related, the &lt;a href=&#34;https://github.com/Netflix/SimianArmy/wiki&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Simian Army&lt;/a&gt; tools from Netflix are also well worth mentioning if you are serious about doing things the right way in AWS. They include:
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/Netflix/SimianArmy/wiki/Chaos-Monkey&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Chaos Monkey&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/Netflix/SimianArmy/wiki/Janitor-Home&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Janitor Monkey&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/Netflix/SimianArmy/wiki/Conformity-Home&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Conformity Monkey&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://cloudsploit.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CloudSploit&lt;/a&gt;: Aims to solve the problem of misconfigured AWS accounts with background scanning through hundreds of resources, settings, and activity logs looking for potential issues. Their blog also has some good resources on it. Scan reports include in-depth remediation steps. Has a free and paid hosted tiers. Auto scanning scheduling for the paid plans. Is open source on &lt;a href=&#34;https://github.com/cloudsploit/scans&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;github&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://console.aws.amazon.com/inspector/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Amazon Inspector&lt;/a&gt;: At this time only targets EC2 instances. Inspector agent needs to be installed on all target EC2 instances&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/duo-labs/cloudmapper&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CloudMapper&lt;/a&gt; by Scott Piper for visualising your AWS environments. Along with his blog post at &lt;a href=&#34;https://duo.com/blog/introducing-cloudmapper-an-aws-visualization-tool&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;duo.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/donnemartin/awesome-aws&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Awesome AWS&lt;/a&gt; has many useful resources&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt; &lt;/p&gt;
&lt;h1 id=&#34;cloud-costs-and-trade-offs-violations-of-least-privilege&#34;&gt;Violations of Least Privilege&lt;/h1&gt;
&lt;p&gt;It is worth investing the effort to make sure only the required user permissions are granted. As discussed, there are tools you can use to help speed this process up and make it more accurate.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Running services as root&lt;/strong&gt;: Always start with the minimum permissions possible and add if necessary, it is far easier to add than to remove&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Configuration Settings Changed Ad Hoc&lt;/strong&gt;: Remember detection works where prevention fails. Where your change control fails, because it is decided not to use it, you need something to detect changes and notify someone who cares. For this, there are also other options specifically designed to perform this function. For a collection of such tools, review the &lt;a href=&#34;#cloud-countermeasures-aws-additional-tooling&#34;&gt;Tooling&lt;/a&gt; sections.&lt;/p&gt;
&lt;p&gt;You need to have these tools set up so that they are &lt;a href=&#34;https://blog.cloudsploit.com/the-importance-of-continual-auditing-in-the-cloud-8d22e0554639&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;continually auditing&lt;/a&gt; your infrastructure and notifying the person(s) responsible for issues resolution, rather than having people continually manually reviewing settings, permissions, and so forth&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Machine Instance Access To Open&lt;/strong&gt;: Set-up a bastion host and lock the source IP address down to the public facing IP address of your bastion host required to access your machine instances. I discussed locking the source IP address down in the &lt;a href=&#34;https://f1.holisticinfosecforwebdevelopers.com/chap03.html#vps-countermeasures-disable-remove-services-harden-what-is-left-ssh&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Hardening SSH subsection&lt;/a&gt; of the VPS chapter of Holistic Info-Sec for Web Developers, Fascicle 1.&lt;/p&gt;
&lt;p&gt;Your bastion host will be hardened as discussed throughout the VPS chapter. All authorised workers can VPN to the bastion host and SSH from there, or just SSH tunnel from wherever they are through the bastion host via port forwarding to any given machine instances.&lt;/p&gt;
&lt;p&gt;If you have Windows boxes you need to reach, you can tunnel RDP through your SSH tunnel, see my &lt;a href=&#34;https://binarymist.io/blog/2010/08/26/installation-of-ssh-on-64bit-windows-7-to-tunnel-rdp/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;blog post about this&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Rather than tunnelling, another option SSH gives us (using the &lt;code&gt;-A&lt;/code&gt; option) is to hop from the bastion host to your machine instances by forwarding the private key. This does include the risk that someone could gain access to your forwarded SSH agent connection, thus being able to use your private key while you have an SSH connection established. &lt;code&gt;ssh-add -c&lt;/code&gt; can provide some protection with this.&lt;/p&gt;
&lt;p&gt;If you do decide to use the &lt;code&gt;-A&lt;/code&gt; option, then you are essentially considering your bastion host as a trusted machine. I commented on the &lt;code&gt;-A&lt;/code&gt; option in the &lt;a href=&#34;https://f1.holisticinfosecforwebdevelopers.com/chap03.html#vps-countermeasures-disable-remove-services-harden-what-is-left-ssh-tunneling-ssh&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Tunnelling SSH&lt;/a&gt; subsection of the VPS chapter of Holistic Info-Sec for Web Developers, Fascicle 1. There is plenty of good &lt;a href=&#34;https://cloudacademy.com/blog/aws-bastion-host-nat-instances-vpc-peering-security/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;documentation&lt;/a&gt; on setting up the bastion host in AWS. AWS provides some &lt;a href=&#34;https://docs.aws.amazon.com/quickstart/latest/linux-bastion/architecture.html#best-practices&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Best Practices&lt;/a&gt; for security on bastion hosts, and also &lt;a href=&#34;https://aws.amazon.com/blogs/security/how-to-record-ssh-sessions-established-through-a-bastion-host/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;discusses&lt;/a&gt; recording the SSH sessions that your users establish through a bastion host for auditing purposes&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;&lt;em&gt;If you&amp;rsquo;re invested in the Cloud, and let&amp;rsquo;s face it, who isn&amp;rsquo;t now days, this book will provide visibility into what you may currently be doing wrong and how to secure your Cloud environments.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;btn btn-outline-primary&#34; href=&#34;https://leanpub.com/cloudsecurity-quickreference&#34; target=&#34;_blank&#34;&gt;&lt;i class=&#34;fab fa-leanpub&#34;&gt;&lt;/i&gt; &lt;b&gt;Get The Full Book&lt;/b&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;At this stage, it&amp;rsquo;s only $12 NZ, do not procrastinate with your organisations assets at risk, get your self a copy now.&lt;/p&gt;
&lt;br&gt;
&lt;p&gt;As always, &lt;a href=&#34;#comments&#34;&gt;let me know&lt;/a&gt; if there&amp;rsquo;s anything you don&amp;rsquo;t understand, or submit a &lt;a href=&#34;https://github.com/binarymist/BinaryMistBlog/pulls&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;pull request&lt;/a&gt; or open an &lt;a href=&#34;https://github.com/binarymist/BinaryMistBlog/issues&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;issue&lt;/a&gt; if you find any errors. 😃&lt;/p&gt;
&lt;h1 id=&#34;additional-resources&#34;&gt;Additional Resources&lt;/h1&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    &lt;p&gt;My latest podcast for Software Engineering Radio was with guest &amp;ldquo;Head of Cryptography Engineering at Tresorit, Péter Budai&amp;rdquo; on &lt;a href=&#34;https://binarymist.io/publication/ser-podcast-end-to-end-encryption/&#34;&gt;End to End Encryption&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Next up for guests on my interview schedule is &lt;a href=&#34;https://twitter.com/natashenka&#34;&gt;Natalie Silvanovich&lt;/a&gt; of the Google &lt;a href=&#34;https://googleprojectzero.blogspot.co.nz/2015/08/attacking-ecmascript-engines-with.html&#34;&gt;Project Zero&lt;/a&gt; team on the topic of Attack Surface Reduction. This should be released in a couple of months. Keep your eye on my &lt;a href=&#34;https://binarymist.io/publication/#8&#34;&gt;Publications&lt;/a&gt; if this interests you, or even leave a comment &lt;a href=&#34;#comments&#34;&gt;below&lt;/a&gt; and I&amp;rsquo;ll let you know when it&amp;rsquo;s available.&lt;/p&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;The following are the additional resources in the &lt;a href=&#34;https://binarymist.io/publication/cloud-security/&#34;&gt;Cloud Security&lt;/a&gt; book.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Interview I hosted with Scott Piper on Cloud Security&lt;/strong&gt;&lt;br&gt;
&lt;a href=&#34;https://binarymist.io/publication/ser-podcast-cloud-security/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://binarymist.io/publication/ser-podcast-cloud-security/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Secrets out of Docker images&lt;/strong&gt;&lt;br&gt;
&lt;a href=&#34;https://www.ctl.io/developers/blog/post/tutorial-protecting-sensitive-info-docker&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://www.ctl.io/developers/blog/post/tutorial-protecting-sensitive-info-docker&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Darkreading: 10 Password Managers For Business Use&lt;/strong&gt;&lt;br&gt;
&lt;a href=&#34;https://www.darkreading.com/endpoint/10-password-managers-for-business-use/d/d-id/1322326&#34;&gt;https://www.darkreading.com/endpoint/10-password-managers-for-business-use/d/d-id/1322326&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Using Vault with MySQL&lt;/strong&gt;&lt;br&gt;
&lt;a href=&#34;https://dzone.com/articles/using-vault-with-mysql&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://dzone.com/articles/using-vault-with-mysql&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Infrastructure Secret Management Overview&lt;/strong&gt;&lt;br&gt;
&lt;a href=&#34;https://gist.github.com/binarymist/66206419df712bd738c3d664542157d8&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://gist.github.com/binarymist/66206419df712bd738c3d664542157d8&lt;/a&gt;&lt;br&gt;
Forked from maxvt.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Secrets Management&lt;/strong&gt; show on Software Engineering Radio&lt;br&gt;
&lt;a href=&#34;http://www.se-radio.net/2017/12/se-radio-episode-311-armon-dadgar-on-secrets-management/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://www.se-radio.net/2017/12/se-radio-episode-311-armon-dadgar-on-secrets-management/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;flaws.cloud&lt;/strong&gt; AWS CTF by Scott Piper&lt;br&gt;
&lt;a href=&#34;http://flaws.cloud/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://flaws.cloud/&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Cloud Security - Quick Reference</title>
      <link>https://binarymist.io/publication/cloud-security/</link>
      <pubDate>Mon, 02 Apr 2018 00:00:00 +0000</pubDate>
      <guid>https://binarymist.io/publication/cloud-security/</guid>
      <description>&lt;p&gt;The book also covers:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Techniques and tools for storing and accessing secrets in the Cloud securely&lt;/li&gt;
&lt;li&gt;Risks and countermeasures of serverless offerings&lt;/li&gt;
&lt;li&gt;Infrastructure and configuration management techniques and tools&lt;/li&gt;
&lt;li&gt;An interview with Scott Piper (AWS security specialist)&lt;/li&gt;
&lt;li&gt;Many other tips, tricks and tools&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&#34;https://leanpub.com/cloudsecurity-quickreference&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;













&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;
        &lt;img alt=&#34;Cloud Security - Quick Reference&#34; srcset=&#34;
               /media/publication/title_page_cloud-security_720_huc32bfe701ea70199af6b38d1cbbdcf7d_105403_2f08adb9cb7f0bbee2cd056c626babfe.jpg 400w,
               /media/publication/title_page_cloud-security_720_huc32bfe701ea70199af6b38d1cbbdcf7d_105403_150be87133747b2c237d233d07f02d8d.jpg 760w,
               /media/publication/title_page_cloud-security_720_huc32bfe701ea70199af6b38d1cbbdcf7d_105403_1200x1200_fit_q90_lanczos.jpg 1200w&#34;
               src=&#34;https://binarymist.io/media/publication/title_page_cloud-security_720_huc32bfe701ea70199af6b38d1cbbdcf7d_105403_2f08adb9cb7f0bbee2cd056c626babfe.jpg&#34;
               width=&#34;587&#34;
               height=&#34;760&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Please note that the entire content of this book is included in The Cloud chapter of &lt;a href=&#34;https://f1.holisticinfosecforwebdevelopers.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Holistic InfoSec for Web Developers F1&lt;/a&gt;.&lt;/p&gt;
&lt;br&gt;
&lt;h5 id=&#34;errata-errors-typos-etc&#34;&gt;Errata (errors, typos, etc.)&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;Submit an &lt;a href=&#34;https://github.com/binarymist/cloudsecurity-quickreference/issues&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;issue&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Open &lt;a href=&#34;https://github.com/binarymist/cloudsecurity-quickreference/issues?q=is%3Aopen&amp;#43;is%3Aissue&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;issues&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Closed &lt;a href=&#34;https://github.com/binarymist/cloudsecurity-quickreference/issues?q=is%3Aissue&amp;#43;is%3Aclosed&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;issues&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Docker Security</title>
      <link>https://binarymist.io/blog/2018/03/31/docker-security/</link>
      <pubDate>Sat, 31 Mar 2018 00:00:00 +1300</pubDate>
      <guid>https://binarymist.io/blog/2018/03/31/docker-security/</guid>
      <description>&lt;p&gt;If you are a Software Developer/DevOps Engineer working with Docker, and are one of those types that take their profession seriously (hint: most people that call themselves Engineers do), believe that if a job is worth doing, it&amp;rsquo;s worth doing well, take quality, good design, and security seriously, then I may have just the book you&amp;rsquo;ve been looking for. 😌&lt;/p&gt;
&lt;p&gt;I recently released a book on &lt;a href=&#34;https://binarymist.io/tags/docker/&#34;&gt;Docker&lt;/a&gt; Security, which addresses many of the concerns with the default level of security around Docker and Docker deployments. The book is purposed to help Software Developers/DevOps Engineers address these concerns quickly. The following is a snapshot of what&amp;rsquo;s included in the book:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://binarymist.io/publication/docker-security/&#34;&gt;













&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;
        &lt;img alt=&#34;Docker Security Quick Reference&#34; srcset=&#34;
               /media/publication/title_page_docker-security_720_hufbfdc40a69121df1e8e12d60d596ff18_33085_fba40a7757c13a9d5aaf89f5d2b9a6a3.png 400w,
               /media/publication/title_page_docker-security_720_hufbfdc40a69121df1e8e12d60d596ff18_33085_08eda1ab82e35a5e1d438d2d93a4e431.png 760w,
               /media/publication/title_page_docker-security_720_hufbfdc40a69121df1e8e12d60d596ff18_33085_1200x1200_fit_lanczos_2.png 1200w&#34;
               src=&#34;https://binarymist.io/media/publication/title_page_docker-security_720_hufbfdc40a69121df1e8e12d60d596ff18_33085_fba40a7757c13a9d5aaf89f5d2b9a6a3.png&#34;
               width=&#34;587&#34;
               height=&#34;760&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div style=&#34;display: table;&#34;&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;1&lt;/th&gt;
&lt;th&gt;Habitat&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;Consumption from Registries&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;Doppelganger images&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;#the-default-user-is-root&#34;&gt;The Default User is Root ⭐&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;2&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;&lt;a href=&#34;#hardening-docker-host-engine-and-containers&#34;&gt;Hardening Docker Host, Engine and Containers&lt;/a&gt; ⭐&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;Haskell Dockerfile Linter&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;Lynis&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;Docker Bench&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;CoreOS Clair&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;Banyanops collector&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;Anchore&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;#twistLock&#34;&gt;TwistLock ⭐&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;Possible contenders to watch&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;#namespaces-risks&#34;&gt;Namespaces (Risks) ⭐&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;#namespaces-countermeasures&#34;&gt;Namespaces (Countermeasures ⭐)&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;Control Groups (Risks)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;Control Groups (Countermeasures)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;Capabilities (Risks)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;Capabilities (Countermeasures)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;Linux Security Modules (Risks)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;Linux Security Modules (Countermeasures)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;SecComp (Risks)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;SecComp (Countermeasures)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;#read-only-containers&#34;&gt;Read-only Containers ⭐&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;3&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;&lt;a href=&#34;#runc-and-where-it-fits-in&#34;&gt;runC and Where it Fits in &lt;/a&gt; ⭐&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;Using runC Standalone&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;4&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;Application Security&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;&lt;a href=&#34;#additional-resources&#34;&gt;Additional Resources&lt;/a&gt; ⭐&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;br&gt;
&lt;p&gt;&lt;strong&gt;⭐&lt;/strong&gt; I&amp;rsquo;ve provided a few of the sections from the book below, and linked to from the book contents above. Enjoy 😃&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;em&gt;Oh, and for less than the cost of a lunch you can own the complete book&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;btn btn-outline-primary&#34; href=&#34;https://leanpub.com/dockersecurity-quickreference&#34; target=&#34;_blank&#34;&gt;&lt;i class=&#34;fab fa-leanpub&#34;&gt;&lt;/i&gt; &lt;b&gt;Own The Book&lt;/b&gt;&lt;/a&gt;&lt;/p&gt;
&lt;br&gt;
&lt;hr&gt;
&lt;h1 id=&#34;the-default-user-is-root&#34;&gt;The Default User is Root&lt;/h1&gt;














&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;
        &lt;img alt=&#34;&#34; srcset=&#34;
               /media/post/2018/04/easy-common-veryeasy-moderate_hu70d63e5cf1c9df062ea1d2ca18c50de6_10063_95ab6a967b5c64744f00875ca16b5cec.png 400w,
               /media/post/2018/04/easy-common-veryeasy-moderate_hu70d63e5cf1c9df062ea1d2ca18c50de6_10063_772b271457e2639000f9ed5bc3c1af3b.png 760w,
               /media/post/2018/04/easy-common-veryeasy-moderate_hu70d63e5cf1c9df062ea1d2ca18c50de6_10063_1200x1200_fit_lanczos_2.png 1200w&#34;
               src=&#34;https://binarymist.io/media/post/2018/04/easy-common-veryeasy-moderate_hu70d63e5cf1c9df062ea1d2ca18c50de6_10063_95ab6a967b5c64744f00875ca16b5cec.png&#34;
               width=&#34;760&#34;
               height=&#34;17&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;p&gt;What is worse, Docker&amp;rsquo;s default is to run containers, and all commands / processes within a container as root. This can be seen by running the following command from the &lt;a href=&#34;https://benchmarks.cisecurity.org/tools2/docker/CIS_Docker_1.13.0_Benchmark_v1.0.0.pdf&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CIS_Docker_1.13.0_Benchmark&lt;/a&gt;:&lt;/p&gt;
&lt;h6 id=&#34;query-user-running-containers&#34;&gt;Query User running containers&lt;/h6&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;docker ps --quiet | xargs docker inspect --format &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;{{ .Id }}: User={{ .Config.User }}&amp;#39;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you have two containers running, and the user has not been specified, you will see something like the below, which means your two containers are running as root.&lt;/p&gt;
&lt;h6 id=&#34;result-of-user-running-containers-output&#34;&gt;Result of user running containers output&lt;/h6&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&amp;lt;container n Id&amp;gt;: User&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;
&amp;lt;container n+1 Id&amp;gt;: User&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Images derived from other images inherit the same user defined in the parent image explicitly or implicitly, so unless the image creator has specifically defined a non-root user, the user will default to root. That means all processes within the container will run as root.&lt;/p&gt;














&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;
        &lt;img alt=&#34;&#34; srcset=&#34;
               /media/post/2018/04/PreventionVERYEASY_hud825f5ad7266669b028309f9f5802c82_2587_68d9ea43367621c1bf6ba8ce3dc26de0.png 400w,
               /media/post/2018/04/PreventionVERYEASY_hud825f5ad7266669b028309f9f5802c82_2587_31c1826f3b20381b266d0f605bde2403.png 760w,
               /media/post/2018/04/PreventionVERYEASY_hud825f5ad7266669b028309f9f5802c82_2587_1200x1200_fit_lanczos_2.png 1200w&#34;
               src=&#34;https://binarymist.io/media/post/2018/04/PreventionVERYEASY_hud825f5ad7266669b028309f9f5802c82_2587_68d9ea43367621c1bf6ba8ce3dc26de0.png&#34;
               width=&#34;760&#34;
               height=&#34;18&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;p&gt;In order to run containers as a non-root user, the user needs to be added in the base image (&lt;code&gt;Dockerfile&lt;/code&gt;) if it is under your control, and set before any commands you want run as a non-root user. Here is an example of the &lt;a href=&#34;https://github.com/owasp/nodegoat&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;NodeGoat&lt;/a&gt; image:&lt;/p&gt;
&lt;h6 id=&#34;nodegoat-dockerfile&#34;&gt;NodeGoat Dockerfile&lt;/h6&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 1&lt;/span&gt;FROM node:4.4
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 2&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 3&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Create an environment variable in our image for the non-root user we want to use.&lt;/span&gt;
&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 4&lt;/span&gt;ENV user nodegoat_docker
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 5&lt;/span&gt;ENV workdir /usr/src/app/
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 6&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 7&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Home is required for npm install. System account with no ability to login to shell&lt;/span&gt;
&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 8&lt;/span&gt;RUN useradd --create-home --system --shell /bin/false $user
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 9&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;10&lt;/span&gt;RUN mkdir --parents $workdir
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;11&lt;/span&gt;WORKDIR $workdir
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;12&lt;/span&gt;COPY package.json $workdir
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;13&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;14&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# chown is required by npm install as a non-root user.&lt;/span&gt;
&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;15&lt;/span&gt;RUN chown $user:$user --recursive $workdir
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;16&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Then all further actions including running the containers should&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;17&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# be done under non-root user, unless root is actually required.&lt;/span&gt;
&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;18&lt;/span&gt;USER $user
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;19&lt;/span&gt;
&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;20&lt;/span&gt;RUN npm install
&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;21&lt;/span&gt;COPY . $workdir
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;22&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;23&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Permissions need to be reapplied, due to how docker applies root to new files.&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;24&lt;/span&gt;USER root
&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;25&lt;/span&gt;RUN chown $user:$user --recursive $workdir
&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;26&lt;/span&gt;RUN chmod --recursive o-wrx $workdir
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;27&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;28&lt;/span&gt;RUN ls -liah
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;29&lt;/span&gt;RUN ls ../ -liah
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;30&lt;/span&gt;USER $user&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;As you can see on line 4 we create our &lt;code&gt;nodegoat_docker&lt;/code&gt; user.&lt;br&gt;
On line 8 we add our non-root user to the image with no ability to login.&lt;br&gt;
On line 15 we change the ownership of the &lt;code&gt;$workdir&lt;/code&gt; so our non-root user has access to do the things that we normally have permissions to do without root, such as installing npm packages and copying files, as we see on line 20 and 21. But first we need to switch to our non-root user on line 18. On lines 25 and 26 we need to reapply ownership and permissions due to the fact that docker does not &lt;code&gt;COPY&lt;/code&gt; according to the user you are set to run commands as.&lt;/p&gt;
&lt;p&gt;Without reapplying the ownership and permissions of the non-root user as seen above on lines 25 and 26, the container directory listings would look like this:&lt;/p&gt;
&lt;h6 id=&#34;no-reapplication-of-ownership-and-permissions&#34;&gt;No reapplication of ownership and permissions&lt;/h6&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;Step &lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt; : RUN ls -liah
 ---&amp;gt; Running in f8692fc32cc7
total 116K
&lt;span style=&#34;color:#ae81ff&#34;&gt;13&lt;/span&gt; drwxr-xr-x   &lt;span style=&#34;color:#ae81ff&#34;&gt;9&lt;/span&gt; nodegoat_docker nodegoat_docker 4.0K Sep &lt;span style=&#34;color:#ae81ff&#34;&gt;13&lt;/span&gt; 09:00 .
&lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt; drwxr-xr-x   &lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt; root            root            4.0K Sep &lt;span style=&#34;color:#ae81ff&#34;&gt;13&lt;/span&gt; 09:00 ..
&lt;span style=&#34;color:#ae81ff&#34;&gt;65&lt;/span&gt; drwxr-xr-x   &lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt; root            root            4.0K Sep &lt;span style=&#34;color:#ae81ff&#34;&gt;13&lt;/span&gt; 08:59 .git
&lt;span style=&#34;color:#ae81ff&#34;&gt;53&lt;/span&gt; -rw-r--r--   &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; root            root             &lt;span style=&#34;color:#ae81ff&#34;&gt;178&lt;/span&gt; Sep &lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt; 04:22 .gitignore
&lt;span style=&#34;color:#ae81ff&#34;&gt;69&lt;/span&gt; -rw-r--r--   &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; root            root            1.9K Nov &lt;span style=&#34;color:#ae81ff&#34;&gt;21&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;2015&lt;/span&gt; .jshintrc
&lt;span style=&#34;color:#ae81ff&#34;&gt;61&lt;/span&gt; -rw-r--r--   &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; root            root              &lt;span style=&#34;color:#ae81ff&#34;&gt;55&lt;/span&gt; Nov &lt;span style=&#34;color:#ae81ff&#34;&gt;21&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;2015&lt;/span&gt; .nodemonignore
&lt;span style=&#34;color:#ae81ff&#34;&gt;58&lt;/span&gt; -rw-r--r--   &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; root            root             &lt;span style=&#34;color:#ae81ff&#34;&gt;715&lt;/span&gt; Sep &lt;span style=&#34;color:#ae81ff&#34;&gt;13&lt;/span&gt; 08:59 Dockerfile
&lt;span style=&#34;color:#ae81ff&#34;&gt;55&lt;/span&gt; -rw-r--r--   &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; root            root            6.6K Sep &lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt; 04:16 Gruntfile.js
&lt;span style=&#34;color:#ae81ff&#34;&gt;60&lt;/span&gt; -rw-r--r--   &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; root            root             11K Nov &lt;span style=&#34;color:#ae81ff&#34;&gt;21&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;2015&lt;/span&gt; LICENSE
&lt;span style=&#34;color:#ae81ff&#34;&gt;68&lt;/span&gt; -rw-r--r--   &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; root            root              &lt;span style=&#34;color:#ae81ff&#34;&gt;48&lt;/span&gt; Nov &lt;span style=&#34;color:#ae81ff&#34;&gt;21&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;2015&lt;/span&gt; Procfile
&lt;span style=&#34;color:#ae81ff&#34;&gt;64&lt;/span&gt; -rw-r--r--   &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; root            root            5.6K Sep &lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt; 04:22 README.md
&lt;span style=&#34;color:#ae81ff&#34;&gt;56&lt;/span&gt; drwxr-xr-x   &lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt; root            root            4.0K Nov &lt;span style=&#34;color:#ae81ff&#34;&gt;21&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;2015&lt;/span&gt; app
&lt;span style=&#34;color:#ae81ff&#34;&gt;66&lt;/span&gt; -rw-r--r--   &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; root            root             &lt;span style=&#34;color:#ae81ff&#34;&gt;527&lt;/span&gt; Nov &lt;span style=&#34;color:#ae81ff&#34;&gt;15&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;2015&lt;/span&gt; app.json
&lt;span style=&#34;color:#ae81ff&#34;&gt;54&lt;/span&gt; drwxr-xr-x   &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt; root            root            4.0K May &lt;span style=&#34;color:#ae81ff&#34;&gt;16&lt;/span&gt; 11:41 artifacts
&lt;span style=&#34;color:#ae81ff&#34;&gt;62&lt;/span&gt; drwxr-xr-x   &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt; root            root            4.0K Nov &lt;span style=&#34;color:#ae81ff&#34;&gt;21&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;2015&lt;/span&gt; config
&lt;span style=&#34;color:#ae81ff&#34;&gt;57&lt;/span&gt; -rw-r--r--   &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; root            root             &lt;span style=&#34;color:#ae81ff&#34;&gt;244&lt;/span&gt; Sep &lt;span style=&#34;color:#ae81ff&#34;&gt;13&lt;/span&gt; 04:51 docker-compose.yml
&lt;span style=&#34;color:#ae81ff&#34;&gt;67&lt;/span&gt; drwxr-xr-x &lt;span style=&#34;color:#ae81ff&#34;&gt;498&lt;/span&gt; root            root             20K Sep &lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt; 03:50 node_modules
&lt;span style=&#34;color:#ae81ff&#34;&gt;63&lt;/span&gt; -rw-r--r--   &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; root            root            1.4K Sep &lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt; 04:22 package.json
&lt;span style=&#34;color:#ae81ff&#34;&gt;52&lt;/span&gt; -rw-r--r--   &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; root            root            4.6K Sep &lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt; 04:01 server.js
&lt;span style=&#34;color:#ae81ff&#34;&gt;59&lt;/span&gt; drwxr-xr-x   &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt; root            root            4.0K Nov &lt;span style=&#34;color:#ae81ff&#34;&gt;21&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;2015&lt;/span&gt; test
 ---&amp;gt; ad42366b24d7
Removing intermediate container f8692fc32cc7
Step &lt;span style=&#34;color:#ae81ff&#34;&gt;13&lt;/span&gt; : RUN ls ../ -liah
 ---&amp;gt; Running in 4074cc02dd1d
total 12K
&lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt; drwxr-xr-x  &lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt; root            root            4.0K Sep &lt;span style=&#34;color:#ae81ff&#34;&gt;13&lt;/span&gt; 09:00 .
&lt;span style=&#34;color:#ae81ff&#34;&gt;11&lt;/span&gt; drwxr-xr-x &lt;span style=&#34;color:#ae81ff&#34;&gt;32&lt;/span&gt; root            root            4.0K Sep &lt;span style=&#34;color:#ae81ff&#34;&gt;13&lt;/span&gt; 09:00 ..
&lt;span style=&#34;color:#ae81ff&#34;&gt;13&lt;/span&gt; drwxr-xr-x  &lt;span style=&#34;color:#ae81ff&#34;&gt;9&lt;/span&gt; nodegoat_docker nodegoat_docker 4.0K Sep &lt;span style=&#34;color:#ae81ff&#34;&gt;13&lt;/span&gt; 09:00 app&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;With reapplication of the ownership and permissions of the non-root user, as the &lt;code&gt;Dockerfile&lt;/code&gt; is currently above, the container directory listings look like the following:&lt;/p&gt;
&lt;h6 id=&#34;with-reapplication-of-ownership-and-permissions&#34;&gt;With reapplication of ownership and permissions&lt;/h6&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;Step &lt;span style=&#34;color:#ae81ff&#34;&gt;15&lt;/span&gt; : RUN ls -liah
 ---&amp;gt; Running in 8662e1657d0f
total 116K
&lt;span style=&#34;color:#ae81ff&#34;&gt;13&lt;/span&gt; drwxr-x---   &lt;span style=&#34;color:#ae81ff&#34;&gt;21&lt;/span&gt; nodegoat_docker nodegoat_docker 4.0K Sep &lt;span style=&#34;color:#ae81ff&#34;&gt;13&lt;/span&gt; 08:51 .
&lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt; drwxr-xr-x    &lt;span style=&#34;color:#ae81ff&#34;&gt;9&lt;/span&gt; root            root            4.0K Sep &lt;span style=&#34;color:#ae81ff&#34;&gt;13&lt;/span&gt; 08:51 ..
&lt;span style=&#34;color:#ae81ff&#34;&gt;65&lt;/span&gt; drwxr-x---   &lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt; nodegoat_docker nodegoat_docker 4.0K Sep &lt;span style=&#34;color:#ae81ff&#34;&gt;13&lt;/span&gt; 08:51 .git
&lt;span style=&#34;color:#ae81ff&#34;&gt;53&lt;/span&gt; -rw-r-----    &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; nodegoat_docker nodegoat_docker  &lt;span style=&#34;color:#ae81ff&#34;&gt;178&lt;/span&gt; Sep &lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt; 04:22 .gitignore
&lt;span style=&#34;color:#ae81ff&#34;&gt;69&lt;/span&gt; -rw-r-----    &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; nodegoat_docker nodegoat_docker 1.9K Nov &lt;span style=&#34;color:#ae81ff&#34;&gt;21&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;2015&lt;/span&gt; .jshintrc
&lt;span style=&#34;color:#ae81ff&#34;&gt;61&lt;/span&gt; -rw-r-----    &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; nodegoat_docker nodegoat_docker   &lt;span style=&#34;color:#ae81ff&#34;&gt;55&lt;/span&gt; Nov &lt;span style=&#34;color:#ae81ff&#34;&gt;21&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;2015&lt;/span&gt; .nodemonignore
&lt;span style=&#34;color:#ae81ff&#34;&gt;58&lt;/span&gt; -rw-r-----    &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; nodegoat_docker nodegoat_docker  &lt;span style=&#34;color:#ae81ff&#34;&gt;884&lt;/span&gt; Sep &lt;span style=&#34;color:#ae81ff&#34;&gt;13&lt;/span&gt; 08:46 Dockerfile
&lt;span style=&#34;color:#ae81ff&#34;&gt;55&lt;/span&gt; -rw-r-----    &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; nodegoat_docker nodegoat_docker 6.6K Sep &lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt; 04:16 Gruntfile.js
&lt;span style=&#34;color:#ae81ff&#34;&gt;60&lt;/span&gt; -rw-r-----    &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; nodegoat_docker nodegoat_docker  11K Nov &lt;span style=&#34;color:#ae81ff&#34;&gt;21&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;2015&lt;/span&gt; LICENSE
&lt;span style=&#34;color:#ae81ff&#34;&gt;68&lt;/span&gt; -rw-r-----    &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; nodegoat_docker nodegoat_docker   &lt;span style=&#34;color:#ae81ff&#34;&gt;48&lt;/span&gt; Nov &lt;span style=&#34;color:#ae81ff&#34;&gt;21&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;2015&lt;/span&gt; Procfile
&lt;span style=&#34;color:#ae81ff&#34;&gt;64&lt;/span&gt; -rw-r-----    &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; nodegoat_docker nodegoat_docker 5.6K Sep &lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt; 04:22 README.md
&lt;span style=&#34;color:#ae81ff&#34;&gt;56&lt;/span&gt; drwxr-x---   &lt;span style=&#34;color:#ae81ff&#34;&gt;14&lt;/span&gt; nodegoat_docker nodegoat_docker 4.0K Sep &lt;span style=&#34;color:#ae81ff&#34;&gt;13&lt;/span&gt; 08:51 app
&lt;span style=&#34;color:#ae81ff&#34;&gt;66&lt;/span&gt; -rw-r-----    &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; nodegoat_docker nodegoat_docker  &lt;span style=&#34;color:#ae81ff&#34;&gt;527&lt;/span&gt; Nov &lt;span style=&#34;color:#ae81ff&#34;&gt;15&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;2015&lt;/span&gt; app.json
&lt;span style=&#34;color:#ae81ff&#34;&gt;54&lt;/span&gt; drwxr-x---    &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt; nodegoat_docker nodegoat_docker 4.0K Sep &lt;span style=&#34;color:#ae81ff&#34;&gt;13&lt;/span&gt; 08:51 artifacts
&lt;span style=&#34;color:#ae81ff&#34;&gt;62&lt;/span&gt; drwxr-x---    &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt; nodegoat_docker nodegoat_docker 4.0K Sep &lt;span style=&#34;color:#ae81ff&#34;&gt;13&lt;/span&gt; 08:51 config
&lt;span style=&#34;color:#ae81ff&#34;&gt;57&lt;/span&gt; -rw-r-----    &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; nodegoat_docker nodegoat_docker  &lt;span style=&#34;color:#ae81ff&#34;&gt;244&lt;/span&gt; Sep &lt;span style=&#34;color:#ae81ff&#34;&gt;13&lt;/span&gt; 04:51 docker-compose.yml
&lt;span style=&#34;color:#ae81ff&#34;&gt;67&lt;/span&gt; drwxr-x--- &lt;span style=&#34;color:#ae81ff&#34;&gt;1428&lt;/span&gt; nodegoat_docker nodegoat_docker  20K Sep &lt;span style=&#34;color:#ae81ff&#34;&gt;13&lt;/span&gt; 08:51 node_modules
&lt;span style=&#34;color:#ae81ff&#34;&gt;63&lt;/span&gt; -rw-r-----    &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; nodegoat_docker nodegoat_docker 1.4K Sep &lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt; 04:22 package.json
&lt;span style=&#34;color:#ae81ff&#34;&gt;52&lt;/span&gt; -rw-r-----    &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; nodegoat_docker nodegoat_docker 4.6K Sep &lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt; 04:01 server.js
&lt;span style=&#34;color:#ae81ff&#34;&gt;59&lt;/span&gt; drwxr-x---    &lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt; nodegoat_docker nodegoat_docker 4.0K Sep &lt;span style=&#34;color:#ae81ff&#34;&gt;13&lt;/span&gt; 08:51 test
 ---&amp;gt; b88d816315b1
Removing intermediate container 8662e1657d0f
Step &lt;span style=&#34;color:#ae81ff&#34;&gt;16&lt;/span&gt; : RUN ls ../ -liah
 ---&amp;gt; Running in 0ee2dcc889a6
total 12K
&lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt; drwxr-xr-x  &lt;span style=&#34;color:#ae81ff&#34;&gt;9&lt;/span&gt; root            root            4.0K Sep &lt;span style=&#34;color:#ae81ff&#34;&gt;13&lt;/span&gt; 08:51 .
&lt;span style=&#34;color:#ae81ff&#34;&gt;11&lt;/span&gt; drwxr-xr-x &lt;span style=&#34;color:#ae81ff&#34;&gt;34&lt;/span&gt; root            root            4.0K Sep &lt;span style=&#34;color:#ae81ff&#34;&gt;13&lt;/span&gt; 08:51 ..
&lt;span style=&#34;color:#ae81ff&#34;&gt;13&lt;/span&gt; drwxr-x--- &lt;span style=&#34;color:#ae81ff&#34;&gt;21&lt;/span&gt; nodegoat_docker nodegoat_docker 4.0K Sep &lt;span style=&#34;color:#ae81ff&#34;&gt;13&lt;/span&gt; 08:51 app&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;An alternative to setting the non-root user in the &lt;code&gt;Dockerfile&lt;/code&gt; is to set it in the &lt;code&gt;docker-compose.yml&lt;/code&gt;, provided that the non-root user has been added to the image in the &lt;code&gt;Dockerfile&lt;/code&gt;. In the case of NodeGoat, the mongo &lt;code&gt;Dockerfile&lt;/code&gt; is maintained by DockerHub, and it adds a user called &lt;code&gt;mongodb&lt;/code&gt;. In the NodeGoat projects &lt;code&gt;docker-compose.yml&lt;/code&gt;, we just need to set the user, as seen on line 13 below:&lt;/p&gt;
&lt;h6 id=&#34;nodegoat-docker-compose&#34; class=&#34;yml&#34;&gt;NodeGoat docker-compose.yml&lt;/h6&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 1&lt;/span&gt;    version: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;2.0&amp;#34;&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 2&lt;/span&gt;    
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 3&lt;/span&gt;    services:
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 4&lt;/span&gt;      web:
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 5&lt;/span&gt;        build: .
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 6&lt;/span&gt;        command: bash -c &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;node artifacts/db-reset.js &amp;amp;&amp;amp; npm start&amp;#34;&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 7&lt;/span&gt;        ports:
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 8&lt;/span&gt;          - &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;4000:4000&amp;#34;&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 9&lt;/span&gt;        links:
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;10&lt;/span&gt;          - mongo
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;11&lt;/span&gt;      mongo:
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;12&lt;/span&gt;        image: mongo:latest
&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;13&lt;/span&gt;        user: mongodb
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;14&lt;/span&gt;        expose:
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;15&lt;/span&gt;          - &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;27017&amp;#34;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Alternatively, a container may be run as a non-root user by running the following command:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;docker run -it --user lowprivuser myimage&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;but this is not ideal, the specific user should usually be part of the build.&lt;/p&gt;
&lt;h1 id=&#34;hardening-docker-host-engine-and-containers&#34;&gt;Hardening Docker Host, Engine and Containers&lt;/h1&gt;














&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;
        &lt;img alt=&#34;&#34; srcset=&#34;
               /media/post/2018/04/difficult-uncommon-average-moderate_hudc496e6c9df959b0c1086b5116ee778a_9572_ea6bf72611115c14369da218cd38eeb6.png 400w,
               /media/post/2018/04/difficult-uncommon-average-moderate_hudc496e6c9df959b0c1086b5116ee778a_9572_738f6c0a7e39fc0927fc85609078a2ad.png 760w,
               /media/post/2018/04/difficult-uncommon-average-moderate_hudc496e6c9df959b0c1086b5116ee778a_9572_1200x1200_fit_lanczos_2.png 1200w&#34;
               src=&#34;https://binarymist.io/media/post/2018/04/difficult-uncommon-average-moderate_hudc496e6c9df959b0c1086b5116ee778a_9572_ea6bf72611115c14369da218cd38eeb6.png&#34;
               width=&#34;760&#34;
               height=&#34;18&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;p&gt;Considering that these processes run as root, and have &lt;a href=&#34;https://theinvisiblethings.blogspot.co.nz/2012/09/how-is-qubes-os-different-from.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;indirect access&lt;/a&gt; to most of the Linux Kernel (20+ million lines of code written by humans) APIs, such as networking, USB, storage stacks, and others via System calls, the situation may look bleak.&lt;/p&gt;














&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;
        &lt;img alt=&#34;&#34; srcset=&#34;
               /media/post/2018/04/HypervisorVsContainers_hu5e4e79e7ab6687c5ec487bf325d77b4f_67230_caac0c340c389c50455aa4728d54e3d0.png 400w,
               /media/post/2018/04/HypervisorVsContainers_hu5e4e79e7ab6687c5ec487bf325d77b4f_67230_cf9e62c8f61a4978f09458ce1ec72504.png 760w,
               /media/post/2018/04/HypervisorVsContainers_hu5e4e79e7ab6687c5ec487bf325d77b4f_67230_1200x1200_fit_lanczos_2.png 1200w&#34;
               src=&#34;https://binarymist.io/media/post/2018/04/HypervisorVsContainers_hu5e4e79e7ab6687c5ec487bf325d77b4f_67230_caac0c340c389c50455aa4728d54e3d0.png&#34;
               width=&#34;666&#34;
               height=&#34;760&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;p&gt;&lt;a href=&#34;http://man7.org/linux/man-pages/man2/syscalls.2.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;System calls&lt;/a&gt; are how programmes access the kernel to perform tasks. This attack surface is huge, and all before any security is added on top in the form of LXC, libcontainer (now &lt;a href=&#34;https://github.com/opencontainers/runc&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;opencontainers/runc&lt;/a&gt;), or &lt;a href=&#34;#docker-host-engine-and-containers-linux-security-modules-risks&#34;&gt;Linux Security Modules (LSM)&lt;/a&gt; such as AppArmor or SELinux. These are often seen as an annoyance and just disabled like many other forms of security.&lt;/p&gt;
&lt;p&gt;If you run a container, you may have to install &lt;code&gt;kmod&lt;/code&gt;, then run &lt;code&gt;lsmod&lt;/code&gt; in the container, and also on the host system. You will see that the same modules are loaded, this is because as mentioned, the container shares the host kernel, so there is not a lot between processes within the container and the host kernel. As mentioned above, the processes within the container may be running as root as well, it pays for you to have a good understanding of the security features Docker provides, and how to employ them.&lt;/p&gt;
&lt;p&gt;The &lt;a href=&#34;#docker-engine-and-containers-seccomp-risks&#34;&gt;Seccomp section below&lt;/a&gt; discusses Docker&amp;rsquo;s attempt to put a stop to some System calls accessing the kernel APIs. There are also many other features that Docker has added or leveraged in terms of mitigating a lot of this potential abuse. Although the situation initially looks bad, Docker has done a lot to improve it.&lt;/p&gt;
&lt;p&gt;As you can see in the above image, the host kernel is open to receiving potential abuse from containers. Make sure you keep it patched. We will now walk though many areas of potential abuse.&lt;/p&gt;














&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;
        &lt;img alt=&#34;&#34; srcset=&#34;
               /media/post/2018/04/PreventionDIFFICULT_hu0dd09e468652fd3b6da8b11439cdc83d_2178_723030fcbcc437a3a6f35e7ad281e7cd.png 400w,
               /media/post/2018/04/PreventionDIFFICULT_hu0dd09e468652fd3b6da8b11439cdc83d_2178_106e22740b39602dfb1237a38c52392f.png 760w,
               /media/post/2018/04/PreventionDIFFICULT_hu0dd09e468652fd3b6da8b11439cdc83d_2178_1200x1200_fit_lanczos_2.png 1200w&#34;
               src=&#34;https://binarymist.io/media/post/2018/04/PreventionDIFFICULT_hu0dd09e468652fd3b6da8b11439cdc83d_2178_723030fcbcc437a3a6f35e7ad281e7cd.png&#34;
               width=&#34;760&#34;
               height=&#34;18&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;p&gt;Make sure you keep your host kernel well patched, as it is a huge attack surface, with all of your containers accessing it via System calls.&lt;/p&gt;
&lt;p&gt;The space for tooling to help find vulnerabilities in code, packages, etc within your Docker images has been noted, and &lt;a href=&#34;https://community.alfresco.com/community/ecm/blog/2015/12/03/docker-security-tools-audit-and-vulnerability-assessment/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;tools provided&lt;/a&gt;. The following is a sorted list of what feels like does the least and is the simplest in terms of security/hardening features to what does the most, not understating tools that do a little, but do it well.&lt;/p&gt;
&lt;p&gt;These tools should form a part of your secure and trusted build pipeline, or &lt;a href=&#34;https://blog.acolyer.org/2017/04/03/a-study-of-security-vulnerabilities-on-docker-hub/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;software supply-chain&lt;/a&gt;.&lt;/p&gt;
&lt;h1 id=&#34;twistLock&#34;&gt;TwistLock&lt;/h1&gt;
&lt;p&gt;TwistLock is a fairly comprehensive and complete proprietary offering with a free developer edition. The following details were taken from TwistLock marketing pages:&lt;/p&gt;
&lt;p&gt;Features of Trust:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Discover and manage vulnerabilities in images&lt;/li&gt;
&lt;li&gt;Uses CVE data sources similar to CoreOS Clair&lt;/li&gt;
&lt;li&gt;Can scan registries: Docker Hub, Google Container Registry, EC2 Container Registry, Artifactory, Nexus Registry, and images for vulnerabilities in code and configuration&lt;/li&gt;
&lt;li&gt;Enforce and verify standard configurations&lt;/li&gt;
&lt;li&gt;Hardening checks on images based on CIS Docker benchmark&lt;/li&gt;
&lt;li&gt;Real-time vulnerability and threat intelligence&lt;/li&gt;
&lt;li&gt;Provide out-of-box plugins for vulnerability reporting directly into Jenkins and TeamCity&lt;/li&gt;
&lt;li&gt;Provides a set of APIs for developers to access almost all of the TwistLock core functions&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Features of Runtime:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Policy enforcement&lt;/li&gt;
&lt;li&gt;Detect anomalies, uses open source CVE feeds, commercial threat and vulnerability sources, as well as TwistLock&amp;rsquo;s own Lab research&lt;/li&gt;
&lt;li&gt;Defend and adapt against active threats and compromises using machine learning&lt;/li&gt;
&lt;li&gt;Governs access control to individual APIs of Docker Engine, Kubernetes, and Docker Swarm, providing LDAP/AD integration.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;namespaces-risks&#34;&gt;Namespaces (Risks)&lt;/h1&gt;
&lt;p&gt;The first place to read for solid background on Linux kernel namespaces is the &lt;a href=&#34;http://man7.org/linux/man-pages/man7/namespaces.7.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;man-page&lt;/a&gt;, otherwise I&amp;rsquo;d just be repeating what is there. A lot of what follows about namespaces requires some knowledge from the namespaces man-page, so do yourself a favour and read it first.&lt;/p&gt;
&lt;p&gt;Linux kernel namespaces were first added between 2.6.15 (January 2006) and 2.6.26 (July 2008).&lt;/p&gt;
&lt;p&gt;According to the namespaces man page, IPC, network and UTS namespace support was available from kernel version 3.0, while mount, PID and user namespace support was available from kernel version 3.8 (February 2013), and cgroup namespace support was available from kernel version 4.6 (May 2016).&lt;/p&gt;
&lt;p&gt;Each aspect of a container runs in a separate namespace and its access is limited to that namespace.&lt;/p&gt;
&lt;p&gt;Docker leverages the Linux (kernel) namespaces which provide an isolated workspace wrapped with a global system resource abstraction. This makes it appear to the processes within the namespace that they have their own isolated instance of the global resource. When a container is run, Docker creates a set of namespaces for that container, providing a layer of isolation between containers:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;mnt&lt;/code&gt;&lt;/strong&gt;: (Mount) Provides filesystem isolation by managing filesystems and mount points. The &lt;code&gt;mnt&lt;/code&gt; namespace allows a container to have its own isolated set of mounted filesystems, the propagation modes can be one of the following: [&lt;code&gt;r&lt;/code&gt;]&lt;code&gt;shared&lt;/code&gt;, [&lt;code&gt;r&lt;/code&gt;]&lt;code&gt;slave&lt;/code&gt; or [&lt;code&gt;r&lt;/code&gt;]&lt;code&gt;private&lt;/code&gt;. The &lt;code&gt;r&lt;/code&gt; means recursive.&lt;/p&gt;
&lt;p&gt;If you run the following command, then the host&amp;rsquo;s mounted &lt;code&gt;host-path&lt;/code&gt; is &lt;a href=&#34;https://docs.docker.com/engine/admin/volumes/volumes/#create-and-manage-volumes&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;shared&lt;/a&gt; with all others that mount &lt;code&gt;host-path&lt;/code&gt;. Any changes made to the mounted data will be propagated to those that use the &lt;code&gt;shared&lt;/code&gt; mode propagation. Using &lt;code&gt;slave&lt;/code&gt; means only the master (&lt;code&gt;host-path&lt;/code&gt;) is able to propagate changes, not vice-versa. Using &lt;code&gt;private&lt;/code&gt; which is the default, will ensure no changes can be propagated.&lt;/p&gt;
&lt;h6 id=&#34;mounting-volumes-in-shared-mode-propagation&#34;&gt;Mounting volumes in shared mode propagation&lt;/h6&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;docker run &amp;lt;run arguments&amp;gt; --volume&lt;span style=&#34;color:#f92672&#34;&gt;=[&lt;/span&gt;host-path:&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;&amp;lt;container-path&amp;gt;:&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;z&lt;span style=&#34;color:#f92672&#34;&gt;][&lt;/span&gt;r&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;shared &amp;lt;container image name or id&amp;gt; &amp;lt;command&amp;gt; &amp;lt;args...&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you omit the &lt;code&gt;host-path&lt;/code&gt; you can &lt;a href=&#34;https://docs.docker.com/engine/tutorials/dockervolumes/#locating-a-volume&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;see the host path&lt;/a&gt; that was mounted when running the following command:&lt;/p&gt;
&lt;h6 id=&#34;query&#34;&gt;Query&lt;/h6&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;docker inspect &amp;lt;name or id of container&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Find the &amp;ldquo;Mounts&amp;rdquo; property in the JSON produced. It will have a &amp;ldquo;Source&amp;rdquo; and &amp;ldquo;Destination&amp;rdquo; similar to:&lt;/p&gt;
&lt;h6 id=&#34;result&#34;&gt;Result&lt;/h6&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;...
&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Mounts&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;
  &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Name&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;lt;container id&amp;gt;&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Source&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/var/lib/docker/volumes/&amp;lt;container id&amp;gt;/_data&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Destination&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;lt;container-path&amp;gt;&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Mode&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;RW&amp;#34;&lt;/span&gt;: true,
    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Propagation&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;shared&amp;#34;&lt;/span&gt;
  &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
...&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;An empty string for Mode means that it is set to its read-write default. For example, a container can mount sensitive host system directories such as &lt;code&gt;/&lt;/code&gt;, &lt;code&gt;/boot&lt;/code&gt;, &lt;code&gt;/etc&lt;/code&gt;, &lt;code&gt;/lib&lt;/code&gt;, &lt;code&gt;/proc&lt;/code&gt;, &lt;code&gt;/sys&lt;/code&gt;, along with the rest as I discuss in the Lock Down the Mounting of Partitions section of my book &lt;a href=&#34;https://f1.holisticinfosecforwebdevelopers.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Fascicle 1 of Holistic Info-Sec for Web Developers&lt;/a&gt;, particularly if that advice is not followed. If it is followed, you have some defence in depth working for you, and although Docker may have mounted a directory as read-write, the underlying mount may be read-only, thus stopping the container from being able to modify files in these locations on the host system. If the host does not have the above directories mounted with constrained permissions, then we are relying on the user running any given Docker container that mounts a sensitive host volume to mount it as read-only. For example, after the following command has been run, users within the container can modify files in the hosts &lt;code&gt;/etc&lt;/code&gt; directory:&lt;/p&gt;
&lt;h6 id=&#34;vulnerable-mount&#34;&gt;Vulnerable mount&lt;/h6&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;docker run -it --rm -v /etc:/hosts-etc --name&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;lets-mount-etc ubuntu&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h6 id=&#34;query-1&#34;&gt;Query&lt;/h6&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;docker inspect -f &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;{{ json .Mounts }}&amp;#34;&lt;/span&gt; lets-mount-etc&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h6 id=&#34;result-1&#34;&gt;Result&lt;/h6&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;
  &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Type&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;bind&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Source&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/etc&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Destination&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/hosts-etc&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Mode&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;RW&amp;#34;&lt;/span&gt;:true,
    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Propagation&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;
  &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Also keep in mind that, by default, the user in the container, unless otherwise specified, is root, the same root user as on the host system.&lt;/p&gt;
 &lt;div id=&#34;docker-host-engine-and-containers-namespaces-mnt-labelling&#34;/&gt;&lt;br&gt;
&lt;p&gt;Labelling systems such as &lt;a href=&#34;#docker-host-engine-and-containers-linux-security-modules-risks&#34;&gt;Linux Security Modules (LSM)&lt;/a&gt; require that the contents of a volume mounted into a container be &lt;a href=&#34;https://docs.docker.com/engine/admin/volumes/volumes/#create-and-manage-volumes&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;labelled&lt;/a&gt;. This can be done by adding the &lt;code&gt;z&lt;/code&gt; (as seen in above example) or &lt;code&gt;Z&lt;/code&gt; suffix to the volume mount. The &lt;code&gt;z&lt;/code&gt; suffix instructs Docker to share the mounted volume with other containers, and in so doing, Docker applies a shared content label. Alternatively, if you provide the &lt;code&gt;Z&lt;/code&gt; suffix, Docker applies a private unshared label, which means only the current container can use the mounted volume. Further details can be found at the &lt;a href=&#34;https://docs.docker.com/engine/admin/volumes/volumes/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;dockervolumes documentation&lt;/a&gt;. This is something to keep in mind if you are using LSM, and have a process inside your container that is unable to use the mounted data.&lt;br&gt;
&lt;code&gt;--volumes-from&lt;/code&gt; allows you to specify a data volume from another container.
&lt;br&gt;&lt;br&gt;
You can also &lt;a href=&#34;https://linux.die.net/man/8/mount&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;mount&lt;/a&gt; your Docker container mounts on the host by doing the following:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;mount --bind /var/lib/docker/&amp;lt;volumes&amp;gt;/&amp;lt;container id&amp;gt;/_data &amp;lt;/path/on/host&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;PID&lt;/code&gt;&lt;/strong&gt;: (Process ID) Provides process isolation, separates container processes from host and other container processes.&lt;br&gt;
&lt;br&gt;
The first process that is created in a new &lt;code&gt;PID&lt;/code&gt; namespace is the &amp;ldquo;init&amp;rdquo; process with &lt;code&gt;PID&lt;/code&gt; 1, which assumes parenthood of the other processes within the same &lt;code&gt;PID&lt;/code&gt; namespace. When &lt;code&gt;PID&lt;/code&gt; 1 is terminated, so are the rest of the processes within the same &lt;code&gt;PID&lt;/code&gt; namespace.
&lt;br&gt;&lt;br&gt;
&lt;code&gt;PID&lt;/code&gt; namespaces are &lt;a href=&#34;https://lwn.net/Articles/531419/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;hierarchically nested&lt;/a&gt; in ancestor-descendant relationships to a depth of up to 32 levels. All &lt;code&gt;PID&lt;/code&gt; namespaces have a parent namespace, other than the initial root &lt;code&gt;PID&lt;/code&gt; namespace of the host system. That parent namespace is the &lt;code&gt;PID&lt;/code&gt; namespace of the process that created the child namespace.
&lt;br&gt;&lt;br&gt;
Within a &lt;code&gt;PID&lt;/code&gt; namespace, it is possible to access (make system calls to specific &lt;code&gt;PID&lt;/code&gt;s) all other processes in the same namespace, as well as all processes of descendant namespaces. However, processes in a child &lt;code&gt;PID&lt;/code&gt; namespace cannot see processes that exist in the parent &lt;code&gt;PID&lt;/code&gt; namespace or further removed ancestor namespaces. The direction any process can access another process in an ancestor/descendant &lt;code&gt;PID&lt;/code&gt; namespace is one way.
&lt;br&gt;&lt;br&gt;
Processes in different &lt;code&gt;PID&lt;/code&gt; namespaces can have the same &lt;code&gt;PID&lt;/code&gt;, because the &lt;code&gt;PID&lt;/code&gt; namespace isolates the &lt;code&gt;PID&lt;/code&gt; number space from other &lt;code&gt;PID&lt;/code&gt; namespaces.
&lt;br&gt;&lt;br&gt;
Docker takes advantage of &lt;code&gt;PID&lt;/code&gt; namespaces. Just as you would expect, a Docker container can not access the host system processes, and process Ids that are used in the host system can be reused in the container, including &lt;code&gt;PID&lt;/code&gt; 1, by being reassigned to a process started within the container. The host system can however access all processes within its containers, because as stated above, &lt;code&gt;PID&lt;/code&gt; namespaces are hierarchically nested in parent-child relationships. Processes in the hosts &lt;code&gt;PID&lt;/code&gt; namespace can access all processes in their own namespace down to the &lt;code&gt;PID&lt;/code&gt; namespace that was responsible for starting the process, such as the process within the container in our case.
&lt;br&gt;&lt;br&gt;
The default behaviour can however be overridden to allow a container to be able to access processes within a sibling container, or the hosts &lt;code&gt;PID&lt;/code&gt; namespace. &lt;a href=&#34;https://docs.docker.com/engine/reference/run/#pid-settings-pid&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Example&lt;/a&gt;:&lt;/p&gt;
&lt;h6 id=&#34;syntax&#34;&gt;Syntax&lt;/h6&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;--pid&lt;span style=&#34;color:#f92672&#34;&gt;=[&lt;/span&gt;container:&amp;lt;name|id&amp;gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;,&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;host&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h6 id=&#34;example&#34;&gt;Example&lt;/h6&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Provides access to the `PID` namespace of container called myContainer&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# for container created from myImage.&lt;/span&gt;
docker run --pid&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;container:myContainer myImage&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h6 id=&#34;example-1&#34;&gt;Example&lt;/h6&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Provides access to the host `PID` namespace for container created from myImage&lt;/span&gt;
docker run --pid&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;host myImage&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;As an aside, &lt;code&gt;PID&lt;/code&gt; namespaces give us the &lt;a href=&#34;http://man7.org/linux/man-pages/man7/pid_namespaces.7.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;functionality of&lt;/a&gt;: &amp;ldquo;&lt;em&gt;suspending/resuming the set of processes in the container and migrating the container to a new host while the processes inside the container maintain the same PIDs.&lt;/em&gt;&amp;rdquo; with a &lt;a href=&#34;https://www.fir3net.com/Containers/Docker/the-essential-guide-in-transporting-your-docker-containers.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;handful of commands&lt;/a&gt;:&lt;/p&gt;
&lt;h6 id=&#34;example-2&#34;&gt;Example&lt;/h6&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;docker container pause myContainer &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;mySecondContainer...&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
docker export &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;options&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; myContainer
&lt;span style=&#34;color:#75715e&#34;&gt;# Move your container to another host.&lt;/span&gt;
docker import &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;OPTIONS&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; file|URL|- &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;REPOSITORY&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;:TAG&lt;span style=&#34;color:#f92672&#34;&gt;]]&lt;/span&gt;
docker container unpause myContainer &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;mySecondContainer...&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;net&lt;/code&gt;&lt;/strong&gt;: (Networking) Provides network isolation by managing the network stack and interfaces. It&amp;rsquo;s also essential to allow containers to communicate with the host system and other containers. Network namespaces were introduced into the kernel in 2.6.24, January 2008, with an additional year of development they were considered largely done. The only real concern here is understanding the Docker network modes and communication between containers. This is discussed in the Countermeasures.&lt;br&gt;
&lt;br&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;UTS&lt;/code&gt;&lt;/strong&gt;: (Unix Timesharing System) Provides isolation of kernel and version identifiers.&lt;br&gt;
&lt;br&gt;
UTS is the sharing of a computing resource with many users, a concept introduced in the 1960s/1970s.
&lt;br&gt;&lt;br&gt;
A UTS namespace is the set of identifiers &lt;a href=&#34;http://man7.org/linux/man-pages/man2/clone.2.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;returned by &lt;code&gt;uname&lt;/code&gt;&lt;/a&gt;, which include the hostname and the NIS domain name. Any processes which are not children of the process that requested the clone will not be able to see any changes made to the identifiers of the UTS namespace.
&lt;br&gt;&lt;br&gt;
If the &lt;code&gt;CLONE_NEWUTS&lt;/code&gt; constant is set, then the process being created will be created in a new UTS namespace with the hostname and NIS domain name copied and able to be modified independently from the UTS namespace of the calling process.
&lt;br&gt;&lt;br&gt;
If the &lt;code&gt;CLONE_NEWUTS&lt;/code&gt; constant is not set, then the process being created will be created in the same UTS namespace of the calling process, thus able to change the identifiers returned by &lt;code&gt;uname&lt;/code&gt;.
&lt;br&gt;&lt;br&gt;
When a container is created, a UTS namespace is copied (&lt;a href=&#34;https://github.com/docker/libcontainer/blob/83a102cc68a09d890cce3b6c2e5c14c49e6373a0/SPEC.md&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;CLONE_NEWUTS&lt;/code&gt; is set&lt;/a&gt;)(&lt;code&gt;--uts=&amp;quot;&amp;quot;&lt;/code&gt;) by default, providing a UTS namespace that can be modified independently from the target UTS namespece it was copied from.
&lt;br&gt;&lt;br&gt;
When a container is created with &lt;a href=&#34;https://docs.docker.com/engine/reference/run/#uts-settings-uts&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;--uts=&amp;quot;host&amp;quot;&lt;/code&gt;&lt;/a&gt;, a UTS namespace is inherited from the host, the &lt;code&gt;--hostname&lt;/code&gt; flag is invalid.&lt;br&gt;
&lt;br&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;IPC&lt;/code&gt;&lt;/strong&gt;: (InterProcess Communication) manages access to InterProcess Communications). &lt;code&gt;IPC&lt;/code&gt; namespaces isolate your container&amp;rsquo;s System V IPC and POSIX message queues, semaphores, and named shared memory from those of the host and other containers, unless another container specifies on run that it wants to share your namespace. It would be a lot safer if the producer could specify which consuming containers could use its &lt;a href=&#34;http://man7.org/linux/man-pages/man7/namespaces.7.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;namespace&lt;/a&gt;. IPC namespaces do not include IPC mechanisms that use filesystem resources such as named pipes.
&lt;br&gt;&lt;br&gt;
According to the &lt;a href=&#34;http://man7.org/linux/man-pages/man7/namespaces.7.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;namespaces man page&lt;/a&gt;: &amp;ldquo;&lt;em&gt;Objects created in an IPC namespace are visible to all other processes that are members of that namespace, but are not visible to processes in other IPC namespaces.&lt;/em&gt;&amp;rdquo;
&lt;br&gt;&lt;br&gt;
Although sharing memory segments between processes provide Inter-Process Communications at memory speed, rather than through pipes or worse, the network stack, this produces a significant security concern.
&lt;br&gt;&lt;br&gt;
By default a container does not share the host&amp;rsquo;s or any other container&amp;rsquo;s IPC namespace. This behaviour can be overridden to allow a (any) container to reuse another container&amp;rsquo;s or the host&amp;rsquo;s message queues, semaphores, and shared memory via their IPC namespace. &lt;a href=&#34;https://docs.docker.com/engine/reference/run/#ipc-settings-ipc&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Example&lt;/a&gt;:&lt;/p&gt;
&lt;h6 id=&#34;syntax-1&#34;&gt;Syntax&lt;/h6&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Allows a container to reuse another container&amp;#39;s IPC namespace.&lt;/span&gt;
--ipc&lt;span style=&#34;color:#f92672&#34;&gt;=[&lt;/span&gt;container:&amp;lt;name|id&amp;gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;,&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;host&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h6 id=&#34;example-3&#34;&gt;Example&lt;/h6&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;docker run -it --rm --name&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;container-producer ubuntu
root@609d19340303:/#

&lt;span style=&#34;color:#75715e&#34;&gt;# Allows the container named container-consumer to share the IPC namespace&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# of container called container-producer.&lt;/span&gt;
docker run -it --rm --name&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;container-consumer --ipc&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;container:container-producer ubuntu
root@d68ecd6ce69b:/#&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now find the Ids of the two running containers:&lt;/p&gt;
&lt;h6 id=&#34;query-2&#34;&gt;Query&lt;/h6&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;docker inspect --format&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;{{ .Id }}&amp;#34;&lt;/span&gt; container-producer container-consumer&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h6 id=&#34;result-2&#34;&gt;Result&lt;/h6&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;609d193403032a49481099b1fc53037fb5352ae148c58c362ab0a020f473c040
d68ecd6ce69b89253f7ab14de23c9335acaca64d210280590731ce1fcf7a7556&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can see from using the command supplied by the &lt;a href=&#34;https://benchmarks.cisecurity.org/tools2/docker/CIS_Docker_1.13.0_Benchmark_v1.0.0.pdf&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CIS_Docker_1.13.0_Benchmark&lt;/a&gt; that &lt;code&gt;container-consumer&lt;/code&gt; is using the IPC namespace of &lt;code&gt;container-producer&lt;/code&gt;:&lt;/p&gt;
&lt;h6 id=&#34;query-3&#34;&gt;Query&lt;/h6&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;docker ps --quiet --all | xargs docker inspect --format &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;{{ .Id }}: IpcMode={{ .HostConfig.IpcMode }}&amp;#39;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h6 id=&#34;result-3&#34;&gt;Result&lt;/h6&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;d68ecd6ce69b89253f7ab14de23c9335acaca64d210280590731ce1fcf7a7556: IpcMode&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;container:container-producer
609d193403032a49481099b1fc53037fb5352ae148c58c362ab0a020f473c040: IpcMode&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;When the last process in an IPC namespace terminates, the namespace will be destroyed along with all IPC objects in the namespace.&lt;br&gt;
&lt;br&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;user&lt;/code&gt;&lt;/strong&gt;: Not enabled by default. Allows a process within a container to have a unique range of user and group Ids within the container, known as the subordinate user and group Id feature in the Linux kernel. These do not map to the same user and group Ids of the host, container users to host users are remapped. For example, if a user within a container is root, which it is by default unless a specific user is defined in the image hierarchy, it will be mapped to a non-privileged user on the host system.&lt;br&gt;
Docker considers user namespaces to be an advanced feature. There are currently some Docker features that are &lt;a href=&#34;https://docs.docker.com/engine/reference/commandline/dockerd/#daemon-user-namespace-options&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;incompatible&lt;/a&gt; with using user namespaces, and according to the &lt;a href=&#34;https://benchmarks.cisecurity.org/tools2/docker/CIS_Docker_1.13.0_Benchmark_v1.0.0.pdf&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CIS Docker 1.13.0 Benchmark&lt;/a&gt;, functionalities that are broken if user namespaces are used. the &lt;a href=&#34;https://docs.docker.com/engine/reference/commandline/dockerd/#daemon-user-namespace-options&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Docker engine reference&lt;/a&gt; provides additional details around known restrictions of user namespaces.&lt;br&gt;
If your containers have a predefined non-root user, then, currently, user namespaces should not be enabled, due to possible unpredictable issues and complexities, according to &amp;ldquo;2.8 Enable user namespace support&amp;rdquo; of the &lt;a href=&#34;https://benchmarks.cisecurity.org/tools2/docker/CIS_Docker_1.13.0_Benchmark_v1.0.0.pdf&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CIS Docker Benchmark&lt;/a&gt;.&lt;br&gt;
The problem is that these mappings are performed on the Docker daemon rather than at a per-container level, so it is an all or nothing approach. This may change in the future though.&lt;br&gt;
As mentioned, user namespace support is available, but not enabled by default in the Docker daemon.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;namespaces-countermeasures&#34;&gt;Namespaces (Countermeasures)&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;mnt&lt;/code&gt;&lt;/strong&gt;: Keep the default propagation mode of &lt;code&gt;private&lt;/code&gt; unless you have a very good reason to change it. If you do need to change it, think about defence in depth and employ other defence strategies.&lt;br&gt;
&lt;br&gt;
If you have control over the Docker host, lock down the mounting of the host systems partitions as I discussed in the Lock Down the Mounting of Partitions subsection of the VPS chapter of my book &lt;a href=&#34;https://f1.holisticinfosecforwebdevelopers.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Fascicle 1 Holistic Info-Sec for Web Developers&lt;/a&gt;.
&lt;br&gt;&lt;br&gt;
If you have to mount a sensitive host system directory, mount it as read-only:
&lt;br&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;docker run -it --rm -v /etc:/hosts-etc:ro --name&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;lets-mount-etc ubuntu&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt;
&lt;p&gt;If any file modifications are now attempted on &lt;code&gt;/etc&lt;/code&gt; they will be unsuccessful.&lt;/p&gt;
&lt;h6 id=&#34;query-4&#34;&gt;Query&lt;/h6&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;docker inspect -f &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;{{ json .Mounts }}&amp;#34;&lt;/span&gt; lets-mount-etc&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h6 id=&#34;result-4&#34;&gt;Result&lt;/h6&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;
  &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Type&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;bind&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Source&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/etc&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Destination&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/hosts-etc&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Mode&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ro&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;RW&amp;#34;&lt;/span&gt;:false,
    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Propagation&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;
  &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Also, as discussed previously, lock down the user to non-root.&lt;/p&gt;
&lt;p&gt;If you are using LSM, you will probably want to use the &lt;code&gt;Z&lt;/code&gt; option as discussed in the risks section.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;PID&lt;/code&gt;&lt;/strong&gt;: By default enforces isolation from the containers &lt;code&gt;PID&lt;/code&gt; namespace, but not from the host to the container. If you are concerned about host systems being able to access your containers, as you should be, consider putting your containers within a VM&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;net&lt;/code&gt;&lt;/strong&gt;: A network namespace is a virtualisation of the network stack, with its own network devices, IP routing tables, firewall rules and ports.&lt;br&gt;
When a network namespace is created the only network interface that is created is the loopback interface, which is down until brought up.&lt;br&gt;
Each network interface, whether physical or virtual, can only reside in one namespace, but can be moved between namespaces.&lt;br&gt;
&lt;br&gt;
When the last process in a network namespace terminates, the namespace will be destroyed, destroy any virtual interfaces within it, and move any physical network devices back to the initial network namespace, not the process parent.
&lt;br&gt;&lt;br&gt;
&lt;strong&gt;Docker and Network Namespaces&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;A Docker network is analogous to a Linux kernel network namespace.&lt;/p&gt;
&lt;p&gt;When Docker is installed, three networks are created &lt;code&gt;bridge&lt;/code&gt;, &lt;code&gt;host&lt;/code&gt; and &lt;code&gt;null&lt;/code&gt;, which you can think of as network namespaces. These can be seen by running:&lt;/p&gt;
&lt;h6 id=&#34;docker-network-lshttpsdocsdockercomenginereferencecommandlinenetwork_ls&#34;&gt;&lt;a href=&#34;https://docs.docker.com/engine/reference/commandline/network_ls/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;docker network ls&lt;/code&gt;&lt;/a&gt;&lt;/h6&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;NETWORK ID    NAME              DRIVER   SCOPE
9897a3063354  bridge            bridge   local
fe179428ccd4  host              host     local
a81e8669bda7  none              null     local&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;When you run a container, if you want to override the default network of &lt;code&gt;bridge&lt;/code&gt;, you can specify which network in which you want to run the container with the &lt;code&gt;--network&lt;/code&gt; flag as the following:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;docker run --network&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&amp;lt;network&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The bridge can be seen by running &lt;code&gt;ifconfig&lt;/code&gt; on the host:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;docker0   Link encap:Ethernet  HWaddr 05:22:bb:08:41:b7  
          inet addr:172.17.0.1  Bcast:0.0.0.0  Mask:255.255.0.0
          inet6 addr: fe80::42:fbff:fe80:57a5/64 Scope:Link&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;When the Docker engine (CLI) client or API tells the Docker daemon to run a container, part of the process allocates a bridged interface, unless specified otherwise, that allows processes within the container to communicate to the system host via the virtual Ethernet bridge.&lt;/p&gt;
&lt;p&gt;Virtual Ethernet interfaces, when created, are always created as a pair. You can think of them as one interface on each side of a namespace wall with a tube through the wall connecting them. Packets come in one interface and exit the other, and vice versa.
&lt;br&gt;&lt;br&gt;
&lt;strong&gt;Creating and Listing Network NameSpaces&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Some of these commands you will need to run as root.&lt;/p&gt;
&lt;p&gt;Create:&lt;/p&gt;
&lt;h6 id=&#34;syntax-2&#34;&gt;Syntax&lt;/h6&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;ip netns add &amp;lt;yournamespacename&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h6 id=&#34;example-4&#34;&gt;Example&lt;/h6&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;ip netns add testnamespace&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This ip command adds a bind mount point for the &lt;code&gt;testnamespace&lt;/code&gt; namespace to &lt;code&gt;/var/run/netns/&lt;/code&gt;. When the &lt;code&gt;testnamespace&lt;/code&gt; namespace is created, the resulting file descriptor keeps the network namespace alive and persisted. This allows system administrators to apply configuration to the network namespace without fear that it will disappear when no processes are within it.&lt;/p&gt;
&lt;h6 id=&#34;verify-it-was-added&#34;&gt;Verify it was added&lt;/h6&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;ip netns list&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h6 id=&#34;result-5&#34;&gt;Result&lt;/h6&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;testnamespace&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;However, a network namespace added in this way cannot be used for a Docker container. In order to create a &lt;a href=&#34;https://docs.docker.com/engine/userguide/networking/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Docker network&lt;/a&gt; called &lt;code&gt;kimsdockernet&lt;/code&gt; run the following command:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# bridge is the default driver, so not required to be specified&lt;/span&gt;
docker network create --driver bridge kimsdockernet&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can then follow this with a&lt;br&gt;
&lt;code&gt;docker network ls&lt;/code&gt;&lt;br&gt;
to confirm that the network was added. You can base your network on one of the existing &lt;a href=&#34;https://docs.docker.com/engine/reference/run/#network-settings&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;network drivers&lt;/a&gt; created by Docker, the bridge driver is used by default.
&lt;br&gt;&lt;br&gt;
&lt;a href=&#34;https://docs.docker.com/engine/reference/run/#network-bridge&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;bridge&lt;/code&gt;&lt;/a&gt;: As seen above with the &lt;code&gt;ifconfig&lt;/code&gt; listing on the host system, an interface is created called docker0 when Docker is installed. A pair of veth (Virtual Ethernet) interfaces are created when the container is run with this &lt;code&gt;--network&lt;/code&gt; option. The &lt;code&gt;veth&lt;/code&gt; on the outside of the container will be attached to the bridge, the other &lt;code&gt;veth&lt;/code&gt; is put inside the container&amp;rsquo;s namespace, along with the existing loopback interface.&lt;br&gt;
&lt;a href=&#34;https://docs.docker.com/engine/reference/run/#network-none&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;none&lt;/code&gt;&lt;/a&gt;: There will be no networking in the container other than the loopback interface which was created when the network namespace was created, and has no routes to external traffic.&lt;br&gt;
&lt;a href=&#34;https://docs.docker.com/engine/reference/run/#network-host&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;host&lt;/code&gt;&lt;/a&gt;: Uses the network stack that the host system uses inside the container. The &lt;code&gt;host&lt;/code&gt; mode is more performant than the &lt;code&gt;bridge&lt;/code&gt; mode due to using the hosts native network stack, but also less secure.&lt;br&gt;
&lt;a href=&#34;https://docs.docker.com/engine/reference/run/#network-container&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;container&lt;/code&gt;&lt;/a&gt;: Allows you to specify another container to use its network stack.
&lt;br&gt;&lt;br&gt;
When running: &lt;code&gt;docker network inspect kimsdockernet&lt;/code&gt; before starting the container, and then again after, you will see the new container added to the &lt;code&gt;kimsdockernet&lt;/code&gt; network.
&lt;br&gt;&lt;br&gt;
Now you can run your container using your new network:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;docker run -it --network kimsdockernet --rm --name&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;container0 ubuntu&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;When one or more processes, Docker containers in this case, uses the &lt;code&gt;kimsdockernet&lt;/code&gt; network, it can also be seen opened by the presence of its file descriptor at:
&lt;br&gt;&lt;br&gt;
&lt;code&gt;/var/run/docker/netns/&amp;lt;filedescriptor&amp;gt;&lt;/code&gt;
&lt;br&gt;&lt;br&gt;
You can also see that the container named &lt;code&gt;container0&lt;/code&gt; has a network namespace by running the following command, which shows the file handles for the namespaces, and not just the network namespace:&lt;/p&gt;
&lt;h6 id=&#34;query-namespaces&#34;&gt;Query Namespaces&lt;/h6&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;sudo ls /proc/&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;docker inspect -f &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;{{ .State.Pid }}&amp;#39;&lt;/span&gt; container0&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;/ns -liah&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h6 id=&#34;result-6&#34;&gt;Result&lt;/h6&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;total &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;
&lt;span style=&#34;color:#ae81ff&#34;&gt;1589018&lt;/span&gt; dr-x--x--x &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt; root root &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; Mar &lt;span style=&#34;color:#ae81ff&#34;&gt;14&lt;/span&gt; 16:35 .
&lt;span style=&#34;color:#ae81ff&#34;&gt;1587630&lt;/span&gt; dr-xr-xr-x &lt;span style=&#34;color:#ae81ff&#34;&gt;9&lt;/span&gt; root root &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; Mar &lt;span style=&#34;color:#ae81ff&#34;&gt;14&lt;/span&gt; 16:35 ..
&lt;span style=&#34;color:#ae81ff&#34;&gt;1722671&lt;/span&gt; lrwxrwxrwx &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; root root &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; Mar &lt;span style=&#34;color:#ae81ff&#34;&gt;14&lt;/span&gt; 17:33 cgroup -&amp;gt; cgroup:&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;4026531835&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;span style=&#34;color:#ae81ff&#34;&gt;1722667&lt;/span&gt; lrwxrwxrwx &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; root root &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; Mar &lt;span style=&#34;color:#ae81ff&#34;&gt;14&lt;/span&gt; 17:33 ipc -&amp;gt; ipc:&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;4026532634&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;span style=&#34;color:#ae81ff&#34;&gt;1722670&lt;/span&gt; lrwxrwxrwx &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; root root &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; Mar &lt;span style=&#34;color:#ae81ff&#34;&gt;14&lt;/span&gt; 17:33 mnt -&amp;gt; mnt:&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;4026532632&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;span style=&#34;color:#ae81ff&#34;&gt;1589019&lt;/span&gt; lrwxrwxrwx &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; root root &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; Mar &lt;span style=&#34;color:#ae81ff&#34;&gt;14&lt;/span&gt; 16:35 net -&amp;gt; net:&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;4026532637&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;span style=&#34;color:#ae81ff&#34;&gt;1722668&lt;/span&gt; lrwxrwxrwx &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; root root &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; Mar &lt;span style=&#34;color:#ae81ff&#34;&gt;14&lt;/span&gt; 17:33 pid -&amp;gt; pid:&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;4026532635&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;span style=&#34;color:#ae81ff&#34;&gt;1722669&lt;/span&gt; lrwxrwxrwx &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; root root &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; Mar &lt;span style=&#34;color:#ae81ff&#34;&gt;14&lt;/span&gt; 17:33 user -&amp;gt; user:&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;4026531837&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;span style=&#34;color:#ae81ff&#34;&gt;1722666&lt;/span&gt; lrwxrwxrwx &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; root root &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; Mar &lt;span style=&#34;color:#ae81ff&#34;&gt;14&lt;/span&gt; 17:33 uts -&amp;gt; uts:&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;4026532633&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you run&lt;br&gt;
&lt;code&gt;ip netns list&lt;/code&gt;&lt;br&gt;
again, you may think that you should be able to see the Docker network, but you will not, unless you create the following symlink:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;ln -s /proc/&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;docker inspect -f &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;{{.State.Pid}}&amp;#39;&lt;/span&gt; container0&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;/ns/net /var/run/netns/container0
&lt;span style=&#34;color:#75715e&#34;&gt;# Don&amp;#39;t forget to remove the symlink once the container terminates,&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# else it will be dangling.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you want to run a command inside of the Docker network of a container, you can use the &lt;a href=&#34;http://man7.org/linux/man-pages/man1/nsenter.1.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;nsenter&lt;/code&gt;&lt;/a&gt; command of the &lt;code&gt;util-linux&lt;/code&gt; package:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Show the ethernet state:&lt;/span&gt;
nsenter -t &lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;docker inspect -f &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;{{ .State.Pid }}&amp;#39;&lt;/span&gt; container0&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt; -n ifconfig
&lt;span style=&#34;color:#75715e&#34;&gt;# Or&lt;/span&gt;
nsenter -t &lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;docker inspect -f &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;{{ .State.Pid }}&amp;#39;&lt;/span&gt; container0&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt; -n ip addr show
&lt;span style=&#34;color:#75715e&#34;&gt;# Or&lt;/span&gt;
nsenter --net&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;/var/run/docker/netns/&amp;lt;filedescriptor&amp;gt; ifconfig
&lt;span style=&#34;color:#75715e&#34;&gt;# Or&lt;/span&gt;
nsenter --net&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;/var/run/docker/netns/&amp;lt;filedescriptor&amp;gt; ip addr show&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Deleting Network NameSpaces&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The following command will remove the bind mount for the specified namespace. The namespace will continue to persist until all processes within it are terminated, at which point any virtual interfaces within it will be destroyed and any physical network devices if they were assigned, would be moved back to the initial network namespace, not the process parent.&lt;/p&gt;
&lt;h6 id=&#34;syntax-3&#34;&gt;Syntax&lt;/h6&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;ip netns delete &amp;lt;yournamespacename&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h6 id=&#34;example-5&#34;&gt;Example&lt;/h6&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;ip netns delete testnamespace&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h6 id=&#34;to-remove-a-docker-network&#34;&gt;To remove a docker network&lt;/h6&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;docker network rm kimsdockernet&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you still have a container running, you will receive an error:&lt;br&gt;
&lt;code&gt;Error response from daemon: network kimsdockernet has active endpoints&lt;/code&gt;&lt;br&gt;
Stop your container and try again.&lt;/p&gt;
&lt;p&gt;It also pays to &lt;a href=&#34;https://docs.docker.com/engine/userguide/networking/default_network/container-communication/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;understand container communication&lt;/a&gt; with each other.&lt;/p&gt;
&lt;p&gt;Also checkout the &lt;a href=&#34;#additional-resources&#34;&gt;Additional Resources&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;UTS&lt;/code&gt;&lt;/strong&gt; Do not start your containers with the &lt;code&gt;--uts&lt;/code&gt; flag set to &lt;code&gt;host&lt;/code&gt;&lt;br&gt;
As mentioned in the CIS_Docker_1.13.0_Benchmark &amp;ldquo;&lt;em&gt;Sharing the UTS namespace with the host provides full permission to the container to change the hostname of the host. This is insecure and should not be allowed.&lt;/em&gt;&amp;rdquo;. You can test that the container is not sharing the host&amp;rsquo;s UTS namespace by making sure that the following command returns nothing, instead of &lt;code&gt;host&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;docker ps --quiet --all | xargs docker inspect --format &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;{{ .Id }}: UTSMode={{ .HostConfig.UTSMode }}&amp;#39;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;IPC&lt;/code&gt;&lt;/strong&gt;: In order to stop another untrusted container sharing your containers IPC namespace, you could isolate all of your trusted containers in a VM, or if you are using some type of orchestration, that will usually have functionality to isolate groups of containers. If you can isolate your trusted containers sufficiently, then you may still be able to share the IPC namespace of other near by containers.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;user&lt;/code&gt;&lt;/strong&gt;: If you have read the &lt;a href=&#34;#docker-host-engine-and-containers-namespaces-risks&#34;&gt;risks section&lt;/a&gt; and still want to enable support for user namespaces, you first need to confirm that the host user of the associated containers &lt;code&gt;PID&lt;/code&gt; is not root by running the following CIS Docker Benchmark recommended commands:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;ps -p &lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;docker inspect --format&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;{{ .State.Pid }}&amp;#39;&lt;/span&gt; &amp;lt;CONTAINER ID&amp;gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt; -o pid,user&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Or, you can run the following command and make sure that the &lt;code&gt;userns&lt;/code&gt; is listed under the &lt;code&gt;SecurityOptions&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;docker info --format &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;{{ .SecurityOptions }}&amp;#39;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Once you have confirmed that your containers are not being run as root, you can look at enabling user namespace support on the Docker daemon.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;/etc/subuid&lt;/code&gt; and &lt;code&gt;/etc/subgid&lt;/code&gt; host files will be read for the user and optional group supplied to the &lt;code&gt;--userns-remap&lt;/code&gt; option of &lt;code&gt;dockerd&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;--userns-remap&lt;/code&gt; option accepts the following value types:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;uid&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;uid:gid&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;username&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;username:groupname&lt;/code&gt;
&lt;br&gt;&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The username must exist in the &lt;code&gt;/etc/passwd&lt;/code&gt; file, the &lt;code&gt;sbin/nologin&lt;/code&gt; users are &lt;a href=&#34;https://success.docker.com/KBase/Introduction_to_User_Namespaces_in_Docker_Engine&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;also valid&lt;/a&gt;. Subordinate user Id and group Id ranges need to be specified in &lt;code&gt;/etc/subuid&lt;/code&gt; and &lt;code&gt;/etc/subuid&lt;/code&gt; respectively.
&lt;br&gt;&lt;br&gt;
&amp;ldquo;&lt;em&gt;The UID/GID we want to remap to &lt;a href=&#34;https://success.docker.com/KBase/Introduction_to_User_Namespaces_in_Docker_Engine&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;does not need to match&lt;/a&gt; the UID/GID of the username in &lt;code&gt;/etc/passwd&lt;/code&gt;&lt;/em&gt;&amp;rdquo;. It is the entity in the &lt;code&gt;/etc/subuid&lt;/code&gt; that will be the owner of the Docker daemon and the containers it runs. The value you supply to &lt;code&gt;--userns-remap&lt;/code&gt; if numeric Ids, will be translated back to the valid user or group names of &lt;code&gt;/etc/passwd&lt;/code&gt; and &lt;code&gt;/etc/group&lt;/code&gt; which must exist, if username, groupname, they must match the entities in &lt;code&gt;/etc/passwd&lt;/code&gt;, &lt;code&gt;/etc/subuid&lt;/code&gt;, and &lt;code&gt;/etc/subgid&lt;/code&gt;.
&lt;br&gt;&lt;br&gt;
Alternatively, if you do not want to specify your own user and/or user:group, you can provide the &lt;code&gt;default&lt;/code&gt; value to &lt;code&gt;--userns-remap&lt;/code&gt;, and a default user of &lt;code&gt;dockremap&lt;/code&gt; along with subordinate uid and gid ranges that will be created in &lt;code&gt;/etc/passwd&lt;/code&gt; and &lt;code&gt;/etc/group&lt;/code&gt; if it does not already exist. Then the &lt;code&gt;/etc/subuid&lt;/code&gt; and &lt;code&gt;/etc/subgid&lt;/code&gt; files will be &lt;a href=&#34;https://docs.docker.com/engine/security/userns-remap/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;populated&lt;/a&gt; with a contiguous 65536 length range of subordinate user and group Ids respectively, starting at the offset of the existing entries in those files.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# As root, run:&lt;/span&gt;
dockerd --userns-remap&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;default&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If &lt;code&gt;dockremap&lt;/code&gt; does not already exist, it will be created:&lt;/p&gt;
&lt;h6 id=&#34;etcsubuid-and-etcsubgid&#34;&gt;&lt;code&gt;/etc/subuid and /etc/subgid&lt;/code&gt;&lt;/h6&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&amp;lt;existinguser&amp;gt;:100000:65536
dockremap:165536:65536&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;There are rules about providing multiple range segments in the &lt;code&gt;/etc/subuid&lt;/code&gt;, &lt;code&gt;/etc/subgid&lt;/code&gt; files, but that is beyond the scope of what I am providing here. For those advanced scenario details, check out the &lt;a href=&#34;https://github.com/jquast/docker/blob/2fd674a00f98469caa1ceb572e5ae92a68b52f44/docs/reference/commandline/dockerd.md#detailed-information-on-subuidsubgid-ranges&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Docker engine reference&lt;/a&gt;. The simplest scenario is to use a single contiguous range as seen in the above example, this will cause Docker to map the hosts user and group Ids to the container process using as much of the &lt;code&gt;165536:65536&lt;/code&gt; range as necessary. For example, the host&amp;rsquo;s root user would be mapped to &lt;code&gt;165536&lt;/code&gt;, the next host user would be mapped to container user &lt;code&gt;165537&lt;/code&gt;, and so on until the 65536 possible Ids are all mapped. Processes run as root inside the container are owned by the subordinate uid outside of the container.
&lt;br&gt;&lt;br&gt;
&lt;strong&gt;Disabling user namespace for specific containers&lt;/strong&gt;
&lt;br&gt;&lt;br&gt;
In order to disable user namespace mapping, on a per container basis, once enabled for the Docker daemon, you could supply the &lt;code&gt;--userns=host&lt;/code&gt; value to either of the &lt;code&gt;run&lt;/code&gt;, &lt;code&gt;exec&lt;/code&gt; or &lt;code&gt;create&lt;/code&gt; Docker commands. This would mean the default user within the container was mapped to the host&amp;rsquo;s root.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;read-only-containers&#34;&gt;Read-only Containers&lt;/h1&gt;
&lt;p&gt;In order to set up read-only hosts, physical or virtual, there is a lot of work to be done, and in some cases, it becomes challenging to stop an Operating System writing to some files. I discussed this in depth in the subsections &amp;ldquo;Partitioning on OS Installation&amp;rdquo; and &amp;ldquo;Lock Down the
Mounting of Partitions&amp;rdquo; in the VPS chapter of my book: Fascicle 1 of &lt;a href=&#34;https://f1.holisticinfosecforwebdevelopers.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Holistic Info-Sec for Web Developers&lt;/a&gt;. In contrast, running Docker containers as read-only is trivial.&lt;/p&gt;
&lt;p&gt;Running a container with the &lt;code&gt;--read-only&lt;/code&gt; flag stops writes to the container.&lt;/p&gt;
&lt;p&gt;This can sometimes be a little to constraining, as your application may need to write some temporary data locally. You could volume mount a host directory into your container, but this would obviously expose that temporary data to the host, and also other containers that may mount the same host directory. To stop other containers sharing your mounted volume, you would have to employ &lt;a href=&#34;#docker-host-engine-and-containers-namespaces-mnt-labelling&#34;&gt;labeling&lt;/a&gt; with the likes of LSM and apply the &lt;code&gt;Z&lt;/code&gt; suffix at volume mount time.&lt;/p&gt;
&lt;p&gt;A better, easier and simpler solution would be to apply the &lt;a href=&#34;https://docs.docker.com/engine/reference/commandline/run/#mount-tmpfs-tmpfs&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;--tmpfs&lt;/code&gt;&lt;/a&gt; flag to one or more directories. &lt;code&gt;--tmpfs&lt;/code&gt; allows the creation of tmpfs (appearing as a mounted file system, but stored in volatile memory) mounts on any local directory, which solves the problem of not being able to write to read-only containers.&lt;/p&gt;
&lt;p&gt;If an existing directory is specified with the &lt;code&gt;--tmpfs&lt;/code&gt; option, you will experience similar behaviour to that of mounting an empty directory onto an existing one. The directory is initially empty, any additions or modifications to the directories contents will not persist past container stop.&lt;/p&gt;
&lt;p&gt;The following is an example of running a container as read-only with a writeable tmpfs &lt;code&gt;/tmp&lt;/code&gt; directory:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;docker run -it --rm --read-only --tmpfs /tmp --name&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;my-read-only-container ubuntu&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The default mount flags with &lt;code&gt;--tmpfs&lt;/code&gt; are the same as the Linux default &lt;code&gt;mount&lt;/code&gt; flags, if you do not specify any &lt;code&gt;mount&lt;/code&gt; flags the following will be used:&lt;br&gt;
&lt;code&gt;rw,noexec,nosuid,nodev,size=65536k&lt;/code&gt;&lt;/p&gt;
&lt;h1 id=&#34;runc-and-where-it-fits-in&#34;&gt;runC and Where it Fits in&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;Docker engine&lt;/strong&gt; is now built on containerd and runC. Engine creates the image indirectly via containerd -&amp;gt; runC using &lt;a href=&#34;https://github.com/opencontainers/runc/tree/master/libcontainer&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;libcontainer&lt;/a&gt; -&amp;gt; and passes it to containerd.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://containerd.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;strong&gt;containerd&lt;/strong&gt;&lt;/a&gt; (daemon for Linux or Windows):&lt;br&gt;
containerd is based on the Docker engine&amp;rsquo;s core container runtime. It manages the complete container life-cycle, managing primitives on Linux and Windows hosts such as the following, whether directly or indirectly:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Image transfer and storage&lt;/li&gt;
&lt;li&gt;Container execution and supervision&lt;/li&gt;
&lt;li&gt;Management of network interfaces&lt;/li&gt;
&lt;li&gt;Local storage&lt;/li&gt;
&lt;li&gt;Native plumbing level API&lt;/li&gt;
&lt;li&gt;Full Open Container Initiative (OCI) support: image and runtime (runC) specification&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/containerd/containerd&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;containerd&lt;/code&gt;&lt;/a&gt; calls &lt;code&gt;containerd-shim&lt;/code&gt; which uses runC to run the container. &lt;code&gt;containerd-shim&lt;/code&gt; allows the runtime, which is &lt;code&gt;docker-runc&lt;/code&gt; in Docker&amp;rsquo;s case, to exit once it has started the container, thus allowing the container to run without a daemon. You can see this if you run&lt;br&gt;
&lt;code&gt;ps aux | grep docker&lt;/code&gt;&lt;br&gt;
In fact, if you run this command you will see how all the components hang together. Viewing this output along with the diagram below, will help solidify your understanding of the relationships between the components.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://runc.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;strong&gt;runC&lt;/strong&gt;&lt;/a&gt; is the container runtime that runs containers (think, run Container) according to the OCI specification, runC is a small standalone command line tool (CLI) built on and providing interface to libcontainer, which does most of the work. runC provides interface with:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linux Kernel Namespaces&lt;/li&gt;
&lt;li&gt;Cgroups&lt;/li&gt;
&lt;li&gt;Linux Security Modules&lt;/li&gt;
&lt;li&gt;Capabilities&lt;/li&gt;
&lt;li&gt;Seccomp&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;These features have been integrated into the low level, light weight, portable, container runtime CLI called runC, with libcontainer doing the heavy lifting. It has no dependency on the rest of the Docker platform, and has all the code required by Docker to interact with the container specific system features. More correctly, libcontainer is the library that interfaces with the above mentioned kernel features. runC leverages libcontainer directly, without the Docker engine being required in the middle.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/opencontainers/runc&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;runC&lt;/a&gt; was created by the OCI, whose goal is to have an industry standard for container runtimes and formats, attempting to ensure that containers built for one engine can run on other engines.&lt;/p&gt;














&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;
        &lt;img alt=&#34;&#34; srcset=&#34;
               /media/post/2018/04/DockerArchitecture_hue7bdac92e3b28b5ea456746149ee7ba4_30401_c8276063c90c6333167baad631da0049.png 400w,
               /media/post/2018/04/DockerArchitecture_hue7bdac92e3b28b5ea456746149ee7ba4_30401_c5b39f0bfa4584a548e1e4f2b16e5274.png 760w,
               /media/post/2018/04/DockerArchitecture_hue7bdac92e3b28b5ea456746149ee7ba4_30401_1200x1200_fit_lanczos_2.png 1200w&#34;
               src=&#34;https://binarymist.io/media/post/2018/04/DockerArchitecture_hue7bdac92e3b28b5ea456746149ee7ba4_30401_c8276063c90c6333167baad631da0049.png&#34;
               width=&#34;720&#34;
               height=&#34;546&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;hr&gt;
&lt;p&gt;&lt;em&gt;If you&amp;rsquo;re working with Docker, you owe it to yourself to get this book.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;btn btn-outline-primary&#34; href=&#34;https://leanpub.com/dockersecurity-quickreference&#34; target=&#34;_blank&#34;&gt;&lt;i class=&#34;fab fa-leanpub&#34;&gt;&lt;/i&gt; &lt;b&gt;Get The Full Book&lt;/b&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;At this stage, it&amp;rsquo;s only $9 NZ, get your self a copy before I realise it&amp;rsquo;s too cheap.&lt;/p&gt;
&lt;br&gt;
&lt;p&gt;As always, &lt;a href=&#34;#comments&#34;&gt;let me know&lt;/a&gt; if there&amp;rsquo;s anything you don&amp;rsquo;t understand, or submit a &lt;a href=&#34;https://github.com/binarymist/BinaryMistBlog/pulls&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;pull request&lt;/a&gt; or open an &lt;a href=&#34;https://github.com/binarymist/BinaryMistBlog/issues&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;issue&lt;/a&gt; if you find any errors. 😃&lt;/p&gt;
&lt;h1 id=&#34;additional-resources&#34;&gt;Additional Resources&lt;/h1&gt;
&lt;p&gt;The following are the additional resources in the &lt;a href=&#34;https://binarymist.io/publication/docker-security/&#34;&gt;Docker Security&lt;/a&gt; book.&lt;/p&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    I&amp;rsquo;m also going to be interviewing &lt;a href=&#34;http://mhausenblas.info/&#34;&gt;Michael Hausenblas&lt;/a&gt; in a couple of months on the topic of Docker Networking. Keep your eye on my &lt;a href=&#34;https://binarymist.io/publication/#8&#34;&gt;Publications&lt;/a&gt; if this interests you, or even leave a comment &lt;a href=&#34;#comments&#34;&gt;below&lt;/a&gt; and I&amp;rsquo;ll let you know when it&amp;rsquo;s available.
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Cisecurity&lt;/strong&gt;&lt;br&gt;
has an &lt;a href=&#34;https://benchmarks.cisecurity.org/tools2/docker/CIS_Docker_1.13.0_Benchmark_v1.0.0.pdf&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;excellent resource&lt;/a&gt; for hardening docker images, which the Docker Security team helped with. The CIS Benchmark for Docker should be consulted in parallel to reading my Docker Security book&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;I also conducted an interview called &amp;ldquo;&lt;a href=&#34;https://binarymist.io/publication/ser-podcast-docker-security/&#34;&gt;Docker Security&lt;/a&gt;&amp;quot;&lt;/strong&gt;&lt;br&gt;
for Software Engineering Radio in which Docker Security Team Lead Diogo Monica appeared as guest and provided some excellent advice, opinions, and food for thought, be sure to listen to it&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Network Namespace&lt;/strong&gt; source code&lt;br&gt;
&lt;a href=&#34;https://github.com/torvalds/linux/blob/master/net/core/net_namespace.c&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://github.com/torvalds/linux/blob/master/net/core/net_namespace.c&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;IP-NETNS&lt;/strong&gt; man page&lt;br&gt;
&lt;a href=&#34;http://man7.org/linux/man-pages/man8/ip-netns.8.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://man7.org/linux/man-pages/man8/ip-netns.8.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Introducing Linux Network Namespaces&lt;/strong&gt;&lt;br&gt;
&lt;a href=&#34;http://blog.scottlowe.org/2013/09/04/introducing-linux-network-namespaces/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://blog.scottlowe.org/2013/09/04/introducing-linux-network-namespaces/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Network namespaces&lt;/strong&gt;&lt;br&gt;
&lt;a href=&#34;https://blogs.igalia.com/dpino/2016/04/10/network-namespaces/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://blogs.igalia.com/dpino/2016/04/10/network-namespaces/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;docker network&lt;/strong&gt;&lt;br&gt;
&lt;a href=&#34;https://docs.docker.com/engine/reference/commandline/network/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://docs.docker.com/engine/reference/commandline/network/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Namespaces in operation&lt;/strong&gt;&lt;br&gt;
&lt;a href=&#34;https://lwn.net/Articles/580893/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://lwn.net/Articles/580893/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;dockerscan&lt;/strong&gt; may be worth keeping an eye on for offensive testing&lt;br&gt;
&lt;a href=&#34;https://github.com/cr0hn/dockerscan&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://github.com/cr0hn/dockerscan&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Docker SELinux Man Page&lt;/strong&gt;&lt;br&gt;
&lt;a href=&#34;https://www.mankier.com/8/docker_selinux&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://www.mankier.com/8/docker_selinux&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Increasing Attacker Cost using Immutable Infrastructure&lt;/strong&gt;&lt;br&gt;
&lt;a href=&#34;https://diogomonica.com/2016/11/19/increasing-attacker-cost-using-immutable-infrastructure/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://diogomonica.com/2016/11/19/increasing-attacker-cost-using-immutable-infrastructure/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Diogo Monica on Mutual TLS&lt;/strong&gt;&lt;br&gt;
&lt;a href=&#34;https://www.youtube.com/watch?v=apma_C24W58&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://www.youtube.com/watch?v=apma_C24W58&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Diogo Monica on Orchestrating Least Privilege&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=xpGNAiA3XW8&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://www.youtube.com/watch?v=xpGNAiA3XW8&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.slideshare.net/Docker/orchestrating-least-privilege-by-diogo-monica-67186063&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://www.slideshare.net/Docker/orchestrating-least-privilege-by-diogo-monica-67186063&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Comparison of secrets across orchestrators&lt;/strong&gt;&lt;br&gt;
&lt;a href=&#34;https://medium.com/on-docker/secrets-and-lie-abilities-the-state-of-modern-secret-management-2017-c82ec9136a3d#.f6yba66ti&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://medium.com/on-docker/secrets-and-lie-abilities-the-state-of-modern-secret-management-2017-c82ec9136a3d#.f6yba66ti&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Description of how PKI automatically gets setup in swarm&lt;/strong&gt;&lt;br&gt;
&lt;a href=&#34;https://docs.docker.com/engine/swarm/how-swarm-mode-works/pki/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://docs.docker.com/engine/swarm/how-swarm-mode-works/pki/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Image signing&lt;/strong&gt;, and why it is important&lt;br&gt;
&lt;a href=&#34;https://blog.docker.com/2015/08/content-trust-docker-1-8/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://blog.docker.com/2015/08/content-trust-docker-1-8/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Docker security scanning (content integrity)&lt;/strong&gt;&lt;br&gt;
&lt;a href=&#34;https://blog.docker.com/2016/05/docker-security-scanning/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://blog.docker.com/2016/05/docker-security-scanning/&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Development Team Security Teardown $995NZ &#43; GST</title>
      <link>https://binarymist.io/project/service-development-team-security-teardown/</link>
      <pubDate>Thu, 22 Mar 2018 00:00:00 +0000</pubDate>
      <guid>https://binarymist.io/project/service-development-team-security-teardown/</guid>
      <description>&lt;p&gt;There are often many issues with any given Development Teams process, such as the following points:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The way the individuals communicate&lt;/li&gt;
&lt;li&gt;Obstacles that slow the Team down unnecessarily&lt;/li&gt;
&lt;li&gt;Waiting on information and decisions from people outside of the team&lt;/li&gt;
&lt;li&gt;Team members getting asked to do tasks not on the critical path&lt;/li&gt;
&lt;li&gt;Lack of autonomy&lt;/li&gt;
&lt;li&gt;lack of necessary skills and knowledge to create robust, scalable, extensible, maintainable, and secure systems&lt;/li&gt;
&lt;li&gt;High level of multi-tasking&lt;/li&gt;
&lt;li&gt;Low morale due to many issues&lt;/li&gt;
&lt;li&gt;Many others&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Similarly there can be many technical issues that negatively affect the rapid development of the type of software solution you are trying to get to market, such as:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;High defect counts&lt;/li&gt;
&lt;li&gt;Code tightly coupled and hard to extend&lt;/li&gt;
&lt;li&gt;Interfaces, encapsulation and abstractions &lt;a href=&#34;https://binarymist.io/blog/2009/12/24/keeping-encapsulation-on-ones-mind/&#34;&gt;breaking down&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Lack of test coverage, and in some cases too much test coverage in the wrong areas, and even the wrong types of tests&lt;/li&gt;
&lt;li&gt;Not knowing where and how to start in terms of improving your information security stature&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;As Software Developers, often we can&amp;rsquo;t even see the faults in front of us. Sometimes it&amp;rsquo;s just a matter of not wanting to rock the boat.&lt;/p&gt;
&lt;br&gt;
&lt;h4 id=&#34;imagine-being-able-to-see-what-you-could-never-see-before&#34;&gt;Imagine Being Able To See What You Could Never See Before&lt;/h4&gt;
&lt;br&gt;
This is where a second pair of eyes with the knowledge and experience of working with and mentoring many high performance, security focussed Development Teams, can really provide the visibility you&#39;ve been looking for to make the best decisions.
&lt;p&gt;Kim&amp;rsquo;s ability to sit within a Development Team for a short period of time, intuitively working with your key stake holders, discussing in brutal honesty where the lowest hanging fruit is in terms of items that are slowing your Team(s) down, and stopping them from reaching their maximum performance and effectiveness has proven immensely valuable to many organisations.&lt;/p&gt;
&lt;p&gt;We will provide you with the visibility and actionable items you need in order to make the positive changes your Development Team(s) need.&lt;/p&gt;
&lt;p&gt;This is not a road map, but will provide you with the visibility and quick tips you need in order to make the most important changes quickly. We can help create a &lt;a href=&#34;https://binarymist.io/project/service-development-team-security-roadmap/&#34;&gt;road map&lt;/a&gt; for you if you need additional detail and direction.&lt;/p&gt;
&lt;br&gt;
&lt;h4 id=&#34;give-your-development-teams-the-leading-edge&#34;&gt;Give Your Development Teams The Leading Edge&lt;/h4&gt;
&lt;br&gt;
This service provides a teardown of either one of the following. There will be some cross-over between the two options, but this engagement is only for one of the following two options:
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Your Development Team&amp;rsquo;s &lt;a href=&#34;https://f0.holisticinfosecforwebdevelopers.com/chap06.html#process-and-practises-agile-development-and-practices&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;process and practises&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;If we are performing teardown on the process and practises, it will be focussed primarily on the people involved and how they do what they do&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Your chosen software project you are currently developing and/or maintaining, reviewing.&lt;/p&gt;
&lt;p&gt;If performing the project based teardown, the work will be mostly of a technical nature&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;br&gt;
&lt;h5 id=&#34;heres-how-it-works&#34;&gt;Here&amp;rsquo;s How It Works&lt;/h5&gt;
&lt;br&gt;
If the area of focus is on your Development Team&#39;s process and practises,&lt;br&gt;
Kim will visit your site in person or work with you remotely. We will review the target Development Team and supporting personnel, their process and practises, and how they interact with each other. We will look at how they are performing, document and discuss potential areas for improvement, as well as their areas of strength. We will capitalise on the Teams strengths, and create actionable work items to improve the Teams weak areas and further leverage the Teams strengths.
&lt;p&gt;If the area of focus is on your chosen software project,&lt;br&gt;
Similarly Kim will visit your site or work with you remotely, reviewing as many of the following artefacts that you can make available as possible, document and discuss potential issues, improvements, and areas where the system is in good shape that can be further capitalised on:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Build Pipeline / Supply Chain&lt;/li&gt;
&lt;li&gt;Test Suites (Unit, Integration, Behavioural)&lt;/li&gt;
&lt;li&gt;Coding Standards, etc&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If working remotely, Kim can video or take annotated screen shots of potential issues and provide guidance on how to improve.&lt;/p&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    Each member of the Development Team will receive &lt;strong&gt;free&lt;/strong&gt; copies of the first two parts of Kim&amp;rsquo;s book series &amp;ldquo;&lt;a href=&#34;https://binarymist.io/publication/holistic-infosec-for-web-developers/&#34;&gt;Holistic Info-Sec for Web Developers&lt;/a&gt;&amp;rdquo; (weighing in at approximately 700 pages) which much of Kim&amp;rsquo;s knowledge and experience has been distilled into. this will serve as an invaluable ongoing self learning, and reference resource to help keep the Team on Track.
  &lt;/div&gt;
&lt;/div&gt;
&lt;br&gt;
&lt;blockquote&gt;
&lt;p&gt;If you&amp;rsquo;re ready to lift your Development Teams game and give them the edge they need&amp;hellip;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;br&gt;
&lt;hr&gt;
&lt;h1 id=&#34;reserve-your-consultation&#34;&gt;Reserve Your Consultation&lt;/h1&gt;
&lt;p&gt;&lt;em&gt;Currently we have availability for select new clients.&lt;/em&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;a class=&#34;btn btn-outline-primary&#34; href=&#34;https://binarymist.io/#contact&#34;&gt;&lt;b&gt;Reserve Your Confidential Consultation&lt;/b&gt;&lt;/a&gt;&lt;/p&gt;
&lt;br&gt;
&lt;h2 id=&#34;money-back-guarantee&#34;&gt;Money-Back Guarantee!&lt;/h2&gt;
&lt;p&gt;We are so sure we can provide the high quality advice you would expect, that we offer a money back guarantee. If at the end of the engagement, you feel that you have not gotten your money&amp;rsquo;s worth, just let us know and we will refund your payment.&lt;/p&gt;
&lt;br&gt;
&lt;p&gt;Review our &lt;a href=&#34;https://binarymist.io/tags/portfolio&#34;&gt;Portfolio&lt;/a&gt; and &lt;a href=&#34;https://binarymist.io/tags/testimonial&#34;&gt;Testimonials&lt;/a&gt; for some of the teams we have helped reduce costs, security defects, and improve code quality, process and practises by providing consulting services.&lt;/p&gt;
&lt;h2 id=&#34;what-our-customers-are-saying&#34;&gt;What our customers are saying&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Andrew Balfour&lt;/p&gt;
&lt;img class=&#34;testimonial-img-bordered&#34; src=&#34;../testimonial-andrew-balfour/featured.jpg&#34;&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&#34;https://binarymist.io/project/portfolio-schoollinks&#34;&gt;Owner/Managing Director, Solvam Corporation Ltd&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Kim Carter was engaged on a contract basis to implement and guide our future software development for School-links. &lt;a href=&#34;http://www.school-links.co.nz&#34;&gt;www.school-links.co.nz&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;In doing that he -&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Brought to our product a much &lt;strong&gt;higher level of expertise&lt;/strong&gt; and capability complementing our development team&lt;/li&gt;
&lt;li&gt;Directed a disciplined and methodical software development process as the Scrum Master of ‘Scrum’&lt;/li&gt;
&lt;li&gt;Helped with the restructuring and planning of our infrastructure in order to scale the product successfully&lt;/li&gt;
&lt;li&gt;Brings &lt;strong&gt;security expertise&lt;/strong&gt; at a high level with the ability to implement &lt;strong&gt;ongoing security&lt;/strong&gt; hardening program and audits&lt;/li&gt;
&lt;li&gt;Introduced the Scrum process which provided more &lt;strong&gt;consistent and accurate&lt;/strong&gt; release cycles enabling our marketing efforts to be better coordinated and focused&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Kim is a good team member and we will look to reengage with his services when required.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Stefan Streichsbier&lt;/p&gt;
&lt;img class=&#34;testimonial-img-bordered&#34; src=&#34;../testimonial-stefan-streichsbier/featured.jpg&#34;&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&#34;https://binarymist.io/project/portfolio-numisec&#34;&gt;Numisec Pte. Ltd&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I&amp;rsquo;ve met Kim at DevSecCon Singapore in 2017 where he gave a well-received &lt;a href=&#34;https://binarymist.io/event/devseccon-asia-2017-workshop-developing-a-high-perf-security-focussed-agile-team/&#34;&gt;workshop&lt;/a&gt;. A few months later we had a project where his top-notch strong &lt;strong&gt;Node.js security&lt;/strong&gt; code review skills were required and this gave us the chance to work together closely.&lt;/p&gt;
&lt;p&gt;Over a 2 week period he was doing security code reviews of containerized Node.js &lt;strong&gt;microservices&lt;/strong&gt; in a very thorough way. We communicated well and progressed quickly. Kim has a very broad yet deep understanding of modern application security that comes from years of experience. I can recommend Kim to anyone who needs an &lt;a href=&#34;https://f1.holisticinfosecforwebdevelopers.com/chap06.html#web-applications&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;application security&lt;/a&gt; expert and wants a professional second opinion on the security posture of an application.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;br&gt;
&lt;p&gt;Kim has had the unique opportunity to work in both defensive (development) and &lt;a href=&#34;https://binarymist.io/event/nz-js-con-2017-the-art-of-exploitation/&#34;&gt;offensive&lt;/a&gt; (penetration testing) teams, across many domains, for a large number of years. This has produced a deep understanding of what Development Team(s) need in order to help you create solutions that will effectively resist attacks from your adversaries.&lt;/p&gt;

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/IVLpmCtiPZ0&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;br&gt;
&lt;p&gt;Kim&amp;rsquo;s experience within Development Teams is exhibited frequently at conference &lt;a href=&#34;https://binarymist.io/event/&#34;&gt;talks&lt;/a&gt;, &lt;a href=&#34;https://binarymist.io/project/service-development-team-security-training/&#34;&gt;workshops&lt;/a&gt;, &lt;a href=&#34;https://binarymist.io/publication/#8&#34;&gt;podcasts&lt;/a&gt; that he hosts, and distilled in the &lt;a href=&#34;https://binarymist.io/publication/kims-selected-publications/&#34;&gt;books&lt;/a&gt; he writes.&lt;/p&gt;
&lt;p&gt;The following presentation Kim gave at BSides Wellington was around the additional process and practises that he advocates Development Teams embrace and make part of their culture.&lt;/p&gt;

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/hRs8lWtR5LM&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;br&gt;
&lt;p&gt;&lt;a href=&#34;https://f0.holisticinfosecforwebdevelopers.com/toc.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Chapter four&lt;/a&gt; of the first part of the Holistic Info-Sec for Web Developers book series addresses process and practises for Software Developers based on the learnings of the attackers.&lt;/p&gt;
&lt;br&gt;
&lt;blockquote&gt;
&lt;p&gt;You owe it to your Development Teams to give them the edge they need to produce the software solutions you require. Don&amp;rsquo;t put it off any longer&amp;hellip;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;br&gt;
&lt;hr&gt;
&lt;h1 id=&#34;reserve-your-consultation-1&#34;&gt;Reserve Your Consultation&lt;/h1&gt;
&lt;p&gt;&lt;em&gt;Currently we have availability for select new clients.&lt;/em&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;a class=&#34;btn btn-outline-primary&#34; href=&#34;https://binarymist.io/#contact&#34;&gt;&lt;b&gt;Reserve Your Confidential Consultation&lt;/b&gt;&lt;/a&gt;&lt;/p&gt;
&lt;br&gt;
&lt;p&gt;Kim only has availability for a few of these engagements per month. Scheduling is first come, first served, so the sooner you book your consultation, the sooner your Development Team will be able to really start performing.&lt;/p&gt;
&lt;br&gt;
</description>
    </item>
    
    <item>
      <title>Workshop - Building Security Into Your Development Teams</title>
      <link>https://binarymist.io/event/owaspnzday-2018-workshop-building-security-into-your-development-team/</link>
      <pubDate>Sun, 04 Feb 2018 09:00:00 +1300</pubDate>
      <guid>https://binarymist.io/event/owaspnzday-2018-workshop-building-security-into-your-development-team/</guid>
      <description>













&lt;figure  id=&#34;figure-owasp-new-zealand-day-2018-workshop&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;
        &lt;img alt=&#34;owasp new zealand day 2018 workshop&#34; srcset=&#34;
               /media/talk/2018-owasp-workshop_hueab7eabba00abaf3020ee9e481c2300a_62741_7b34461d5d3c9543edf0c0752ad0643e.jpg 400w,
               /media/talk/2018-owasp-workshop_hueab7eabba00abaf3020ee9e481c2300a_62741_d9f549802d1b9e9ad699bd3863fcf3e6.jpg 760w,
               /media/talk/2018-owasp-workshop_hueab7eabba00abaf3020ee9e481c2300a_62741_1200x1200_fit_q90_lanczos.jpg 1200w&#34;
               src=&#34;https://binarymist.io/media/talk/2018-owasp-workshop_hueab7eabba00abaf3020ee9e481c2300a_62741_7b34461d5d3c9543edf0c0752ad0643e.jpg&#34;
               width=&#34;720&#34;
               height=&#34;462&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      OWASP New Zealand Day 2018 workshop
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;p&gt;Few organisations understand the &lt;a href=&#34;https://binarymist.io/event/all-day-devops-2017-talk-secrets-of-a-high-performance-security-focussed-agile-team&#34;&gt;secrets&lt;/a&gt; of shifting the focus on security from late in the software development life-cycle to within the Development Team.&lt;/p&gt;
&lt;p&gt;Not only does this significantly reduce the number of security defects being pushed to your production systems, but also significantly reduces the total cost of development.&lt;/p&gt;
&lt;h2 id=&#34;cheapest-placehttpsf0holisticinfosecforwebdeveloperscomchap06htmlleanpub-auto-cheapest-place-to-deal-with-defects-to-deal-with-defects&#34;&gt;&lt;a href=&#34;https://f0.holisticinfosecforwebdevelopers.com/chap06.html#leanpub-auto-cheapest-place-to-deal-with-defects&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Cheapest place&lt;/a&gt; to deal with defects&lt;/h2&gt;
&lt;p&gt;There have been many studies specifically looking at the costs of finding and fixing defects early, as opposed to the planning of how to fix defects once the product is delivered, or not planning at all.&lt;/p&gt;
&lt;p&gt;The following table shows the average cost of fixing defects based on when they were introduced versus when they are detected. Putting these practises in the right order can reduce costs of fixing security defects by up to 100 times.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://f0.holisticinfosecforwebdevelopers.com/chap06.html#leanpub-auto-cheapest-place-to-deal-with-defects&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;













&lt;figure  id=&#34;figure-average-cost-of-fixing-defects&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;
        &lt;img alt=&#34;Average Cost of Fixing Defects&#34; srcset=&#34;
               /media/project/Countermeasures-Backlog_hu6c0da8d250bbaca3225252814323b04b_73370_43de82003111eeefbf6287f3c710fbff.jpg 400w,
               /media/project/Countermeasures-Backlog_hu6c0da8d250bbaca3225252814323b04b_73370_fe08344f00ad4fc4683a3e1bc4da5c96.jpg 760w,
               /media/project/Countermeasures-Backlog_hu6c0da8d250bbaca3225252814323b04b_73370_1200x1200_fit_q90_lanczos.jpg 1200w&#34;
               src=&#34;https://binarymist.io/media/project/Countermeasures-Backlog_hu6c0da8d250bbaca3225252814323b04b_73370_43de82003111eeefbf6287f3c710fbff.jpg&#34;
               width=&#34;720&#34;
               height=&#34;590&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      Average Cost of Fixing Defects
    &lt;/figcaption&gt;&lt;/figure&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;So&amp;hellip; by simply shifting the security expertise from the end of the project to within the development team, thus enabling developers to find and fix their defects as they are being introduced, huge cost savings can be enjoyed.&lt;/p&gt;
&lt;p&gt;This is not as difficult as you may think.&lt;/p&gt;
&lt;h2 id=&#34;on-the-day&#34;&gt;On the Day&lt;/h2&gt;
&lt;p&gt;Kim will lead the class through the tools, techniques and thought processes of both red (attacking) and blue (defending) teams along with how to combine these attributes into the purple team focussing on security, productivity, and tasked with continuously delivering sustainable maintainable technical solutions to market.&lt;/p&gt;
&lt;p&gt;Kim will explain the roles of &amp;lsquo;T&amp;rsquo; shaped professionals, including placement of security champions to create your purple Development Teams.&lt;/p&gt;
&lt;p&gt;We will work through how to implement the Sensible Security Model (SSM) within each and every Sprint, including:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Creating actionable countermeasure Product Backlog Items&lt;/li&gt;
&lt;li&gt;Integrating them into the same Product Backlog that your Development Team has been pulling business focussed items from&lt;/li&gt;
&lt;li&gt;Ordering them based on the risk ratings you create for each&lt;/li&gt;
&lt;/ol&gt;














&lt;figure  id=&#34;figure-countermeasures-backlog&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;
        &lt;img alt=&#34;Countermeasures Backlog&#34; srcset=&#34;
               /media/project/Countermeasures-Backlog_hu6c0da8d250bbaca3225252814323b04b_73370_43de82003111eeefbf6287f3c710fbff.jpg 400w,
               /media/project/Countermeasures-Backlog_hu6c0da8d250bbaca3225252814323b04b_73370_fe08344f00ad4fc4683a3e1bc4da5c96.jpg 760w,
               /media/project/Countermeasures-Backlog_hu6c0da8d250bbaca3225252814323b04b_73370_1200x1200_fit_q90_lanczos.jpg 1200w&#34;
               src=&#34;https://binarymist.io/media/project/Countermeasures-Backlog_hu6c0da8d250bbaca3225252814323b04b_73370_43de82003111eeefbf6287f3c710fbff.jpg&#34;
               width=&#34;720&#34;
               height=&#34;590&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      Countermeasures Backlog
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;p&gt;Kim will discuss how and where Agile Development Teams often fail, along with how to succeed with security with a &lt;a href=&#34;https://f0.holisticinfosecforwebdevelopers.com/chap06.html#leanpub-auto-how-and-why-many-software-development-shops-fail&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;familiar anecdote&lt;/a&gt;. Then augmenting your Scrum process within each and every Sprint, with a collection of development focussed &lt;a href=&#34;http://f0.holisticinfosecforwebdevelopers.com/chap06.html#process-and-practises-agile-development-and-practices&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;processes and practises&lt;/a&gt;, tools and techniques that have proven their value at drastically reducing defects before production deployment.&lt;/p&gt;
&lt;p&gt;Kim will walk us through the SSM threat modelling process with theory and hands on exercises in areas such as Physical, People, VPS, Network, Cloud and Web Applications. Including sub topics such as &lt;a href=&#34;https://binarymist.io/publication/docker-security/&#34;&gt;Docker&lt;/a&gt;, &lt;a href=&#34;https://f1.holisticinfosecforwebdevelopers.com/chap05.html#cloud-countermeasures-serverless&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Serverless&lt;/a&gt;, &lt;a href=&#34;https://binarymist.io/event/isig-2017-workshop-windows-exploitation-and-persistence-with-ps/&#34;&gt;PowerShell&lt;/a&gt; and many others.&lt;/p&gt;














&lt;figure  id=&#34;figure-sensible-security-model&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;
        &lt;img alt=&#34;Sensible Security Model&#34; srcset=&#34;
               /media/project/SSM_hud377ef778310226cac3a9943c776b1f7_52032_c36cad7901a6f9b82609c51780b94d72.jpg 400w,
               /media/project/SSM_hud377ef778310226cac3a9943c776b1f7_52032_697f09cbc2f8d0105db84cebeed25e25.jpg 760w,
               /media/project/SSM_hud377ef778310226cac3a9943c776b1f7_52032_1200x1200_fit_q90_lanczos.jpg 1200w&#34;
               src=&#34;https://binarymist.io/media/project/SSM_hud377ef778310226cac3a9943c776b1f7_52032_c36cad7901a6f9b82609c51780b94d72.jpg&#34;
               width=&#34;720&#34;
               height=&#34;327&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      Sensible Security Model
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;br&gt;
&lt;h2 id=&#34;more-detailh4&#34;&gt;More Detail&lt;/h4&gt;&lt;/h2&gt;
&lt;p&gt;Training material will be augmented with Extracts from Kim&amp;rsquo;s interviews on Software Engineering Radio with security experts such as Diogo Mónica (&lt;a href=&#34;https://binarymist.io/publication/ser-podcast-docker-security/&#34;&gt;Docker Security&lt;/a&gt; Team Lead) and &lt;a href=&#34;https://binarymist.io/publication/ser-podcast-network-security&#34;&gt;Haroon Meer&lt;/a&gt; (creator of Canary tools and tokens).&lt;/p&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    Each student will receive &lt;strong&gt;free&lt;/strong&gt; copies of the first two parts of Kim&amp;rsquo;s book series &amp;ldquo;&lt;a href=&#34;https://binarymist.io/publication/holistic-infosec-for-web-developers/&#34;&gt;Holistic Info-Sec for Web Developers&lt;/a&gt;&amp;rdquo; (weighing in at approximately 700 pages) which this training is based on, as companion course material to accompany the training, to assist with ongoing self learning, and as a valuable reference resource long after the training has finished.
  &lt;/div&gt;
&lt;/div&gt;
&lt;h3 id=&#34;learnings&#34;&gt;Learnings&lt;/h3&gt;
&lt;p&gt;Coverage of topic chapters:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://f0.holisticinfosecforwebdevelopers.com/chap07.html#physical&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Physical&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://f0.holisticinfosecforwebdevelopers.com/chap08.html#people&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;People&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://f1.holisticinfosecforwebdevelopers.com/chap03.html#vps&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;VPS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://f1.holisticinfosecforwebdevelopers.com/chap04.html#network&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Network&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://f1.holisticinfosecforwebdevelopers.com/chap05.html#cloud&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Cloud&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://f1.holisticinfosecforwebdevelopers.com/chap06.html#web-applications&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Web Applications&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;br&gt;
&lt;h2 id=&#34;what-others-have-said&#34;&gt;What others have said&lt;/h2&gt;
&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;Enjoying the variety in &lt;a href=&#34;https://twitter.com/binarymist?ref_src=twsrc%5Etfw&#34;&gt;@binarymist&lt;/a&gt; ‘s training today. So much content :) &lt;a href=&#34;https://t.co/OWKAFKFwu2&#34;&gt;pic.twitter.com/OWKAFKFwu2&lt;/a&gt;&lt;/p&gt;&amp;mdash; Kylie McDevitt (@kylieengineer) &lt;a href=&#34;https://twitter.com/kylieengineer/status/923342793405165569?ref_src=twsrc%5Etfw&#34;&gt;October 26, 2017&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;

&lt;br&gt;
</description>
    </item>
    
    <item>
      <title>Docker Security - Quick Reference</title>
      <link>https://binarymist.io/publication/docker-security/</link>
      <pubDate>Mon, 01 Jan 2018 00:00:00 +0000</pubDate>
      <guid>https://binarymist.io/publication/docker-security/</guid>
      <description>&lt;p&gt;Check out Kim&amp;rsquo;s &lt;a href=&#34;https://binarymist.io/blog/2018/03/31/docker-security/&#34;&gt;blog post&lt;/a&gt; which goes into some of the detail within this book, along with what &lt;a href=&#34;https://binarymist.io/blog/2018/03/31/docker-security/#comments&#34;&gt;others are saying&lt;/a&gt; about Docker Security.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://leanpub.com/dockersecurity-quickreference&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;













&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;
        &lt;img alt=&#34;Docker Security Quick Reference&#34; srcset=&#34;
               /media/publication/title_page_docker-security_720_hufbfdc40a69121df1e8e12d60d596ff18_33085_fba40a7757c13a9d5aaf89f5d2b9a6a3.png 400w,
               /media/publication/title_page_docker-security_720_hufbfdc40a69121df1e8e12d60d596ff18_33085_08eda1ab82e35a5e1d438d2d93a4e431.png 760w,
               /media/publication/title_page_docker-security_720_hufbfdc40a69121df1e8e12d60d596ff18_33085_1200x1200_fit_lanczos_2.png 1200w&#34;
               src=&#34;https://binarymist.io/media/publication/title_page_docker-security_720_hufbfdc40a69121df1e8e12d60d596ff18_33085_fba40a7757c13a9d5aaf89f5d2b9a6a3.png&#34;
               width=&#34;587&#34;
               height=&#34;760&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Please note that the entire content of this book is included in The VPS chapter of &lt;a href=&#34;https://f1.holisticinfosecforwebdevelopers.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Holistic InfoSec for Web Developers F1&lt;/a&gt;.&lt;/p&gt;
&lt;br&gt;
&lt;h5 id=&#34;errata-errors-typos-etc&#34;&gt;Errata (errors, typos, etc.)&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;Submit an &lt;a href=&#34;https://github.com/binarymist/dockersecurity-quickreference/issues&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;issue&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Open &lt;a href=&#34;https://github.com/binarymist/dockersecurity-quickreference/issues?q=is%3Aopen&amp;#43;is%3Aissue&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;issues&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Closed &lt;a href=&#34;https://github.com/binarymist/dockersecurity-quickreference/issues?q=is%3Aissue&amp;#43;is%3Aclosed&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;issues&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Development Team Security Roadmap $2995NZ &#43; GST</title>
      <link>https://binarymist.io/project/service-development-team-security-roadmap/</link>
      <pubDate>Wed, 13 Dec 2017 00:00:00 +0000</pubDate>
      <guid>https://binarymist.io/project/service-development-team-security-roadmap/</guid>
      <description>&lt;ul&gt;
&lt;li&gt;Are security reviews and penetration testing efforts costing you too much?&lt;/li&gt;
&lt;li&gt;Are you struggling with security defect counts being too high in the products your development teams are producing?&lt;/li&gt;
&lt;li&gt;Maybe you just don&amp;rsquo;t know where to start with introducing security to your development work-flow?&lt;/li&gt;
&lt;li&gt;Are your competitors beating you to market?&lt;/li&gt;
&lt;li&gt;Maybe your customers are starting to demand higher security and protection of their data?&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;what-if-we-told-you&#34;&gt;What if we told you:&lt;/h4&gt;
&lt;p&gt;That by working with you we can reduce the amount you spend on traditional security reviews, penetration testing, and at the same time reduce the defects being introduced, and significantly improve your security stature, while reducing total project cost?&lt;/p&gt;
&lt;p&gt;Together we could help get your product to market quicker, and with fewer security defects, or if your product is already in use, provide the assurity you need that it will withstand the attacks of your adversaries.&lt;/p&gt;
&lt;p&gt;We can provide the visibility you need to make good judgement calls on the direction of your products and customers security.&lt;/p&gt;
&lt;p&gt;We can give you the ability to prove to your customers that you are taking the security of their data seriously, which is often a great marketing point as well, and that your product(s) are a much safer investment than your competitor&amp;rsquo;s?&lt;/p&gt;
&lt;h4 id=&#34;outcomes&#34;&gt;Outcomes:&lt;/h4&gt;
&lt;p&gt;Let us create a roadmap for your development team(s) to follow, thus enabling them to:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Implement the light weight &lt;a href=&#34;https://f0.holisticinfosecforwebdevelopers.com/chap06.html#process-and-practises-agile-development-and-practices&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Process and Practises&lt;/a&gt;, Tools and Techniques required to take the ownership of their security&lt;/li&gt;
&lt;li&gt;Find and fix defects as they are being introduced (cheapest place), rather than late in the development life-cycle (dearest place), as discussed in Kim&amp;rsquo;s &lt;a href=&#34;https://binarymist.io/project/service-development-team-security-training/&#34;&gt;training&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Provide immediate and continuous visibility and measurability of the projects security stature&lt;/li&gt;
&lt;/ol&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/ApVI7-g_wpk?start=423&#34; frameborder=&#34;0&#34; gesture=&#34;media&#34; allow=&#34;encrypted-media&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;!-- 
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/ApVI7-g_wpk&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
 --&gt;
&lt;br&gt;
&lt;blockquote&gt;
&lt;p&gt;If you would get excited about similar results&amp;hellip;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;br&gt;
&lt;hr&gt;
&lt;h1 id=&#34;reserve-your-consultation&#34;&gt;Reserve Your Consultation&lt;/h1&gt;
&lt;p&gt;&lt;em&gt;Currently we have availability for select new clients.&lt;/em&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;a class=&#34;btn btn-outline-primary&#34; href=&#34;https://binarymist.io/#contact&#34;&gt;&lt;b&gt;Reserve Your Confidential Consultation&lt;/b&gt;&lt;/a&gt;&lt;/p&gt;
&lt;br&gt;
&lt;p&gt;Review our &lt;a href=&#34;https://binarymist.io/tags/portfolio&#34;&gt;Portfolio&lt;/a&gt; and &lt;a href=&#34;https://binarymist.io/tags/testimonial&#34;&gt;Testimonials&lt;/a&gt; for some of the teams we have helped reduce costs and security defect counts by shifting the security focus up front of the development life-cycle.&lt;/p&gt;
&lt;h2 id=&#34;what-our-customers-are-saying&#34;&gt;What our customers are saying&lt;/h2&gt;
&lt;br&gt;
&lt;blockquote&gt;
&lt;p&gt;Pete Nicholls&lt;/p&gt;
&lt;img class=&#34;testimonial-img-bordered&#34; src=&#34;../testimonial-pete-nicholls/featured.jpg&#34;&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&#34;https://binarymist.io/project/portfolio-trineo&#34;&gt;Trineo&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Kim’s expertise and insights helped shape our security strategy. Kim’s experience enabled us to adopt best practices in a way that fits our teams and focuses on what really works.&lt;/p&gt;
&lt;p&gt;Security is difficult to do alone. The more experience you can leverage the better. Kim can help you on your security journey by showing you what works and what doesn’t, and help you avoid common mistakes. We’re in a stronger position for having hired him.&lt;/p&gt;
&lt;p&gt;As a person, Kim is highly-focused, knowledgeable, and always to the point: someone you can collaborate with who will make the most of the time you spend with him.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;br&gt;
&lt;blockquote&gt;
&lt;p&gt;Andrew Balfour&lt;/p&gt;
&lt;img class=&#34;testimonial-img-bordered&#34; src=&#34;../testimonial-andrew-balfour/featured.jpg&#34;&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&#34;https://binarymist.io/project/portfolio-schoollinks&#34;&gt;Owner/Managing Director, Solvam Corporation Ltd&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Kim Carter was engaged on a contract basis to implement and guide our future software development for School-links. &lt;a href=&#34;http://www.school-links.co.nz&#34;&gt;www.school-links.co.nz&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;In doing that he -&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Brought to our product a much &lt;strong&gt;higher level of expertise&lt;/strong&gt; and capability complementing our development team&lt;/li&gt;
&lt;li&gt;Directed a disciplined and methodical software development process as the Scrum Master of ‘Scrum’&lt;/li&gt;
&lt;li&gt;Helped with the restructuring and planning of our infrastructure in order to scale the product successfully&lt;/li&gt;
&lt;li&gt;Brings &lt;strong&gt;security expertise&lt;/strong&gt; at a high level with the ability to implement &lt;strong&gt;ongoing security&lt;/strong&gt; hardening program and audits&lt;/li&gt;
&lt;li&gt;Introduced the Scrum process which provided more &lt;strong&gt;consistent and accurate&lt;/strong&gt; release cycles enabling our marketing efforts to be better coordinated and focused&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Kim is a good team member and we will look to reengage with his services when required.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;br&gt;
&lt;p&gt;We have had the unique opportunity to work in both defensive (development) and &lt;a href=&#34;https://binarymist.io/event/nz-js-con-2017-the-art-of-exploitation/&#34;&gt;offensive&lt;/a&gt; (penetration testing) teams, across many domains, for a large number of years. This has produced a deep understanding of what development team(s) need in order to help you create solutions that will effectively resist attacks from your adversaries.&lt;/p&gt;

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/IVLpmCtiPZ0&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;br&gt;
&lt;hr&gt;
&lt;h1 id=&#34;reserve-your-consultation-1&#34;&gt;Reserve Your Consultation&lt;/h1&gt;
&lt;p&gt;&lt;em&gt;Currently we have availability for select new clients.&lt;/em&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;a class=&#34;btn btn-outline-primary&#34; href=&#34;https://binarymist.io/#contact&#34;&gt;&lt;b&gt;Reserve Your Confidential Consultation&lt;/b&gt;&lt;/a&gt;&lt;/p&gt;
&lt;br&gt;
&lt;p&gt;We can only take on a very limited number of road-mapping engagements.&lt;/p&gt;
&lt;br&gt;
</description>
    </item>
    
    <item>
      <title>Building Security into Your Development Teams (workshop) $495 &#43; GST per student</title>
      <link>https://binarymist.io/project/service-development-team-security-training/</link>
      <pubDate>Tue, 12 Dec 2017 00:00:00 +0000</pubDate>
      <guid>https://binarymist.io/project/service-development-team-security-training/</guid>
      <description>&lt;p&gt;Few organisations understand the &lt;a href=&#34;https://binarymist.io/event/all-day-devops-2017-talk-secrets-of-a-high-performance-security-focussed-agile-team&#34;&gt;secrets&lt;/a&gt; of shifting the focus on security from late in the software development life-cycle to within the Development Team.&lt;/p&gt;
&lt;p&gt;Not only does this significantly reduce the number of security defects being pushed to your production systems, but also significantly reduces the total cost of development.&lt;/p&gt;
&lt;h2 id=&#34;cheapest-placehttpsf0holisticinfosecforwebdeveloperscomchap06htmlleanpub-auto-cheapest-place-to-deal-with-defects-to-deal-with-defects&#34;&gt;&lt;a href=&#34;https://f0.holisticinfosecforwebdevelopers.com/chap06.html#leanpub-auto-cheapest-place-to-deal-with-defects&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Cheapest place&lt;/a&gt; to deal with defects&lt;/h2&gt;
&lt;p&gt;There have been many studies specifically looking at the costs of finding and fixing defects early, as opposed to the planning of how to fix defects once the product is delivered, or not planning at all.&lt;/p&gt;
&lt;p&gt;The following table shows the average cost of fixing defects based on when they were introduced versus when they are detected. Putting these practises in the right order can reduce costs of fixing security defects by up to 100 times.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://f0.holisticinfosecforwebdevelopers.com/chap06.html#leanpub-auto-cheapest-place-to-deal-with-defects&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;













&lt;figure  id=&#34;figure-average-cost-of-fixing-defects&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;
        &lt;img alt=&#34;Average Cost of Fixing Defects&#34; srcset=&#34;
               /media/project/AverageCostOfFixingDefects_hu1116be9223305b5430a4c24c99b45b69_22716_ed27cdb2fbfc30d6acec20dfcd78affb.png 400w,
               /media/project/AverageCostOfFixingDefects_hu1116be9223305b5430a4c24c99b45b69_22716_93f5afcbbbc4d8578702cc7bb13ae8ea.png 760w,
               /media/project/AverageCostOfFixingDefects_hu1116be9223305b5430a4c24c99b45b69_22716_1200x1200_fit_lanczos_2.png 1200w&#34;
               src=&#34;https://binarymist.io/media/project/AverageCostOfFixingDefects_hu1116be9223305b5430a4c24c99b45b69_22716_ed27cdb2fbfc30d6acec20dfcd78affb.png&#34;
               width=&#34;760&#34;
               height=&#34;144&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      Average Cost of Fixing Defects
    &lt;/figcaption&gt;&lt;/figure&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;So&amp;hellip; by simply shifting the security expertise from the end of the project to within the Development Team, thus enabling developers to find and fix their defects as they are being introduced, huge cost savings can be enjoyed.&lt;/p&gt;
&lt;p&gt;This is not as difficult as you may think.&lt;/p&gt;
&lt;h2 id=&#34;on-the-day&#34;&gt;On the Day&lt;/h2&gt;
&lt;p&gt;Kim will lead the class through the tools, techniques and thought processes of both red (attacking) and blue (defending) teams along with how to combine these attributes into the purple team focussing on security, productivity, and tasked with continuously delivering sustainable maintainable technical solutions to market.&lt;/p&gt;
&lt;div class=&#34;row&#34; style=&#34;padding-top: 10px&#34;&gt;
   &lt;div class=&#34;col-sm-1&#34;&gt;&lt;/div&gt;
   &lt;div class=&#34;col-sm-10&#34; style=&#34;padding-top: 10px&#34;&gt;
      &lt;div class=&#34;row&#34;&gt;
         &lt;div class=&#34;col-xs-12 col-sm-3 pub-row-heading&#34; style=&#34;line-height:34px; font-weight:bold;&#34;&gt;Location&lt;/div&gt;
         &lt;div class=&#34;col-xs-12 col-sm-9&#34;&gt;At your venue&lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&#34;row&#34; style=&#34;padding-top: 10px&#34;&gt;
         &lt;div class=&#34;col-xs-12 col-sm-3 pub-row-heading&#34; style=&#34;line-height:34px; font-weight:bold;&#34;&gt;Links&lt;/div&gt;
         &lt;div class=&#34;col-xs-12 col-sm-9&#34;&gt;
            &lt;a class=&#34;btn btn-outline-primary&#34; href=&#34;https://binarymist.io/files/talk/BuildingSecurityIntoYourDevTeams-Generic.pdf&#34;&gt;&lt;i class=&#34;fas fa-file-pdf&#34;&gt;&lt;/i&gt; PDF&lt;/a&gt;
            &lt;a class=&#34;btn btn-outline-primary&#34; href=&#34;https://binarymist.io/publication/holistic-infosec-for-web-developers/&#34;&gt;&lt;i class=&#34;fab fa-leanpub&#34;&gt;&lt;/i&gt; Source Book Series&lt;/a&gt;
            &lt;a class=&#34;btn btn-outline-primary&#34; href=&#34;https://binarymist.io/tags/workshop&#34;&gt;&lt;i class=&#34;fas fa-tools&#34;&gt;&lt;/i&gt; Kim&#39;s other Workshops&lt;/a&gt;
         &lt;/div&gt;
      &lt;/div&gt;
   &lt;/div&gt;
&lt;/div&gt;
&lt;br&gt;
&lt;p&gt;Kim will explain the roles of &amp;lsquo;T&amp;rsquo; shaped professionals, including placement of security champions to create your purple Development Teams.&lt;/p&gt;
&lt;p&gt;We will work through how to implement the Sensible Security Model (SSM) within each and every Sprint, including:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Creating actionable countermeasure Product Backlog Items&lt;/li&gt;
&lt;li&gt;Integrating them into the same Product Backlog that your Development Team has been pulling business focussed items from&lt;/li&gt;
&lt;li&gt;Ordering them based on the risk ratings you create for each&lt;/li&gt;
&lt;/ol&gt;














&lt;figure  id=&#34;figure-countermeasures-backlog&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;
        &lt;img alt=&#34;Countermeasures Backlog&#34; srcset=&#34;
               /media/project/Countermeasures-Backlog_hu6c0da8d250bbaca3225252814323b04b_73370_43de82003111eeefbf6287f3c710fbff.jpg 400w,
               /media/project/Countermeasures-Backlog_hu6c0da8d250bbaca3225252814323b04b_73370_fe08344f00ad4fc4683a3e1bc4da5c96.jpg 760w,
               /media/project/Countermeasures-Backlog_hu6c0da8d250bbaca3225252814323b04b_73370_1200x1200_fit_q90_lanczos.jpg 1200w&#34;
               src=&#34;https://binarymist.io/media/project/Countermeasures-Backlog_hu6c0da8d250bbaca3225252814323b04b_73370_43de82003111eeefbf6287f3c710fbff.jpg&#34;
               width=&#34;720&#34;
               height=&#34;590&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      Countermeasures Backlog
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;p&gt;Kim will discuss how and where Agile Development Teams often fail, along with how to succeed with security with a &lt;a href=&#34;https://f0.holisticinfosecforwebdevelopers.com/chap06.html#leanpub-auto-how-and-why-many-software-development-shops-fail&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;familiar anecdote&lt;/a&gt;. Then augmenting your Scrum process within each and every Sprint, with a collection of development focussed &lt;a href=&#34;http://f0.holisticinfosecforwebdevelopers.com/chap06.html#process-and-practises-agile-development-and-practices&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;processes and practises&lt;/a&gt;, tools and techniques that have proven their value at drastically reducing defects before production deployment.&lt;/p&gt;
&lt;p&gt;Kim will walk us through the SSM threat modelling process with theory and hands on exercises in areas such as Physical, People, VPS, Network, Cloud and Web Applications. Including sub topics such as Docker, &lt;a href=&#34;https://f1.holisticinfosecforwebdevelopers.com/chap05.html#cloud-countermeasures-serverless&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Serverless&lt;/a&gt;, &lt;a href=&#34;https://binarymist.io/event/isig-2017-workshop-windows-exploitation-and-persistence-with-ps/&#34;&gt;PowerShell&lt;/a&gt; and many others.&lt;/p&gt;














&lt;figure  id=&#34;figure-sensible-security-model&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;
        &lt;img alt=&#34;Sensible Security Model&#34; srcset=&#34;
               /media/project/SSM_hud377ef778310226cac3a9943c776b1f7_52032_c36cad7901a6f9b82609c51780b94d72.jpg 400w,
               /media/project/SSM_hud377ef778310226cac3a9943c776b1f7_52032_697f09cbc2f8d0105db84cebeed25e25.jpg 760w,
               /media/project/SSM_hud377ef778310226cac3a9943c776b1f7_52032_1200x1200_fit_q90_lanczos.jpg 1200w&#34;
               src=&#34;https://binarymist.io/media/project/SSM_hud377ef778310226cac3a9943c776b1f7_52032_c36cad7901a6f9b82609c51780b94d72.jpg&#34;
               width=&#34;720&#34;
               height=&#34;327&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      Sensible Security Model
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;hr&gt;
&lt;h1 id=&#34;reserve-your-workshop&#34;&gt;Reserve Your Workshop&lt;/h1&gt;
&lt;p&gt;&lt;em&gt;Currently we have availability for select new clients.&lt;/em&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;a class=&#34;btn btn-outline-primary&#34; href=&#34;https://binarymist.io/#contact&#34;&gt;&lt;b&gt;Reserve Your Workshop&lt;/b&gt;&lt;/a&gt;&lt;/p&gt;
&lt;br&gt;
&lt;h2 id=&#34;more-detail&#34;&gt;More Detail&lt;/h2&gt;
&lt;p&gt;Training material will be augmented with Extracts from Kim&amp;rsquo;s interviews on Software Engineering Radio with security experts such as Diogo Mónica (&lt;a href=&#34;https://binarymist.io/publication/ser-podcast-docker-security/&#34;&gt;Docker Security&lt;/a&gt; Team Lead) and &lt;a href=&#34;https://binarymist.io/publication/ser-podcast-network-security&#34;&gt;Haroon Meer&lt;/a&gt; (creator of Canary tools and tokens).&lt;/p&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    Each student will receive &lt;strong&gt;free&lt;/strong&gt; copies of the first two parts of Kim&amp;rsquo;s book series &amp;ldquo;&lt;a href=&#34;https://binarymist.io/publication/holistic-infosec-for-web-developers/&#34;&gt;Holistic Info-Sec for Web Developers&lt;/a&gt;&amp;rdquo; (weighing in at approximately 700 pages) which this training is based on, as companion course material to accompany the training, to assist with ongoing self learning, and as a valuable reference resource long after the training has finished.
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Minimum of four students per workshop.&lt;/p&gt;
&lt;h3 id=&#34;learnings&#34;&gt;Learnings&lt;/h3&gt;
&lt;p&gt;Coverage of topic chapters:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://f0.holisticinfosecforwebdevelopers.com/chap07.html#physical&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Physical&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://f0.holisticinfosecforwebdevelopers.com/chap08.html#people&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;People&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://f1.holisticinfosecforwebdevelopers.com/chap03.html#vps&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;VPS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://f1.holisticinfosecforwebdevelopers.com/chap04.html#network&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Network&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://f1.holisticinfosecforwebdevelopers.com/chap05.html#cloud&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Cloud&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://f1.holisticinfosecforwebdevelopers.com/chap06.html#web-applications&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Web Applications&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;br&gt;
&lt;h2 id=&#34;what-others-are-saying&#34;&gt;What others are saying&lt;/h2&gt;
&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;Enjoying the variety in &lt;a href=&#34;https://twitter.com/binarymist?ref_src=twsrc%5Etfw&#34;&gt;@binarymist&lt;/a&gt; ‘s training today. So much content :) &lt;a href=&#34;https://t.co/OWKAFKFwu2&#34;&gt;pic.twitter.com/OWKAFKFwu2&lt;/a&gt;&lt;/p&gt;&amp;mdash; Kylie McDevitt (@kylieengineer) &lt;a href=&#34;https://twitter.com/kylieengineer/status/923342793405165569?ref_src=twsrc%5Etfw&#34;&gt;October 26, 2017&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;

&lt;br&gt;
&lt;hr&gt;
&lt;h1 id=&#34;reserve-your-workshop-1&#34;&gt;Reserve Your Workshop&lt;/h1&gt;
&lt;p&gt;&lt;em&gt;Currently we have availability for select new clients.&lt;/em&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;a class=&#34;btn btn-outline-primary&#34; href=&#34;https://binarymist.io/#contact&#34;&gt;&lt;b&gt;Reserve Your Workshop&lt;/b&gt;&lt;/a&gt;&lt;/p&gt;
&lt;br&gt;
</description>
    </item>
    
    <item>
      <title>Holistic Info-Sec for Web Developers</title>
      <link>https://binarymist.io/publication/holistic-infosec-for-web-developers/</link>
      <pubDate>Fri, 01 Dec 2017 00:00:00 +0000</pubDate>
      <guid>https://binarymist.io/publication/holistic-infosec-for-web-developers/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Talk - Secrets of a High Performance Security Focussed Agile Team</title>
      <link>https://binarymist.io/event/bsides-talk-wellington-secrets-of-a-high-performance-security-focussed-agile-team/</link>
      <pubDate>Thu, 23 Nov 2017 16:00:00 +1300</pubDate>
      <guid>https://binarymist.io/event/bsides-talk-wellington-secrets-of-a-high-performance-security-focussed-agile-team/</guid>
      <description>
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/hRs8lWtR5LM&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;br&gt;
</description>
    </item>
    
    <item>
      <title>Workshop - Building Security Into Your Development Teams</title>
      <link>https://binarymist.io/event/chcon-workshop-building-security-into-your-development-team/</link>
      <pubDate>Wed, 25 Oct 2017 09:00:00 +1300</pubDate>
      <guid>https://binarymist.io/event/chcon-workshop-building-security-into-your-development-team/</guid>
      <description>&lt;p&gt;Kim will explain the roles of &amp;lsquo;T&amp;rsquo; shaped professionals, including placement of security champions to create your purple Development Teams.&lt;/p&gt;
&lt;p&gt;We will work through how to implement the Sensible Security Model (SSM) within each and every Sprint, including:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Creating actionable countermeasure Product Backlog Items&lt;/li&gt;
&lt;li&gt;Integrating them into the same Product Backlog that your Development Team has been pulling business focussed items from&lt;/li&gt;
&lt;li&gt;Ordering them based on the risk ratings you create for each&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Kim will discuss how and where Agile Development Teams often fail, along with how to succeed with security with a &lt;a href=&#34;https://f0.holisticinfosecforwebdevelopers.com/chap06.html#leanpub-auto-how-and-why-many-software-development-shops-fail&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;familiar anecdote&lt;/a&gt;. Then augmenting your Scrum process within each and every Sprint, with a collection of development focussed &lt;a href=&#34;http://f0.holisticinfosecforwebdevelopers.com/chap06.html#process-and-practises-agile-development-and-practices&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;processes and practises&lt;/a&gt;, tools and techniques that have proven their value at drastically reducing defects before production deployment.&lt;/p&gt;
&lt;p&gt;Kim will walk us through the SSM threat modelling process with theory and hands on exercises in areas such as Physical, People, VPS, Network, Cloud and Web Applications. Including sub topics such as &lt;a href=&#34;https://binarymist.io/publication/docker-security/&#34;&gt;Docker&lt;/a&gt;, Serverless, PowerShell and many others.&lt;/p&gt;
&lt;h3 id=&#34;more-detailh4&#34;&gt;More Detail&lt;/h4&gt;&lt;/h3&gt;
&lt;p&gt;Training material will be augmented with Extracts from Kim&amp;rsquo;s interviews on Software Engineering Radio with security experts such as Diogo Mónica (&lt;a href=&#34;https://binarymist.io/publication/ser-podcast-application-security&#34;&gt;Docker Security&lt;/a&gt; Team Lead) and &lt;a href=&#34;https://binarymist.io/publication/ser-podcast-network-security&#34;&gt;Haroon Meer&lt;/a&gt; (creator of Canary tools and tokens).&lt;/p&gt;
&lt;p&gt;Copies of the first two parts of Kim&amp;rsquo;s book series &amp;ldquo;&lt;a href=&#34;https://binarymist.io/publication/holistic-infosec-for-web-developers&#34;&gt;Holistic Info-Sec for Web Developers&lt;/a&gt;&amp;rdquo; (weighing in at approximately 700 pages) which this training is based on, will be provided as: companion course material to accompany the training, ongoing self learning, and as a valuable reference resource long after the training has finished.&lt;/p&gt;
&lt;h3 id=&#34;learnings&#34;&gt;Learnings&lt;/h3&gt;
&lt;p&gt;Coverage of topic chapters:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://f0.holisticinfosecforwebdevelopers.com/chap07.html#physical&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Physical&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://f0.holisticinfosecforwebdevelopers.com/chap08.html#people&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;People&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://f1.holisticinfosecforwebdevelopers.com/chap03.html#vps&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;VPS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://f1.holisticinfosecforwebdevelopers.com/chap04.html#network&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Network&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://f1.holisticinfosecforwebdevelopers.com/chap05.html#cloud&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Cloud&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://f1.holisticinfosecforwebdevelopers.com/chap06.html#web-applications&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Web Applications&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;br&gt;
## What others have said
&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;Enjoying the variety in &lt;a href=&#34;https://twitter.com/binarymist?ref_src=twsrc%5Etfw&#34;&gt;@binarymist&lt;/a&gt; ‘s training today. So much content :) &lt;a href=&#34;https://t.co/OWKAFKFwu2&#34;&gt;pic.twitter.com/OWKAFKFwu2&lt;/a&gt;&lt;/p&gt;&amp;mdash; Kylie McDevitt (@kylieengineer) &lt;a href=&#34;https://twitter.com/kylieengineer/status/923342793405165569?ref_src=twsrc%5Etfw&#34;&gt;October 26, 2017&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;

&lt;br&gt;
</description>
    </item>
    
    <item>
      <title>Talk - Secrets of a High Performance Security Focussed Agile Team</title>
      <link>https://binarymist.io/event/all-day-devops-2017-talk-secrets-of-a-high-performance-security-focussed-agile-team/</link>
      <pubDate>Tue, 24 Oct 2017 16:30:00 +1300</pubDate>
      <guid>https://binarymist.io/event/all-day-devops-2017-talk-secrets-of-a-high-performance-security-focussed-agile-team/</guid>
      <description>
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/ApVI7-g_wpk&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;br&gt;
</description>
    </item>
    
    <item>
      <title>Workshop - Web Developer Quiz Night</title>
      <link>https://binarymist.io/event/owaspnz-chch-meetup-2017-workshop-quiz-night/</link>
      <pubDate>Wed, 28 Jun 2017 19:00:00 +1200</pubDate>
      <guid>https://binarymist.io/event/owaspnz-chch-meetup-2017-workshop-quiz-night/</guid>
      <description>&lt;p&gt;Kim will be covering:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://f0.holisticinfosecforwebdevelopers.com/chap03.html#starting-with-the-30000-foot-view&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Threat modelling&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://f0.holisticinfosecforwebdevelopers.com/chap06.html#process-and-practises-agile-development-and-practices&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Developer security&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://f0.holisticinfosecforwebdevelopers.com/chap07.html#physical&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Physical security&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://f0.holisticinfosecforwebdevelopers.com/chap08.html#people&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Social Engineering&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://f1.holisticinfosecforwebdevelopers.com/chap03.html#vps&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;VPS security / hardening&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://f1.holisticinfosecforwebdevelopers.com/chap04.html#network&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Network Security&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://f1.holisticinfosecforwebdevelopers.com/chap05.html#cloud&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Cloud Security&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://f1.holisticinfosecforwebdevelopers.com/chap06.html#web-applications&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Application Security&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;There will be prizes worth working for, especially the team that takes first place.&lt;/p&gt;
&lt;p&gt;If you want to win, I&amp;rsquo;d suggest getting familiar with the content in my book series.&lt;/p&gt;
&lt;p&gt;Questions have also come from many other sources&lt;/p&gt;
&lt;p&gt;The below was the quiz:&lt;/p&gt;
&lt;script async class=&#34;speakerdeck-embed&#34; data-id=&#34;f02090963f7b48c08cad89bd11bf6c7c&#34; data-ratio=&#34;1.33333333333333&#34; src=&#34;//speakerdeck.com/assets/embed.js&#34;&gt;&lt;/script&gt;
&lt;br&gt;
&lt;h2 id=&#34;what-others-have-said&#34;&gt;What others have said&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://www.meetup.com/OWASP-New-Zealand-Chapter-Christchurch/events/236349292/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;













&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;
        &lt;img alt=&#34;&#34; srcset=&#34;
               /media/talk/owaspnz-chch-meetup-2017-workshop-quiz-night-feedback0_hue0311ddeae221a19eb50c408cf4eeb60_9598_bec3d98b9b39181ddeaff2469b7463d9.png 400w,
               /media/talk/owaspnz-chch-meetup-2017-workshop-quiz-night-feedback0_hue0311ddeae221a19eb50c408cf4eeb60_9598_6fdeade18f7c25510b66d2546f627a4a.png 760w,
               /media/talk/owaspnz-chch-meetup-2017-workshop-quiz-night-feedback0_hue0311ddeae221a19eb50c408cf4eeb60_9598_1200x1200_fit_lanczos_2.png 1200w&#34;
               src=&#34;https://binarymist.io/media/talk/owaspnz-chch-meetup-2017-workshop-quiz-night-feedback0_hue0311ddeae221a19eb50c408cf4eeb60_9598_bec3d98b9b39181ddeaff2469b7463d9.png&#34;
               width=&#34;760&#34;
               height=&#34;141&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;&lt;/a&gt;
&lt;a href=&#34;https://www.meetup.com/OWASP-New-Zealand-Chapter-Christchurch/events/236349292/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;













&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;
        &lt;img alt=&#34;&#34; srcset=&#34;
               /media/talk/owaspnz-chch-meetup-2017-workshop-quiz-night-feedback1_hudaa52d2607b767be5477218c5a5514df_7560_df274d0b8b0bc2b0271c6cb967de671f.png 400w,
               /media/talk/owaspnz-chch-meetup-2017-workshop-quiz-night-feedback1_hudaa52d2607b767be5477218c5a5514df_7560_83b7f355b2951444b9a99308be62b051.png 760w,
               /media/talk/owaspnz-chch-meetup-2017-workshop-quiz-night-feedback1_hudaa52d2607b767be5477218c5a5514df_7560_1200x1200_fit_lanczos_2.png 1200w&#34;
               src=&#34;https://binarymist.io/media/talk/owaspnz-chch-meetup-2017-workshop-quiz-night-feedback1_hudaa52d2607b767be5477218c5a5514df_7560_df274d0b8b0bc2b0271c6cb967de671f.png&#34;
               width=&#34;760&#34;
               height=&#34;108&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;&lt;/a&gt;
&lt;a href=&#34;https://www.meetup.com/OWASP-New-Zealand-Chapter-Christchurch/events/236349292/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;













&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;
        &lt;img alt=&#34;&#34; srcset=&#34;
               /media/talk/owaspnz-chch-meetup-2017-workshop-quiz-night-feedback2_hu0eaaae30a15137f2e6f8e9a7b14ad5ee_8104_c65be90e70a89f7bb7b29edb106ef813.png 400w,
               /media/talk/owaspnz-chch-meetup-2017-workshop-quiz-night-feedback2_hu0eaaae30a15137f2e6f8e9a7b14ad5ee_8104_12eba1c0ce4d738e9c20786c0b306849.png 760w,
               /media/talk/owaspnz-chch-meetup-2017-workshop-quiz-night-feedback2_hu0eaaae30a15137f2e6f8e9a7b14ad5ee_8104_1200x1200_fit_lanczos_2.png 1200w&#34;
               src=&#34;https://binarymist.io/media/talk/owaspnz-chch-meetup-2017-workshop-quiz-night-feedback2_hu0eaaae30a15137f2e6f8e9a7b14ad5ee_8104_c65be90e70a89f7bb7b29edb106ef813.png&#34;
               width=&#34;760&#34;
               height=&#34;167&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;&lt;/a&gt;&lt;/p&gt;
&lt;br&gt;
</description>
    </item>
    
    <item>
      <title>Diogo Mónica on Docker Security</title>
      <link>https://binarymist.io/publication/ser-podcast-docker-security/</link>
      <pubDate>Tue, 09 May 2017 00:00:00 +0000</pubDate>
      <guid>https://binarymist.io/publication/ser-podcast-docker-security/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://www.se-radio.net/team/kim-carter/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;













&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;
        &lt;img alt=&#34;Software Engineering Radio&#34; srcset=&#34;
               /media/publication/se-radio-logo_hua56cba13ba94bffe77c0e5cf633d61a8_4797_39b10f2cd9435d3f006e74f86974b3b4.png 400w,
               /media/publication/se-radio-logo_hua56cba13ba94bffe77c0e5cf633d61a8_4797_9708a0dd6344bd9522595665aa18325d.png 760w,
               /media/publication/se-radio-logo_hua56cba13ba94bffe77c0e5cf633d61a8_4797_1200x1200_fit_lanczos_2.png 1200w&#34;
               src=&#34;https://binarymist.io/media/publication/se-radio-logo_hua56cba13ba94bffe77c0e5cf633d61a8_4797_39b10f2cd9435d3f006e74f86974b3b4.png&#34;
               width=&#34;584&#34;
               height=&#34;80&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&#34;show-outline&#34;&gt;Show Outline&lt;/h1&gt;
&lt;h2 id=&#34;basic-questions&#34;&gt;Basic Questions&lt;/h2&gt;
&lt;p&gt;Can you give a quick explanation of how Docker containers work for our listeners?&lt;/p&gt;
&lt;p&gt;If you were an attacker looking to compromise Docker, knowing what the weakest areas are, where would you start and what would be your first targets in terms of the surrounding technologies?&lt;/p&gt;
&lt;p&gt; &lt;/p&gt;
&lt;p&gt;I’m going to address each of the areas in turn, you mentioned a while ago, that we should address&amp;hellip;&lt;/p&gt;
&lt;h2 id=&#34;application-security-more-important-than-isolationhttpsf1holisticinfosecforwebdeveloperscomchap03htmlvps-countermeasures-docker-application-security&#34;&gt;&lt;a href=&#34;https://f1.holisticinfosecforwebdevelopers.com/chap03.html#vps-countermeasures-docker-application-security&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Application security more important than isolation&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;One of the things you mentioned was that “application security is so much more important than container/VM isolation”, such as:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;https://f1.holisticinfosecforwebdevelopers.com/chap03.html#vps-identify-risks-docker-docker-host-engine-and-containers-namespaces&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Namespaces&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://f1.holisticinfosecforwebdevelopers.com/chap03.html#leanpub-auto-control-groups&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Control Groups&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://f1.holisticinfosecforwebdevelopers.com/chap03.html#vps-identify-risks-docker-docker-host-engine-and-containers-linux-security-modules&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Linux Security Modules (SELinux and AppArmor)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://f1.holisticinfosecforwebdevelopers.com/chap03.html#leanpub-auto-capabilities&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Capabilities&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Secure Computing Mode (&lt;a href=&#34;https://f1.holisticinfosecforwebdevelopers.com/chap03.html#vps-identify-risks-docker-docker-engine-and-containers-seccomp&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Seccomp&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://f1.holisticinfosecforwebdevelopers.com/chap03.html#vps-countermeasures-disable-remove-services-harden-what-is-left-lock-down-the-mounting-of-partitions&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Filesystem mounts&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Can you give us some more detail around what you mean by this?&lt;/p&gt;
&lt;p&gt;In your blog post &lt;a href=&#34;https://diogomonica.com/2016/11/19/increasing-attacker-cost-using-immutable-infrastructure/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Increasing Attacker Cost using Immutable Infrastructure&lt;/a&gt;, the overarching theme is that application security is still the lowest hanging fruit for an attacker. Near the end of your blog post you have a link to &lt;a href=&#34;https://www.delve-labs.com/articles/docker-security-production-2/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Docker Security Features&lt;/a&gt;, which seems to be mostly focussed on the isolation features I just mentioned. Why is Docker isolation much less important than appsec?&lt;/p&gt;
&lt;p&gt;Our applications over the past 15 years in general are not getting any more secure. We’ve been trying to educate developers around the issues, but I&amp;rsquo;m not convinced that it&amp;rsquo;s working, any ideas on how we can improve this situation?&lt;/p&gt;
&lt;h2 id=&#34;inspect-app-behaviour-inside-containers-but-not-vms&#34;&gt;Inspect app behaviour inside containers, but not VMs&lt;/h2&gt;
&lt;p&gt;In our pre show discussions, you mentioned that:
“You can inspect behaviour of an app inside of a container, but you can’t inside of a VM”. My thoughts around that comment, were that in VMs or &lt;a href=&#34;https://f1.holisticinfosecforwebdevelopers.com/chap03.html#vps&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;VPS&lt;/a&gt;s in general we have:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Application &lt;a href=&#34;https://f1.holisticinfosecforwebdevelopers.com/chap03.html#vps-countermeasures-lack-of-visibility-logging-and-alerting&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;logging&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Instrumenting from within: &lt;a href=&#34;https://f1.holisticinfosecforwebdevelopers.com/chap06.html#web-applications-countermeasures-lack-of-visibility-insufficient-Monitoring-statistics-graphing&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;statsd&lt;/a&gt;, &lt;a href=&#34;https://f1.holisticinfosecforwebdevelopers.com/chap03.html#leanpub-auto-collectdhttpscollectdorg&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;collectd&lt;/a&gt;, &lt;a href=&#34;https://f1.holisticinfosecforwebdevelopers.com/chap03.html#leanpub-auto-graphitehttpgraphiteapporg&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;graphite&lt;/a&gt; &amp;hellip; and others&lt;/li&gt;
&lt;li&gt;Instrumentation externally: &lt;a href=&#34;https://f1.holisticinfosecforwebdevelopers.com/chap03.html#vps-countermeasures-lack-of-visibility-proactive-monitoring-getting-started-with-monit&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Monit&lt;/a&gt; and various other PaaS offerings&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Is there any reason why we shouldn’t use the same tools, or are there offerings more specific to containers that we can use to inspect app behaviour and if so, what are they?&lt;/p&gt;
&lt;h2 id=&#34;immutability&#34;&gt;Immutability&lt;/h2&gt;
&lt;p&gt;One of your other pre show comments was that “Containers win due to observation and immutability”. Can you explain the immutable copy-on-write filesystem, how it helps us, and how we can take maximum advantage of this?&lt;/p&gt;
&lt;h2 id=&#34;read-only&#34;&gt;Read-only&lt;/h2&gt;
&lt;p&gt;You also mentioned pre show that&amp;hellip; “You can’t run a VM with &lt;code&gt;--read-only&lt;/code&gt;, but with Docker it is trivial”. My thoughts around those comments, were that&amp;hellip;&lt;br&gt;
you can run anything that has a filesystem that has to be mounted, as read-only. Can you explain the fundamental difference of running a container as read only vs running a VM or any VPS with granular read only filesystem mounts?&lt;/p&gt;
&lt;p&gt;How does your logging strategy look when running a container as &lt;code&gt;--read-only&lt;/code&gt;?&lt;/p&gt;
&lt;h2 id=&#34;orchestration&#34;&gt;Orchestration&lt;/h2&gt;
&lt;p&gt;You mentioned in our pre show discussions that you thought the orchestration layers where a lot more interesting and impactful to companies security than isolation concepts, layers such as:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=apma_C24W58&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Mutual TLS/PKI by default&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://medium.com/on-docker/secrets-and-lie-abilities-the-state-of-modern-secret-management-2017-c82ec9136a3d#.f6yba66ti&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Secrets distribution&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=xpGNAiA3XW8&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Least privilege orchestration&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Content scanning&lt;/li&gt;
&lt;li&gt;Image signatures, Also discussed below under &lt;a href=&#34;#Consumption-from-Registries&#34;&gt;Consumption from Registries&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Secure/trusted build pipelines&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Can you elaborate a bit on each of these in turn?&lt;/p&gt;
&lt;h2 id=&#34;sgxhttpswwwtheregistercouk20160201sgx_secure_until_you_look_at_the_detail-sconehttpswwwusenixorgsystemfilesconferenceosdi16osdi16-arnautovpdf&#34;&gt;&lt;a href=&#34;https://www.theregister.co.uk/2016/02/01/sgx_secure_until_you_look_at_the_detail/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;SGX&lt;/a&gt;, &lt;a href=&#34;https://www.usenix.org/system/files/conference/osdi16/osdi16-arnautov.pdf&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;SCONE&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;In our previous discussion, you also mentioned how “Intel Software Guard Extensions (SGX)” along with “Secure CONtainer Environment (SCONE)” was going to make an impact  on how we employ security in our Docker environments. SCONE depends on Intels SGX, which itself has come under some &lt;a href=&#34;https://eprint.iacr.org/2016/086.pdf&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;heavy criticism from security researchers at MIT&lt;/a&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Explain Intel Software Guard Extensions (SGX)&lt;/li&gt;
&lt;li&gt;Explain SCONE&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;arguments-against-sgx&#34;&gt;Arguments against SGX&lt;/h2&gt;
&lt;p&gt;The startup configuration file (SCF) has to be sent once the container (enclave) is initialised.
So the container owner has to trust the enclave in the untrusted remote cloud system.
SGX solves this conundrum with a mechanism known as attestation which relies on a train of trust to Intel verifying the hardware
(&lt;a href=&#34;https://blog.acolyer.org/2016/12/14/scone-secure-linux-containers-with-intel-sgx/)&#34;&gt;https://blog.acolyer.org/2016/12/14/scone-secure-linux-containers-with-intel-sgx/)&lt;/a&gt;.
Intel intends the symmetrical provisioning key to reside both in the SGX-enabled chip and in Intel servers. To establish an enclave, the software will offer its provisioning key to Intel, and if there&amp;rsquo;s a match in the database, Intel will issue the attestation key that lets SGX set up the enclave. The SGX patents disclose in no uncertain terms that the Launch Enclave was introduced to ensure that each enclave’s author has a business relationship with Intel, and implements a software licensing system.
So we’re effectively trusting Intel as author and owner of our destiny?
(&lt;a href=&#34;http://www.theregister.co.uk/2016/02/01/sgx_secure_until_you_look_at_the_detail/&#34;&gt;http://www.theregister.co.uk/2016/02/01/sgx_secure_until_you_look_at_the_detail/&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;What is to stop Intel selling our information to the highest bidder?&lt;/p&gt;
&lt;h2 id=&#34;general-isolation&#34;&gt;General isolation&lt;/h2&gt;
&lt;p&gt;A monolithic kernel containing tens of millions of lines of code which are reachable from untrusted applications via all sorts of networking, USB and driver APIs Has a huge attack surface. It seems that adding Docker into the mix exposes all these vulnerabilities to each and every running container, thus making the attack surface grow exponentially.&lt;br&gt;
Can you explain how the security of libcontainer which is now the default Container Format layer works, and what is to stop attackers by-passing it and attacking the underlying huge attack surface of the shared kernel?&lt;/p&gt;
&lt;p&gt;In terms of performance, containers outperform VMs because they share the same host kernel and operating system resources, would you say that in terms of isolating malware, VMs do a better job?&lt;/p&gt;
&lt;p&gt;From the Docker overview, it says: &lt;a href=&#34;https://docs.docker.com/engine/docker-overview/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Docker provides the ability to package and run an application in a loosely isolated environment&lt;/a&gt;. Initially this doesn’t install a lot of confidence that malware can’t easily spread, or an attacker can’t traverse environments.&lt;br&gt;
From the Docker overview, it says: &lt;a href=&#34;https://docs.docker.com/engine/understanding-docker/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Encapsulate your applications (and supporting components&lt;/a&gt; into Docker containers”. The meaning of encapsulate is to enclose, but If we’re only loosely isolating, then we’re not really enclosing are we? Can you shed some light on this seemingly set of contradictory statements?&lt;/p&gt;
&lt;p&gt;What are your thoughts around the recent (Jan 10 Fix) container escape 0day (&lt;a href=&#34;https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2016-9962&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CVE-2016-9962&lt;/a&gt;) reported by Aleksa Sarai to Nathan McCauley that affects Docker &amp;lt;1.12.6?&lt;/p&gt;
&lt;p&gt;(&lt;a href=&#34;http://seclists.org/fulldisclosure/2017/Jan/21&#34;&gt;http://seclists.org/fulldisclosure/2017/Jan/21&lt;/a&gt;) It allows additional container processes via &lt;code&gt;runc exec&lt;/code&gt; to be &lt;code&gt;ptrac&lt;/code&gt;ed by &lt;code&gt;pid&lt;/code&gt; 1 of the container, allowing the main processes of the container, if &lt;a href=&#34;https://f1.holisticinfosecforwebdevelopers.com/chap03.html#vps-identify-risks-docker-the-default-user-is-root&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;running as &lt;code&gt;root&lt;/code&gt;&lt;/a&gt;, to gain access to file-descriptors of these new processes during the initialization and can lead to container escapes or modification of runC state before the process is fully placed inside the container.&lt;/p&gt;
&lt;h2 id=&#34;major-subtopics&#34;&gt;Major Subtopics&lt;/h2&gt;
&lt;h3 id=&#34;Consumption-from-Registries&#34;&gt;&lt;a href=&#34;https://f1.holisticinfosecforwebdevelopers.com/chap03.html#vps-countermeasures-docker-consumption-from-registries&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Consumption from Registries&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;You’ve got the Docker Registry which is an open-source server side application that lets you store and distribute Docker images. Some of the instances of the registry are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Docker Hub&lt;/li&gt;
&lt;li&gt;EC2 Container Registry&lt;/li&gt;
&lt;li&gt;Google Container Registry&lt;/li&gt;
&lt;li&gt;CoreOS quay.io&lt;/li&gt;
&lt;li&gt;Other Private instances&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;It’s up to the person consuming images from docker hub to assess whether or not they have vulnerabilities in them. I’ve &lt;a href=&#34;https://www.blackhat.com/docs/eu-15/materials/eu-15-Bettini-Vulnerability-Exploitation-In-Docker-Container-Environments.pdf&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;read&lt;/a&gt; that &lt;a href=&#34;https://www.banyanops.com/blog/analyzing-docker-hub/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;No security inspection&lt;/a&gt; by Docker is performed on docker hub images whether un-official or official. How true is this?&lt;/p&gt;
&lt;p&gt;There are a number of good tooling options coming available to help with the finding and mitigation of security vulnerabilities. Can you talk through some of the better ones and how they help?&lt;/p&gt;
&lt;p&gt;I’ve seen a good number of reports stating high numbers of security vulnerabilities within images on Docker Hub, even &lt;a href=&#34;https://www.blackhat.com/docs/eu-15/materials/eu-15-Bettini-Vulnerability-Exploitation-In-Docker-Container-Environments.pdf&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;upto 90% of official images&lt;/a&gt;. Can you talk about a case where a registry consumer was compromised due to a vulnerability in the image that they pulled down and spun up?&lt;/p&gt;
&lt;p&gt;What guarantees do Docker Hub consumers have around the integrity of images?&lt;/p&gt;
&lt;p&gt;Covering:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Where an image originated from&lt;/li&gt;
&lt;li&gt;Who created it&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://blogs.oregonstate.edu/developer/2016/03/28/current-solutions-for-docker-security/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Image Provenance&lt;/a&gt;: Is Docker fetching the image we think it is? With this point, can you go into:
&lt;ol&gt;
&lt;li&gt;How &lt;a href=&#34;https://f1.holisticinfosecforwebdevelopers.com/chap03.html#vps-countermeasures-docker-consumption-from-registries&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Docker uses&lt;/a&gt; secure &lt;a href=&#34;https://f1.holisticinfosecforwebdevelopers.com/chap03.html#leanpub-auto-hashing&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;hash’s or the digest&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Secure signing and where &lt;a href=&#34;https://github.com/theupdateframework/notary&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;notary&lt;/a&gt; fits in&lt;/li&gt;
&lt;li&gt;The &lt;code&gt;Dockerfile&lt;/code&gt; producing different images over time, specifying a tag in the &lt;code&gt;FROM&lt;/code&gt; instruction, and using the digest to pull the same image each time&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;security-defaults&#34;&gt;Security Defaults&lt;/h3&gt;
&lt;p&gt;Many of Dockers defaults seem to be designed to allow dev-ops to get up and running with the least amount of friction and in minimal time. In adopting Docker are we trading off security for the other benefits of containerization?&lt;/p&gt;
&lt;p&gt;Images derived from other images inherit the same user defined in the parent image explicitly or implicitly, so in most cases this will default to &lt;code&gt;root&lt;/code&gt;.&lt;br&gt;
Dockers default is to run containers, and all commands / processes within a container as &lt;code&gt;root&lt;/code&gt;. Was this a decision made with the aim of “making things just work”?&lt;/p&gt;
&lt;p&gt;Is it possible to &lt;a href=&#34;https://f1.holisticinfosecforwebdevelopers.com/chap03.html#vps-countermeasures-docker-the-default-user-is-root&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;run Docker as a low privileged user&lt;/a&gt;, does this break anything?&lt;/p&gt;
&lt;p&gt;Often I find within my &lt;code&gt;Dockerfile&lt;/code&gt; that I perform an action such as copy a bunch of files as a non-&lt;code&gt;root&lt;/code&gt; user and Docker applies &lt;code&gt;root&lt;/code&gt; ownership to the copied files. Why is Docker not copying files according to the user I am set to run commands as?&lt;/p&gt;
&lt;h3 id=&#34;hardening-docker-engine-and-containershttpsf1holisticinfosecforwebdeveloperscomchap03htmlvps-countermeasures-docker-hardening-docker-host-engine-and-containers&#34;&gt;&lt;a href=&#34;https://f1.holisticinfosecforwebdevelopers.com/chap03.html#vps-countermeasures-docker-hardening-docker-host-engine-and-containers&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Hardening Docker Engine and containers&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;The thing that bugs me the most about Docker is that there is so much that needs to be known in order to establish a somewhat secure environment for running Docker containers, but that’s not well understood - it has been sold as a simple, easy solution.&lt;br&gt;
In terms of how to go about providing least privileges to any process within a container to only the syscalls, APIs, sections of memory, etc that it needs, and nothing else, let’s look at:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;https://f1.holisticinfosecforwebdevelopers.com/chap03.html#vps-countermeasures-docker-hardening-docker-host-engine-and-containers-namespaces&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Namespaces&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://f1.holisticinfosecforwebdevelopers.com/chap03.html#vps-countermeasures-docker-hardening-docker-host-engine-and-containers-control-groups&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Control Groups&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://f1.holisticinfosecforwebdevelopers.com/chap03.html#leanpub-auto-linux-security-modules-lsm&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Linux Security Modules&lt;/a&gt; (SELinux and AppArmor)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://f1.holisticinfosecforwebdevelopers.com/chap03.html#vps-countermeasures-docker-hardening-docker-host-engine-and-containers-capabilities&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Capabilities&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Secure Computing Mode (&lt;a href=&#34;https://f1.holisticinfosecforwebdevelopers.com/chap03.html#vps-countermeasures-docker-hardening-docker-host-engine-and-containers-seccomp&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Seccomp&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://f1.holisticinfosecforwebdevelopers.com/chap03.html#vps-countermeasures-disable-remove-services-harden-what-is-left-lock-down-the-mounting-of-partitions&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Filesystem mounts&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;namespaces&#34;&gt;Namespaces&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;What are Linux Namespaces?&lt;/li&gt;
&lt;li&gt;Which component of Docker creates and manages the namespaces and how does Docker use them?&lt;/li&gt;
&lt;li&gt;How can Engineers leverage Namespaces to improve their security?&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Can you explain a bit about the new User Namespaces, how they help us and how to use them?&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;mnt&lt;/code&gt; (manages filesystems and mount points)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;PID&lt;/code&gt; (process isolation)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;net&lt;/code&gt; (manages the network stack and interfaces)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;UTS&lt;/code&gt; (Unix Timesharing System, isolating kernel and version identifiers)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;IPC&lt;/code&gt; (manages access to InterProcess Comms)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;user&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;control-groups&#34;&gt;Control Groups&lt;/h4&gt;
&lt;p&gt;What are Control Groups, and how can they be used to help secure containers?&lt;/p&gt;
&lt;h4 id=&#34;linux-security-modules&#34;&gt;Linux Security Modules&lt;/h4&gt;
&lt;p&gt;Linux Security Modules (LSM) such as AppArmor and SELinux are a framework that’s been part of the Linux kernel since 2.6, that supports security models implementing Mandatory Access Control (MAC).&lt;br&gt;
Can you briefly explain Linux Security Modules and how they implement mandatory Access Control?&lt;/p&gt;
&lt;p&gt;AppArmor and SELinux are the two most common LSM’s accepted in the Linux kernel. Docker provides a usable interface to these LSMs.&lt;/p&gt;
&lt;p&gt;Can you explain what this interface looks like, and how Docker users should go about using it?&lt;/p&gt;
&lt;h4 id=&#34;capabilities&#34;&gt;Capabilities&lt;/h4&gt;
&lt;p&gt;Can you briefly explain what capabilities are in the context of computer science, what they do to the &lt;code&gt;root&lt;/code&gt; user, and how can we set them up for a Docker container to apply least privilege?&lt;/p&gt;
&lt;h4 id=&#34;seccomp&#34;&gt;Seccomp&lt;/h4&gt;
&lt;p&gt;Can you give us a bit of an idea of what Secure Computing Mode (SecComp) is and does for us, and then explain how Docker takes advantage of it?&lt;/p&gt;
&lt;p&gt;How can we increase the number of disabled System calls available in a Docker container?&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;docker &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;run|create&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; --security-opt seccomp&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;/path/to/seccomp/profile.json hello-world&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4 id=&#34;filesystem-mounts&#34;&gt;Filesystem Mounts&lt;/h4&gt;
&lt;p&gt;On a physical server or VPS, we can control the mount attributes of our many file systems with the &lt;code&gt;/etc/fstab&lt;/code&gt;. What are the best ways to apply the same attributes to the file systems of our Docker containers, is it just adding the &lt;code&gt;--read-only&lt;/code&gt; flag on container start?&lt;/p&gt;
&lt;p&gt;What else do we need to be aware of around applying least privilege to our file system mounts and how can we go about doing this?&lt;/p&gt;
&lt;h4 id=&#34;runchttpsf1holisticinfosecforwebdeveloperscomchap03htmlvps-countermeasures-docker-runc-and-where-it-fits-in&#34;&gt;&lt;a href=&#34;https://f1.holisticinfosecforwebdevelopers.com/chap03.html#vps-countermeasures-docker-runc-and-where-it-fits-in&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;runC&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Can you explain what runC is, what it gives engineers, and how we should use it?&lt;/p&gt;
&lt;p&gt;Should we be using runC commands now instead of Docker commands?&lt;/p&gt;
&lt;p&gt;Should engineers run &lt;code&gt;run spec&lt;/code&gt; to generate the host independent &lt;code&gt;config.json&lt;/code&gt; and host specific &lt;code&gt;runtime.json&lt;/code&gt; specification files, which they then need to edit and apply sensible security settings around the previously discussed:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Namespaces&lt;/li&gt;
&lt;li&gt;Control Groups&lt;/li&gt;
&lt;li&gt;Linux Security Modules (SELinux and AppArmor)&lt;/li&gt;
&lt;li&gt;Capabilities&lt;/li&gt;
&lt;li&gt;Seccomp&lt;/li&gt;
&lt;li&gt;Filesystem mounts&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Docker has many security enhancing capabilities, but which are actually on by default?&lt;/p&gt;
&lt;h4 id=&#34;what-about-docker-engine&#34;&gt;What about Docker Engine&lt;/h4&gt;
&lt;p&gt;Can you explain what the Docker engine components are, and are there any risks to each of these components that we haven&amp;rsquo;t discussed and really should?&lt;/p&gt;
&lt;p&gt;The Docker engine is comprised of:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The server or daemon process.&lt;/li&gt;
&lt;li&gt;The REST API which specifies interfaces that programs can use to talk to the daemon and tell it what to do.&lt;/li&gt;
&lt;li&gt;A command line interface (CLI) client&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;What can we do to harden each of these components?&lt;/p&gt;
&lt;h4 id=&#34;best-practises&#34;&gt;Best Practises&lt;/h4&gt;
&lt;p&gt;Are there any other publicly available best practices for Docker security available besides the Centre for Internet Security &lt;a href=&#34;https://benchmarks.cisecurity.org/tools2/docker/CIS_Docker_1.12.0_Benchmark_v1.0.0.pdf&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Docker Benchmark&lt;/a&gt;?&lt;/p&gt;
&lt;p&gt;Where abouts can we find sample codes and configurations that will help listeners improve the security of their Docker containers and infrastructure?&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Francois Raynaud on DevSecOps</title>
      <link>https://binarymist.io/publication/ser-podcast-devsecops/</link>
      <pubDate>Tue, 18 Apr 2017 00:00:00 +0000</pubDate>
      <guid>https://binarymist.io/publication/ser-podcast-devsecops/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://www.se-radio.net/team/kim-carter/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;













&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;
        &lt;img alt=&#34;Software Engineering Radio&#34; srcset=&#34;
               /media/publication/se-radio-logo_hua56cba13ba94bffe77c0e5cf633d61a8_4797_39b10f2cd9435d3f006e74f86974b3b4.png 400w,
               /media/publication/se-radio-logo_hua56cba13ba94bffe77c0e5cf633d61a8_4797_9708a0dd6344bd9522595665aa18325d.png 760w,
               /media/publication/se-radio-logo_hua56cba13ba94bffe77c0e5cf633d61a8_4797_1200x1200_fit_lanczos_2.png 1200w&#34;
               src=&#34;https://binarymist.io/media/publication/se-radio-logo_hua56cba13ba94bffe77c0e5cf633d61a8_4797_39b10f2cd9435d3f006e74f86974b3b4.png&#34;
               width=&#34;584&#34;
               height=&#34;80&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Talk - The Art of Exploitation</title>
      <link>https://binarymist.io/event/js-remote-conf-2017-the-art-of-exploitation/</link>
      <pubDate>Wed, 15 Mar 2017 14:15:00 +1300</pubDate>
      <guid>https://binarymist.io/event/js-remote-conf-2017-the-art-of-exploitation/</guid>
      <description>
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/IVLpmCtiPZ0&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;br&gt;
&lt;script async class=&#34;speakerdeck-embed&#34; data-id=&#34;d1298f1dcafb4876b471055aa39bea42&#34; data-ratio=&#34;1.33159947984395&#34; src=&#34;//speakerdeck.com/assets/embed.js&#34;&gt;&lt;/script&gt;
&lt;blockquote&gt;
&lt;p&gt;Some of the PowerShell plays from Kim&amp;rsquo;s second &lt;a href=&#34;https://f1.holisticinfosecforwebdevelopers.com/chap03.html#vps-identify-risks-powershell&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;book&lt;/a&gt;:&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/a01IJzqYD8I&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;br&gt;
</description>
    </item>
    
    <item>
      <title>Talk - The Art of Exploitation</title>
      <link>https://binarymist.io/event/nz-js-con-2017-the-art-of-exploitation/</link>
      <pubDate>Thu, 09 Mar 2017 16:00:00 +1300</pubDate>
      <guid>https://binarymist.io/event/nz-js-con-2017-the-art-of-exploitation/</guid>
      <description>
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/IVLpmCtiPZ0&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;br&gt;
&lt;script async class=&#34;speakerdeck-embed&#34; data-id=&#34;d1298f1dcafb4876b471055aa39bea42&#34; data-ratio=&#34;1.33159947984395&#34; src=&#34;//speakerdeck.com/assets/embed.js&#34;&gt;&lt;/script&gt;
&lt;blockquote&gt;
&lt;p&gt;Some of the PowerShell plays from Kim&amp;rsquo;s second &lt;a href=&#34;https://f1.holisticinfosecforwebdevelopers.com/chap03.html#vps-identify-risks-powershell&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;book&lt;/a&gt;:&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/a01IJzqYD8I&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;br&gt;
</description>
    </item>
    
    <item>
      <title>Workshop - Developing a high-performance security focussed Agile Team</title>
      <link>https://binarymist.io/event/devseccon-asia-2017-workshop-developing-a-high-perf-security-focussed-agile-team/</link>
      <pubDate>Thu, 23 Feb 2017 13:00:00 +1300</pubDate>
      <guid>https://binarymist.io/event/devseccon-asia-2017-workshop-developing-a-high-perf-security-focussed-agile-team/</guid>
      <description>&lt;p&gt;Kim will then discuss and demo a set of light weight processes, practises and tools, that when combined have proven their value in:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Aiding high throughput (reducing time to market)&lt;/li&gt;
&lt;li&gt;Significantly increasing quality (finding and removing bugs)&lt;/li&gt;
&lt;li&gt;Without de-scoping&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;and all while reducing total project cost (fact).
If this sounds like breaking the laws of physics, or too good to be true, then this workshop is for you.&lt;/p&gt;
&lt;p&gt;Kim will finish off with the habits of top developers and how we can make them part of our lives.&lt;/p&gt;
&lt;script async class=&#34;speakerdeck-embed&#34; data-id=&#34;339e2d4e2d1f44a8bfaf33d50a163339&#34; data-ratio=&#34;1.33159947984395&#34; src=&#34;//speakerdeck.com/assets/embed.js&#34;&gt;&lt;/script&gt;
&lt;br&gt;
</description>
    </item>
    
    <item>
      <title>Talk - Agile Security for Web Developers</title>
      <link>https://binarymist.io/event/agilenz-2016-agile-security-for-web-developers/</link>
      <pubDate>Tue, 29 Nov 2016 16:00:00 +1300</pubDate>
      <guid>https://binarymist.io/event/agilenz-2016-agile-security-for-web-developers/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Workshop - Holistic Info-Sec for Web Developers - Intense</title>
      <link>https://binarymist.io/event/kiwicon-2016-workshop-holistic-info-sec-for-web-developers-intense/</link>
      <pubDate>Wed, 16 Nov 2016 09:00:00 +1300</pubDate>
      <guid>https://binarymist.io/event/kiwicon-2016-workshop-holistic-info-sec-for-web-developers-intense/</guid>
      <description>&lt;p&gt;The content is aimed at software engineers to teach them how to think holistically about security. The theme that runs through the training, and the book, is pulling the security focus that’s usually left until the end of the project or “go live” right into each Sprint. Baking security into the product from the &lt;a href=&#34;https://f0.holisticinfosecforwebdevelopers.com/chap06.html#leanpub-auto-cheapest-place-to-deal-with-defects&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;cheapest possible place&lt;/a&gt;. Thus saving large amounts of money due to re-work and business asset loss. Kim will be teaching attendees a very &lt;a href=&#34;https://f0.holisticinfosecforwebdevelopers.com/chap03.html#starting-with-the-30000-foot-view&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;simple threat modelling&lt;/a&gt; process initially blue printed by one of the best security experts the world has known, Bruce Schneier, then how to apply that process to a &lt;a href=&#34;https://f0.holisticinfosecforwebdevelopers.com/chap04.html#10000-foot-view-and-lower&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;10,000′ view&lt;/a&gt; and lower for a collection of areas:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://f0.holisticinfosecforwebdevelopers.com/chap07.html#physical&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Physical&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://f0.holisticinfosecforwebdevelopers.com/chap08.html#people&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;People&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://f1.holisticinfosecforwebdevelopers.com/chap05.html#cloud&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Cloud&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://f1.holisticinfosecforwebdevelopers.com/chap03.html#vps&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;VPS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://f1.holisticinfosecforwebdevelopers.com/chap04.html#network&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Network&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://f1.holisticinfosecforwebdevelopers.com/chap06.html#web-applications&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Web Applications&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Within each Sprint.&lt;/p&gt;
&lt;p&gt;A hands on training, taking the &lt;a href=&#34;https://f0.holisticinfosecforwebdevelopers.com/chap06.html#process-and-practises-penetration-testing&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;attackers perspective&lt;/a&gt; and extracting a set of development related &lt;a href=&#34;https://f0.holisticinfosecforwebdevelopers.com/chap06.html#process-and-practises-agile-development-and-practices&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;processes and practises&lt;/a&gt; that can be augmented with your Scrum Teams existing processes and practices, creating minimum disruption and maximum cost effective security. Attendees will be able to take these learnings and apply them within their own Scrum Teams.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Workshop - Security Regression Testing with ZapAPI and NodeGoat</title>
      <link>https://binarymist.io/event/aws-meetup-2016-workshop-security-regression-testing-with-zapapi-and-nodegoat/</link>
      <pubDate>Fri, 28 Oct 2016 17:30:00 +1300</pubDate>
      <guid>https://binarymist.io/event/aws-meetup-2016-workshop-security-regression-testing-with-zapapi-and-nodegoat/</guid>
      <description>&lt;p&gt;
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/DrwXUOJWMoo&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;br&gt;&lt;/p&gt;














&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;
        &lt;img alt=&#34;aws auckland&#34; srcset=&#34;
               /media/talk/aws-auckland_hu22c46d51b12a22ca2628bb481d1408aa_6636_7d7a07e10e82d74edb2c140a818c5b9b.jpg 400w,
               /media/talk/aws-auckland_hu22c46d51b12a22ca2628bb481d1408aa_6636_18cf2ec0b2c743e613020f1e06baeef3.jpg 760w,
               /media/talk/aws-auckland_hu22c46d51b12a22ca2628bb481d1408aa_6636_1200x1200_fit_q90_lanczos.jpg 1200w&#34;
               src=&#34;https://binarymist.io/media/talk/aws-auckland_hu22c46d51b12a22ca2628bb481d1408aa_6636_7d7a07e10e82d74edb2c140a818c5b9b.jpg&#34;
               width=&#34;180&#34;
               height=&#34;180&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
</description>
    </item>
    
    <item>
      <title>Workshop - Security Regression Testing with ZapAPI and NodeGoat</title>
      <link>https://binarymist.io/event/nodejs-meetup-2016-workshop-security-regression-testing-with-zapapi-and-nodegoat/</link>
      <pubDate>Thu, 27 Oct 2016 18:15:00 +1300</pubDate>
      <guid>https://binarymist.io/event/nodejs-meetup-2016-workshop-security-regression-testing-with-zapapi-and-nodegoat/</guid>
      <description>&lt;p&gt;
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/DrwXUOJWMoo&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;br&gt;
&lt;br&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Workshop - Security Regression Testing with ZapAPI and NodeGoat</title>
      <link>https://binarymist.io/event/nodeconfeu-2016-workshop-security-regression-testing-with-zapapi-and-nodegoat/</link>
      <pubDate>Sun, 16 Oct 2016 13:00:00 +1300</pubDate>
      <guid>https://binarymist.io/event/nodeconfeu-2016-workshop-security-regression-testing-with-zapapi-and-nodegoat/</guid>
      <description>&lt;p&gt;
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/DrwXUOJWMoo&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;br&gt;&lt;/p&gt;
&lt;p&gt;Kim Carter has developed a strong track record as a technology architect and information security professional over 15 years. He is a &lt;a href=&#34;https://www.owasp.org/index.php/New_Zealand&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Chapter Leader&lt;/a&gt; of the Open Web Application Security Project (OWASP) NZ and a Certified Scrum Master. Kim enjoys facilitating and motivating cross-functional, self-managing teams. You’ll find the insights from Kim’s talk in his new book, &lt;a href=&#34;https://binarymist.io/publication/holistic-infosec-for-web-developers&#34;&gt;Holistic Infosec for Web Developers&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;NodeConf gives you unparalleled access to top thought leaders like Kim Carter. Book your tickets now to avail of this unique opportunity.&lt;/p&gt;
&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;&amp;quot;Security Regression Testing with ZapAPI and NodeGoat&amp;quot; w/ &lt;a href=&#34;https://twitter.com/binarymist?ref_src=twsrc%5Etfw&#34;&gt;@binarymist&lt;/a&gt; &lt;a href=&#34;https://twitter.com/hashtag/NodeConfEU?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#NodeConfEU&lt;/a&gt;! &lt;a href=&#34;https://twitter.com/hashtag/node?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#node&lt;/a&gt; &lt;a href=&#34;https://t.co/4Snap5Hafj&#34;&gt;pic.twitter.com/4Snap5Hafj&lt;/a&gt;&lt;/p&gt;&amp;mdash; NodeConf Remote / NodeConf EU (@NodeConfRemote) &lt;a href=&#34;https://twitter.com/NodeConfRemote/status/779621421374906368?ref_src=twsrc%5Etfw&#34;&gt;September 24, 2016&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;

</description>
    </item>
    
    <item>
      <title>Workshop - Holistic Info-Sec for Computer Science Students</title>
      <link>https://binarymist.io/event/uca-2016-workshop-holistic-info-sec-for-comp-sci-students/</link>
      <pubDate>Mon, 05 Sep 2016 10:00:00 +1200</pubDate>
      <guid>https://binarymist.io/event/uca-2016-workshop-holistic-info-sec-for-comp-sci-students/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Talk - Agile Security for Web Developers</title>
      <link>https://binarymist.io/event/agile-professionals-network-2016-agile-security-for-web-developers/</link>
      <pubDate>Thu, 18 Aug 2016 18:00:00 +1200</pubDate>
      <guid>https://binarymist.io/event/agile-professionals-network-2016-agile-security-for-web-developers/</guid>
      <description>&lt;br&gt;
&lt;h2 id=&#34;what-others-have-said&#34;&gt;What others have said&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://www.meetup.com/Christchurch-Agile-Professionals-Network/events/231738713/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;













&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;
        &lt;img alt=&#34;What others say about kims talk&#34; srcset=&#34;
               /media/talk/what-others-say-2016-apn_hu1c68402a0a89da5d60d9b4b42d46350d_9846_49ccf19b3fd89c47bb3c3a9525f5cea7.png 400w,
               /media/talk/what-others-say-2016-apn_hu1c68402a0a89da5d60d9b4b42d46350d_9846_5e75bd6448d7d68959f11e95518dcb3f.png 760w,
               /media/talk/what-others-say-2016-apn_hu1c68402a0a89da5d60d9b4b42d46350d_9846_1200x1200_fit_lanczos_2.png 1200w&#34;
               src=&#34;https://binarymist.io/media/talk/what-others-say-2016-apn_hu1c68402a0a89da5d60d9b4b42d46350d_9846_49ccf19b3fd89c47bb3c3a9525f5cea7.png&#34;
               width=&#34;760&#34;
               height=&#34;152&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;&lt;/a&gt;&lt;/p&gt;
&lt;br&gt;
</description>
    </item>
    
    <item>
      <title>Workshop - Security Regression Testing with ZapAPI and NodeGoat</title>
      <link>https://binarymist.io/event/owaspny-meetup-2016-workshop-security-regression-testing-with-zapapi-and-nodegoat/</link>
      <pubDate>Wed, 27 Jul 2016 19:00:00 +1200</pubDate>
      <guid>https://binarymist.io/event/owaspny-meetup-2016-workshop-security-regression-testing-with-zapapi-and-nodegoat/</guid>
      <description>&lt;p&gt;
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/DrwXUOJWMoo&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;br&gt;
&lt;br&gt;&lt;/p&gt;
&lt;h2 id=&#34;what-others-have-said&#34;&gt;What others have said&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://www.meetup.com/owaspnyc/events/228716474/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;













&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;
        &lt;img alt=&#34;What others say about kims talk&#34; srcset=&#34;
               /media/talk/what-others-say-2016-owaspny_hu74c6e9c65eb95884ff9e00f2c79e528b_37510_d71b46cc23a44ea4a782e5a60dec1eef.png 400w,
               /media/talk/what-others-say-2016-owaspny_hu74c6e9c65eb95884ff9e00f2c79e528b_37510_bf87eb4374da8746e68d3121aa42fedf.png 760w,
               /media/talk/what-others-say-2016-owaspny_hu74c6e9c65eb95884ff9e00f2c79e528b_37510_1200x1200_fit_lanczos_2.png 1200w&#34;
               src=&#34;https://binarymist.io/media/talk/what-others-say-2016-owaspny_hu74c6e9c65eb95884ff9e00f2c79e528b_37510_d71b46cc23a44ea4a782e5a60dec1eef.png&#34;
               width=&#34;760&#34;
               height=&#34;145&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;&lt;/a&gt;&lt;/p&gt;
&lt;br&gt;
</description>
    </item>
    
    <item>
      <title>Workshop - Holistic Info-Sec for Web Developers</title>
      <link>https://binarymist.io/event/hope-2016-workshop-holistic-info-sec-for-web-developers/</link>
      <pubDate>Sat, 23 Jul 2016 10:00:00 +1200</pubDate>
      <guid>https://binarymist.io/event/hope-2016-workshop-holistic-info-sec-for-web-developers/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://xi.hope.net/workshops.html#-holistic-info-sec-for-web-developers-&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;













&lt;figure  id=&#34;figure-the-eleventh-hope-conference&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;
        &lt;img alt=&#34;The eleventh hope conference&#34; srcset=&#34;
               /media/talk/hope-2016_hu2115ddf1cd8ed128baa6e5528080cbc9_33200_104d2d0532b26bd481706ee2d14672a2.png 400w,
               /media/talk/hope-2016_hu2115ddf1cd8ed128baa6e5528080cbc9_33200_0558948350d1b499b3d755b0b8070653.png 760w,
               /media/talk/hope-2016_hu2115ddf1cd8ed128baa6e5528080cbc9_33200_1200x1200_fit_lanczos_2.png 1200w&#34;
               src=&#34;https://binarymist.io/media/talk/hope-2016_hu2115ddf1cd8ed128baa6e5528080cbc9_33200_104d2d0532b26bd481706ee2d14672a2.png&#34;
               width=&#34;600&#34;
               height=&#34;600&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      The eleventh hope conference
    &lt;/figcaption&gt;&lt;/figure&gt;&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Workshop - Security Regression Testing with ZapAPI and NodeGoat</title>
      <link>https://binarymist.io/event/owaspchch-meetup-2016-workshop-security-regression-testing-with-zapapi-and-nodegoat/</link>
      <pubDate>Wed, 29 Jun 2016 19:00:00 +1200</pubDate>
      <guid>https://binarymist.io/event/owaspchch-meetup-2016-workshop-security-regression-testing-with-zapapi-and-nodegoat/</guid>
      <description>&lt;p&gt;
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/DrwXUOJWMoo&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;br&gt;
&lt;br&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Workshop - Security Regression Testing with ZapAPI and NodeGoat</title>
      <link>https://binarymist.io/event/chcjs-meetup-2016-workshop-security-regression-testing-with-zapapi-and-nodegoat/</link>
      <pubDate>Thu, 23 Jun 2016 19:00:00 +1200</pubDate>
      <guid>https://binarymist.io/event/chcjs-meetup-2016-workshop-security-regression-testing-with-zapapi-and-nodegoat/</guid>
      <description>&lt;p&gt;
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/DrwXUOJWMoo&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;br&gt;
&lt;br&gt;&lt;/p&gt;
&lt;h2 id=&#34;what-others-have-said&#34;&gt;What others have said&lt;/h2&gt;














&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;
        &lt;img alt=&#34;What others say about kims talk&#34; srcset=&#34;
               /media/talk/what-others-say-2016-chc.js_hu80b4500ba90c5718bdfb63b0cbefc95c_10109_9fd1e4d5a2b26a503a8c3b1eb39a0d11.png 400w,
               /media/talk/what-others-say-2016-chc.js_hu80b4500ba90c5718bdfb63b0cbefc95c_10109_9097fb0d1363f6c3b35c8a09a0f2ab7e.png 760w,
               /media/talk/what-others-say-2016-chc.js_hu80b4500ba90c5718bdfb63b0cbefc95c_10109_1200x1200_fit_lanczos_2.png 1200w&#34;
               src=&#34;https://binarymist.io/media/talk/what-others-say-2016-chc.js_hu80b4500ba90c5718bdfb63b0cbefc95c_10109_9fd1e4d5a2b26a503a8c3b1eb39a0d11.png&#34;
               width=&#34;760&#34;
               height=&#34;146&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;br&gt;
</description>
    </item>
    
    <item>
      <title>Talk - Agile Security for Web Developers</title>
      <link>https://binarymist.io/event/code-camp-chch-2016-agile-security-for-web-developers/</link>
      <pubDate>Sat, 18 Jun 2016 10:00:00 +1200</pubDate>
      <guid>https://binarymist.io/event/code-camp-chch-2016-agile-security-for-web-developers/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Workshop - Holistic Info-Sec for Web Developers</title>
      <link>https://binarymist.io/event/auscert-2016-workshop-holistic-info-sec-for-web-developers/</link>
      <pubDate>Mon, 23 May 2016 09:00:00 +1200</pubDate>
      <guid>https://binarymist.io/event/auscert-2016-workshop-holistic-info-sec-for-web-developers/</guid>
      <description>&lt;p&gt;Join Kim in the exploration into an insightful set of steps he has learned, from an architectural perspective down to the zeros and ones. Also providing insights of how attackers of your systems think.&lt;/p&gt;
&lt;p&gt;We will also look at other tried and tested practices and processes for reducing security defects early. That is every Sprint for each Product Backlog Item (PBI). As an architect, engineer and security specialist, Kim will uncover how to identify the lowest hanging fruit (for the attackers) by taking a holistic approach (a 30,000′ view), then honing in on the areas with the highest security ratings, based on a tried and tested threat modelling process that allows you to discover and prioritise the defects most likely to be compromised by attackers of your systems.&lt;/p&gt;
&lt;p&gt;We are going to look at automating (Security Test (Behaviour) Driven Development (STDD/SBDD)) some of the traditional manual based penetration testing methods often performed after go live and bringing them forward into parallel with your development cycles (Sprints).&lt;/p&gt;
&lt;p&gt;Thus empowering Developers to do what was once only performed by deeply specialised security consultancies at the end of the project. Dramatically increasing the confidence we as developers have in what we are delivering, thus reducing the cost of change due to defects being found as they are introduced rather than at go live.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Workshop - Tools, Password Profiling, Brute Forcing</title>
      <link>https://binarymist.io/event/isig-2016-talk-tools-password-profiling-brute-forcing/</link>
      <pubDate>Wed, 27 Apr 2016 19:30:00 +1200</pubDate>
      <guid>https://binarymist.io/event/isig-2016-talk-tools-password-profiling-brute-forcing/</guid>
      <description>&lt;p&gt;
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/zevpMvQwWOU&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;br&gt;
&lt;br&gt;&lt;/p&gt;
&lt;script async class=&#34;speakerdeck-embed&#34; data-id=&#34;85f2b3e9491b4bc8b1465782412a7396&#34; data-ratio=&#34;1.33333333333333&#34; src=&#34;//speakerdeck.com/assets/embed.js&#34;&gt;&lt;/script&gt;
&lt;br&gt;
</description>
    </item>
    
    <item>
      <title>Development Team Security Implementation</title>
      <link>https://binarymist.io/project/service-development-team-security-implementation/</link>
      <pubDate>Wed, 27 Apr 2016 00:00:00 +0000</pubDate>
      <guid>https://binarymist.io/project/service-development-team-security-implementation/</guid>
      <description>&lt;p&gt;You&amp;rsquo;ve realised that you need to do something about the rising number of defects being introduced into your software products. Competitors are outmanoeuvring you. Security reviews and penetration testing is costing you too much. Your customers are demanding higher security and protection of their data. Your Development Team(s) simply don&amp;rsquo;t have the time or expertise to add more heavy weight security process and practises.&lt;/p&gt;
&lt;h4 id=&#34;what-if-we-told-you&#34;&gt;What if we told you:&lt;/h4&gt;
&lt;p&gt;That by working with you we could reduce the amount you spend on traditional security reviews, penetration testing, and at the same time reduce the defects being introduced, and significantly improve your security stature, while reducing total project cost?&lt;/p&gt;
&lt;p&gt;Together, we could help get your product to market quicker, and with fewer security defects?&lt;/p&gt;
&lt;p&gt;We could give you the ability to prove to your customers that you were taking the security of their data seriously, and that your product(s) were a much safer investment than your competitor&amp;rsquo;s?&lt;/p&gt;
&lt;p&gt;You could even invite your customers to be part of your development process, and be amazed by seeing security defects fixed as they are found in a continuous integration or nightly build environment.&lt;/p&gt;
&lt;h4 id=&#34;outcomes&#34;&gt;Outcomes:&lt;/h4&gt;
&lt;p&gt;Once you have a &lt;a href=&#34;https://binarymist.io/project/service-development-team-security-roadmap/&#34;&gt;roadmap&lt;/a&gt; for success, which we can work with you to provide at a fixed price, detailing where your Development Team(s) can be doing better, how to do better, and providing clear steps to achieve the shared goal, teams will often need some hands on assistance to establish the light weight processes and practises, tools and techniques outlined in the &lt;a href=&#34;https://binarymist.io/project/service-development-team-security-roadmap/&#34;&gt;roadmap&lt;/a&gt;, &lt;a href=&#34;https://binarymist.io/project/service-development-team-security-training/&#34;&gt;workshop&lt;/a&gt;, and Kim&amp;rsquo;s &lt;a href=&#34;https://f0.holisticinfosecforwebdevelopers.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;book&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;We can work with your Development Team(s) implementing the security roadmap, providing ongoing mentoring as required, and then handing the reins over, continuing to monitor and provide ongoing &lt;a href=&#34;https://binarymist.io/project/service-security-strategy-retainer/&#34;&gt;advice&lt;/a&gt; and coaching as required, this way setting you up for the pit of success.&lt;/p&gt;
&lt;p&gt;This process can be relatively quick to implement, and has the side-effect of saving huge amounts of money on fixing defects once they&amp;rsquo;ve been in the system for a long time.&lt;/p&gt;
&lt;br&gt;
&lt;blockquote&gt;
&lt;p&gt;If you would get excited about reducing costs on security, while increasing the ability of your Development Team(s) to deliver secure products&amp;hellip;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;br&gt;
&lt;hr&gt;
&lt;h1 id=&#34;reserve-your-consultation&#34;&gt;Reserve Your Consultation&lt;/h1&gt;
&lt;p&gt;&lt;em&gt;Currently we have availability for select new clients.&lt;/em&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;a class=&#34;btn btn-outline-primary&#34; href=&#34;https://binarymist.io/#contact&#34;&gt;&lt;b&gt;Reserve Your Confidential Consultation&lt;/b&gt;&lt;/a&gt;&lt;/p&gt;
&lt;br&gt;
&lt;p&gt;Review our &lt;a href=&#34;https://binarymist.io/tags/portfolio&#34;&gt;Portfolio&lt;/a&gt; and &lt;a href=&#34;https://binarymist.io/tags/testimonial&#34;&gt;Testimonials&lt;/a&gt; for some of the teams we have helped reduce costs and security defect counts by shifting the security focus up front of the development life-cycle.&lt;/p&gt;
&lt;h2 id=&#34;what-our-customers-are-saying&#34;&gt;What our customers are saying&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Andrew Balfour&lt;/p&gt;
&lt;img class=&#34;testimonial-img-bordered&#34; src=&#34;../testimonial-andrew-balfour/featured.jpg&#34;&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&#34;https://binarymist.io/project/portfolio-schoollinks&#34;&gt;Owner/Managing Director, Solvam Corporation Ltd&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Kim Carter was engaged on a contract basis to implement and guide our future software development for School-links. &lt;a href=&#34;http://www.school-links.co.nz&#34;&gt;www.school-links.co.nz&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;In doing that he -&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Brought to our product a much &lt;strong&gt;higher level of expertise&lt;/strong&gt; and capability complementing our development team&lt;/li&gt;
&lt;li&gt;Directed a disciplined and methodical software development process as the Scrum Master of ‘Scrum’&lt;/li&gt;
&lt;li&gt;Helped with the restructuring and planning of our infrastructure in order to scale the product successfully&lt;/li&gt;
&lt;li&gt;Brings &lt;strong&gt;security expertise&lt;/strong&gt; at a high level with the ability to implement &lt;strong&gt;ongoing security&lt;/strong&gt; hardening program and audits&lt;/li&gt;
&lt;li&gt;Introduced the Scrum process which provided more &lt;strong&gt;consistent and accurate&lt;/strong&gt; release cycles enabling our marketing efforts to be better coordinated and focused&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Kim is a good team member and we will look to reengage with his services when required.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;br&gt;
&lt;p&gt;We have had the unique opportunity to work in both defensive (development) and &lt;a href=&#34;https://binarymist.io/event/nz-js-con-2017-the-art-of-exploitation/&#34;&gt;offensive&lt;/a&gt; (penetration testing) teams, across many domains, for a large number of years. This has produced a deep understanding of what Development Team(s) need in order to help you create solutions that will effectively resist attacks from your adversaries.&lt;/p&gt;

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/IVLpmCtiPZ0&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;br&gt;
&lt;hr&gt;
&lt;h1 id=&#34;reserve-your-consultation-1&#34;&gt;Reserve Your Consultation&lt;/h1&gt;
&lt;p&gt;&lt;em&gt;Currently we have availability for select new clients.&lt;/em&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;a class=&#34;btn btn-outline-primary&#34; href=&#34;https://binarymist.io/#contact&#34;&gt;&lt;b&gt;Reserve Your Confidential Consultation&lt;/b&gt;&lt;/a&gt;&lt;/p&gt;
&lt;br&gt;
&lt;p&gt;We can only take on one or two of these engagements every few months.&lt;/p&gt;
&lt;br&gt;
</description>
    </item>
    
    <item>
      <title>Workshop - Holistic Info-Sec for Web Developers</title>
      <link>https://binarymist.io/event/kiwicon-2015-workshop-holistic-info-sec-for-web-developers/</link>
      <pubDate>Wed, 09 Dec 2015 09:00:00 +1300</pubDate>
      <guid>https://binarymist.io/event/kiwicon-2015-workshop-holistic-info-sec-for-web-developers/</guid>
      <description>&lt;p&gt;The content is aimed at software engineers to teach them how to think holistically about security. The theme that runs through the training and the book is pulling the security focus that’s usually left until the end of the project or “go live” right into each Sprint. Baking security into the product from the cheapest possible place. Thus saving large amounts of money due to re-work and business asset loss. Kim will be teaching attendees a very simple threat modelling process initially blue printed by one of the best security experts the world has known, Bruce Schneier, then how to apply that process to a 10,000′ view and lower for a collection of areas: Physical, People, Cloud, VPS, Network and Web Applications within each Sprint.&lt;/p&gt;
&lt;p&gt;A hands on training. Emulating the Scrum process and augmenting with the processes and practices as the day progresses. For each of the above areas mentioned, we will be creating Product Backlog Items and a Product Owner facilitating the ordering of them. Attendees will be able to take these learnings and apply them within their own Scrum Teams.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Talk - Password Profiling, Brute Forcing</title>
      <link>https://binarymist.io/event/toastmasters-2015-talk-password-profiling/</link>
      <pubDate>Fri, 04 Dec 2015 07:00:00 +1300</pubDate>
      <guid>https://binarymist.io/event/toastmasters-2015-talk-password-profiling/</guid>
      <description>&lt;p&gt;Kim then takes the word-lists and analysis of failed and successful login attempts to a web application and educates a collection of brute-forcing tools what an unsuccessful and successful login looks like. Then run the brute-forcing tools until the credentials have been discovered. This demonstrates that common password strategies are no longer sufficient to stop full account compromise and worse.&lt;/p&gt;
&lt;p&gt;This is followed up with some tips on how to make this process a lot harder for attackers. Content can be found in Kims Holistic Infosec for Web Developers book.&lt;/p&gt;
&lt;p&gt;
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/zevpMvQwWOU&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;br&gt;
&lt;br&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Talk - 0wn1ng The Web</title>
      <link>https://binarymist.io/event/wdcnz-2015-0wn1ng-the-web/</link>
      <pubDate>Thu, 23 Jul 2015 15:10:00 +1200</pubDate>
      <guid>https://binarymist.io/event/wdcnz-2015-0wn1ng-the-web/</guid>
      <description>&lt;p&gt;New advances in technology look shiny… until we stop believing the hype, open our minds and start poking at them. Let me show you what happens when we start poking.&lt;/p&gt;
&lt;h3 id=&#34;presentation-video&#34;&gt;Presentation Video&lt;/h3&gt;
&lt;br&gt;

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/lsx07BR7Xm0&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;br&gt;
&lt;h3 id=&#34;slide-deck&#34;&gt;Slide Deck&lt;/h3&gt;
&lt;br&gt;
&lt;script async class=&#34;speakerdeck-embed&#34; data-id=&#34;8d03e8bd71154a2c94b6b8a33e9e2436&#34; data-ratio=&#34;1.33159947984395&#34; src=&#34;//speakerdeck.com/assets/embed.js&#34;&gt;&lt;/script&gt;
&lt;br&gt;
&lt;p&gt;The presentation is basically the process I take to carry out a small client penetration testing assignment, but with a focus on why and how web developers should be doing the same within their teams. It goes through:&lt;/p&gt;
&lt;p&gt;Why we even care about breaking our or a clients code and/or system(s)&lt;/p&gt;
&lt;p&gt;&lt;a id=&#34;no-room&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Reconnaissance (information gathering), tools and tips&lt;/li&gt;
&lt;li&gt;Vulnerability scanning, tools and tips&lt;/li&gt;
&lt;li&gt;Vulnerability searching, tools and tips&lt;/li&gt;
&lt;li&gt;Exploitation, where to start, how to start, tools (and why) and tips&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    No Room Left!
  &lt;/div&gt;
&lt;/div&gt;














&lt;figure  id=&#34;figure-standing-room-only&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;
        &lt;img alt=&#34;Kim Carter WDCNZ&#34; srcset=&#34;
               /media/talk/wdcnz-2015-standing-room-only_hucff3617e3fe90aa5ee036e213f166232_190924_01e990f1972fb78cd274ba5c3a52932a.jpg 400w,
               /media/talk/wdcnz-2015-standing-room-only_hucff3617e3fe90aa5ee036e213f166232_190924_cd1082591c178282df2689ecf8c0aa0d.jpg 760w,
               /media/talk/wdcnz-2015-standing-room-only_hucff3617e3fe90aa5ee036e213f166232_190924_1200x1200_fit_q90_lanczos.jpg 1200w&#34;
               src=&#34;https://binarymist.io/media/talk/wdcnz-2015-standing-room-only_hucff3617e3fe90aa5ee036e213f166232_190924_01e990f1972fb78cd274ba5c3a52932a.jpg&#34;
               width=&#34;760&#34;
               height=&#34;507&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      Standing room only
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Demo 1: Exploiting an XSS vulnerable web app and what you can get from it. The whole reason being here is to be able to show your employer / boss / client and why they need to do something about it. After seeing how easy it is and what you can do, few will deny that it just needs to be fixed.&lt;/p&gt;

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/92AWyUfJDUw&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;Discuss countermeasures&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;
&lt;p&gt;Demo 2: Exploiting people with spear phishing, obtaining their credentials by cloning, spoofing a website they frequently login at with the Social Engineer Toolkit&amp;rsquo;s (SET) Credential Harvester.&lt;/p&gt;

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/tb4o5UCHzSA&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;Discuss countermeasures&lt;/li&gt;
&lt;li&gt;doppelganger domains (domains that look like the real thing but are fakes)&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;
&lt;p&gt;Demo 3: Add ARP and DNS spoofing to the mix. Now when a victim browsers to a website that they like to spend time at, they will be visiting our spoofed website. We add the Browser Exploitation Framework (BeEF) hook.js to the cloned website. This hook converts the victims browser into a zombie that continually polls the BeEF comms server requesting commands to execute on the victims machine. This is the window of time we use to install a root-kit and pwn the victims machine.&lt;/p&gt;

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/ymnqTrnF85M&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;Discuss countermeasures&lt;/li&gt;
&lt;li&gt;Discuss what we can do with BeEF&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;
&lt;p&gt;Demo 4: Again we clone and host a website we know the victim likes to visit with SET. We use a couple of Metasploit attack methods and exploit memory injection. Then select a collection of payloads to deliver via shell code injection. Encrypt the payloads and configure the reverse shells. launch Metasploit and watch the reverse shells connect. Attempt to escalate privileges to system account. anti-virus (AV) stops us.&lt;/p&gt;

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/WSwqNb_94No&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Demo 5: We use Veil-Evasion to get around AV by creating our payload. We encrypt the payload with Hyperion using a weak 128-bit AES key, which decrypts itself by brute force at the time of execution on the victims machine. We use Metasploit to deliver our psexec exploit that we created with Veil-Evasion and Hyperion. We watch the attackers reverse shell connect straight to the system account.&lt;/p&gt;

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/1EvwwYiMrV4&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;Discuss countermeasures&lt;/li&gt;
&lt;/ul&gt;
&lt;br&gt;
</description>
    </item>
    
    <item>
      <title>Keeping Your NodeJS Web App Running on Production Linux</title>
      <link>https://binarymist.io/blog/2015/06/26/keeping-your-nodejs-web-app-running-on-production-linux/</link>
      <pubDate>Fri, 26 Jun 2015 00:00:00 +1200</pubDate>
      <guid>https://binarymist.io/blog/2015/06/26/keeping-your-nodejs-web-app-running-on-production-linux/</guid>
      <description>&lt;html&gt;
  &lt;head&gt;
    &lt;title&gt;Keeping Your NodeJS Web App Running on Production Linux&lt;/title&gt;
    &lt;link rel=&#34;canonical&#34; href=&#34;https://binarymist.wordpress.com/2015/06/27/keeping-your-nodejs-web-app-running-on-production-linux/&#34;/&gt;
    &lt;meta http-equiv=&#34;content-type&#34; content=&#34;text/html; charset=utf-8&#34;/&gt;
    &lt;meta http-equiv=&#34;refresh&#34; content=&#34;3; url=https://binarymist.wordpress.com/2015/06/27/keeping-your-nodejs-web-app-running-on-production-linux/&#34;/&gt;
  &lt;/head&gt;
&lt;/html&gt;
</description>
    </item>
    
    <item>
      <title>Evaluation of Host Intrusion Detection Systems (HIDS)</title>
      <link>https://binarymist.io/blog/2015/05/30/evaluation-of-host-intrusion-detection-systems-hids/</link>
      <pubDate>Sat, 30 May 2015 00:00:00 +1200</pubDate>
      <guid>https://binarymist.io/blog/2015/05/30/evaluation-of-host-intrusion-detection-systems-hids/</guid>
      <description>&lt;html&gt;
  &lt;head&gt;
    &lt;title&gt;Evaluation of Host Intrusion Detection Systems (HIDS)&lt;/title&gt;
    &lt;link rel=&#34;canonical&#34; href=&#34;https://binarymist.wordpress.com/2015/05/30/evaluation-of-host-intrusion-detection-systems-hids/&#34;/&gt;
    &lt;meta http-equiv=&#34;content-type&#34; content=&#34;text/html; charset=utf-8&#34;/&gt;
    &lt;meta http-equiv=&#34;refresh&#34; content=&#34;2; url=https://binarymist.wordpress.com/2015/05/30/evaluation-of-host-intrusion-detection-systems-hids/&#34;/&gt;
  &lt;/head&gt;
&lt;/html&gt;
</description>
    </item>
    
    <item>
      <title>Workshop - Holistic Info-Sec for Web Developers</title>
      <link>https://binarymist.io/event/campjs-2015-workshop-holistic-infosec-for-web-developers/</link>
      <pubDate>Sun, 24 May 2015 13:00:00 +1200</pubDate>
      <guid>https://binarymist.io/event/campjs-2015-workshop-holistic-infosec-for-web-developers/</guid>
      <description>&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    This was the very first workshop performed as Kim&amp;rsquo;s &lt;a href=&#34;https://holisticinfosecforwebdevelopers.com/&#34;&gt;book series&lt;/a&gt; was just getting started.
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;We will also look at other tried and tested practices and processes for reducing security defects early. That is every Sprint for each Product Backlog Item (PBI). As an architect, engineer and security specialist, Kim will uncover how to identify the lowest hanging fruit (for the attackers) by taking a holistic approach (a 30,000′ view), then honing in on the areas with the highest security ratings, based on a tried and tested threat modelling process that allows you to discover and prioritise the defects most likely to be compromised by attackers of your systems.&lt;/p&gt;
&lt;script async class=&#34;speakerdeck-embed&#34; data-id=&#34;0e1b9d60c2b84ca99bd4824fc9366f54&#34; data-ratio=&#34;1.33159947984395&#34; src=&#34;//speakerdeck.com/assets/embed.js&#34;&gt;&lt;/script&gt;
&lt;br&gt;
&lt;p&gt;We are going to look at automating (Security Test (Behaviour) Driven Development (STDD/SBDD)) some of the traditional manual based penetration testing methods often performed after go live and bringing them forward into parallel with your development cycles (Sprints).
Thus empowering Developers to do what was once only performed by deeply specialised security consultancies at the end of the project. Dramatically increasing the confidence we as developers have in what we are delivering, thus reducing the cost of change due to defects being found as they are introduced rather than at go live. Trainee Requirements:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Laptop or something able to run the following&lt;/li&gt;
&lt;li&gt;Some virtualisation software able to run an ISO. I.E. VirtualBox or VMWare&lt;/li&gt;
&lt;li&gt;Test tools required
&lt;ul&gt;
&lt;li&gt;Kali Linux (physical or bootable USB stick or VM)
&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Web Server Log Management</title>
      <link>https://binarymist.io/blog/2015/04/25/web-server-log-management/</link>
      <pubDate>Sat, 25 Apr 2015 00:00:00 +1200</pubDate>
      <guid>https://binarymist.io/blog/2015/04/25/web-server-log-management/</guid>
      <description>&lt;html&gt;
  &lt;head&gt;
    &lt;title&gt;Web Server Log Management&lt;/title&gt;
    &lt;link rel=&#34;canonical&#34; href=&#34;https://binarymist.wordpress.com/2015/04/25/web-server-log-management/&#34;/&gt;
    &lt;meta http-equiv=&#34;content-type&#34; content=&#34;text/html; charset=utf-8&#34;/&gt;
    &lt;meta http-equiv=&#34;refresh&#34; content=&#34;2; url=https://binarymist.wordpress.com/2015/04/25/web-server-log-management/&#34;/&gt;
  &lt;/head&gt;
&lt;/html&gt;
</description>
    </item>
    
    <item>
      <title>Keeping Your Linux Server/s In Time With Your Router</title>
      <link>https://binarymist.io/blog/2015/03/28/keeping-your-linux-server/s-in-time-with-your-router/</link>
      <pubDate>Sat, 28 Mar 2015 00:00:00 +1300</pubDate>
      <guid>https://binarymist.io/blog/2015/03/28/keeping-your-linux-server/s-in-time-with-your-router/</guid>
      <description>&lt;html&gt;
  &lt;head&gt;
    &lt;title&gt;Keeping Your Linux Server/s In Time With Your Router&lt;/title&gt;
    &lt;link rel=&#34;canonical&#34; href=&#34;https://binarymist.wordpress.com/2015/03/28/keeping-your-linux-server-in-time/&#34;/&gt;
    &lt;meta http-equiv=&#34;content-type&#34; content=&#34;text/html; charset=utf-8&#34;/&gt;
    &lt;meta http-equiv=&#34;refresh&#34; content=&#34;3; url=https://binarymist.wordpress.com/2015/03/28/keeping-your-linux-server-in-time/&#34;/&gt;
  &lt;/head&gt;
&lt;/html&gt;
</description>
    </item>
    
    <item>
      <title>Installation and Hardening of Debian Web Server</title>
      <link>https://binarymist.io/blog/2014/12/27/installation-and-hardening-of-debian-web-server/</link>
      <pubDate>Sat, 27 Dec 2014 00:00:00 +1300</pubDate>
      <guid>https://binarymist.io/blog/2014/12/27/installation-and-hardening-of-debian-web-server/</guid>
      <description>&lt;html&gt;
  &lt;head&gt;
    &lt;title&gt;Installation and Hardening of Debian Web Server&lt;/title&gt;
    &lt;link rel=&#34;canonical&#34; href=&#34;https://binarymist.wordpress.com/2014/12/27/installation-hardening-of-debian-web-server/&#34;/&gt;
    &lt;meta http-equiv=&#34;content-type&#34; content=&#34;text/html; charset=utf-8&#34;/&gt;
    &lt;meta http-equiv=&#34;refresh&#34; content=&#34;3; url=https://binarymist.wordpress.com/2014/12/27/installation-hardening-of-debian-web-server/&#34;/&gt;
  &lt;/head&gt;
&lt;/html&gt;
</description>
    </item>
    
    <item>
      <title>Automating Specification by Example for .NET Web Applications</title>
      <link>https://binarymist.io/blog/2014/02/22/automating-specification-by-example-for-.net-web-applications/</link>
      <pubDate>Sat, 22 Feb 2014 00:00:00 +1300</pubDate>
      <guid>https://binarymist.io/blog/2014/02/22/automating-specification-by-example-for-.net-web-applications/</guid>
      <description>&lt;html&gt;
  &lt;head&gt;
    &lt;title&gt;Automating Specification by Example for .NET Web Applications&lt;/title&gt;
    &lt;link rel=&#34;canonical&#34; href=&#34;https://binarymist.wordpress.com/2014/02/22/automating-specification-by-example-for-net/&#34;/&gt;
    &lt;meta http-equiv=&#34;content-type&#34; content=&#34;text/html; charset=utf-8&#34;/&gt;
    &lt;meta http-equiv=&#34;refresh&#34; content=&#34;3; url=https://binarymist.wordpress.com/2014/02/22/automating-specification-by-example-for-net/&#34;/&gt;
  &lt;/head&gt;
&lt;/html&gt;
</description>
    </item>
    
  </channel>
</rss>
