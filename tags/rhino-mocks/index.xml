<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Content tagged as &#39;Rhino-Mocks&#39; on BinaryMist</title>
    <link>https://binarymist.io/tags/rhino-mocks/</link>
    <description>Recent content in Content tagged as &#39;Rhino-Mocks&#39; on BinaryMist</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; 2018 BinaryMist Ltd &lt;/br&gt;Following images are used under Creative Commons: [1](https://www.flickr.com/photos/ravefinity/12180959354/in/photostream/) &lt;/br&gt;[Privacy](/publication/privacy/)</copyright>
    <lastBuildDate>Fri, 01 Jan 2016 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://binarymist.io/tags/rhino-mocks/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Evaluation of dot Net Mocking libraries</title>
      <link>https://binarymist.io/blog/2013/12/14/evaluation-of-dot-net-mocking-libraries/</link>
      <pubDate>Sat, 14 Dec 2013 00:00:00 +1300</pubDate>
      
      <guid>https://binarymist.io/blog/2013/12/14/evaluation-of-dot-net-mocking-libraries/</guid>
      <description>&lt;p&gt;Redirects to legacy blog post.&lt;/p&gt;

&lt;p&gt;Iâ€™ve recently undertaken another round of evaluating .NET mocking (fake/substitute/dummy/stub/ or what ever you want to call them now) libraries. Interestingly the landscape has changed quite a bit since last time I went through this exercise, which was about two years ago. The outcome of the previous investigation is at the bottom of this post.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Talk - Moving to test and behaviour-driven development</title>
      <link>https://binarymist.io/talk/canterburysoftwarecluster-2013-talk-moving-to-test-and-behaviour-driven-development/</link>
      <pubDate>Tue, 05 Mar 2013 19:00:00 +1300</pubDate>
      
      <guid>https://binarymist.io/talk/canterburysoftwarecluster-2013-talk-moving-to-test-and-behaviour-driven-development/</guid>
      <description>At Canterbury Software Cluster: In this session Kim went over the benefits of introducing TDD and BDD: How to introduce them, their differences, how to deal with push back from team members and upper management.</description>
    </item>
    
  </channel>
</rss>