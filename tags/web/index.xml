<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>web | BinaryMist</title>
    <link>https://binarymist.io/tags/web/</link>
      <atom:link href="https://binarymist.io/tags/web/index.xml" rel="self" type="application/rss+xml" />
    <description>web</description>
    <generator>Wowchemy (https://wowchemy.com)</generator><language>en-us</language><copyright>© 2018 BinaryMist Ltd</copyright><lastBuildDate>Mon, 20 Dec 2021 10:00:00 +1300</lastBuildDate>
    <image>
      <url>https://binarymist.io/media/sharing.png</url>
      <title>web</title>
      <link>https://binarymist.io/tags/web/</link>
    </image>
    
    <item>
      <title>PurpleTeam License Change</title>
      <link>https://binarymist.io/blog/2021/12/20/purpleteam-license-change/</link>
      <pubDate>Mon, 20 Dec 2021 10:00:00 +1300</pubDate>
      <guid>https://binarymist.io/blog/2021/12/20/purpleteam-license-change/</guid>
      <description>&lt;p&gt;To start with the:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;PurpleTeam &lt;code&gt;local&lt;/code&gt; environment (AKA: OWASP PurpleTeam) was licensed with the AGPL-3.0&lt;/li&gt;
&lt;li&gt;PurpleTeam &lt;code&gt;cloud&lt;/code&gt; environment (AKL: BinaryMist PurpleTeam) was licensed with a proprietary (non-free) license&lt;/li&gt;
&lt;li&gt;Projects that are not part of PurpleTeam &lt;code&gt;local&lt;/code&gt; or &lt;code&gt;cloud&lt;/code&gt; environments, but are ancillary to PurpleTeam and may or may not be within the &lt;a href=&#34;https://github.com/purpleteam-labs&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;purpleteam-labs Github organisation&lt;/a&gt;. These may be license with the MIT license&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;PurpleTeam-Labs was never really happy with the AGPL-3.0 as it didn&amp;rsquo;t really convey our intentions well. Recently we heard about the Business Source License (BSL). MariaDB, CockroachDB and Redpanda pioneered the BSL, and we thank you for creating this license. When we looked into it it actually did convey our intentions well, which are to deter other security testing service provides (DAST, SAST and IAST)(specifically offering a SaaS) from taking our work and using it in direct competition with PurpleTeam-Labs.
For the majority of PurpleTeam consumers the BSL that we&amp;rsquo;ve applied to the PurpleTeam &lt;code&gt;local&lt;/code&gt; repositories will not limit your free usage of PurpleTeam &lt;code&gt;local&lt;/code&gt; at all. We have always wanted PurpleTeam &lt;code&gt;local&lt;/code&gt; to be available to Developers, DevOps Engineers, their teams, and others willing to set-up the &lt;code&gt;local&lt;/code&gt; components to be able to use freely in-house providing it&amp;rsquo;s not being used as a service in competition with PurpleTeam-Labs.&lt;/p&gt;
&lt;p&gt;For PurpleTeam &lt;code&gt;cloud&lt;/code&gt;, the license (PurpleTeam Cloud License (PCL)) is basically the same as it was before. We&amp;rsquo;ve just made it clearer and more accessible.&lt;/p&gt;
&lt;p&gt;For the projects ancillary to PurpleTeam their licenses haven’t changed.&lt;/p&gt;
&lt;p&gt;The licenses are available in each source code repository at &lt;a href=&#34;https://github.com/purpleteam-labs&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Github&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Talk - Purple Teaming with OWASP purpleteam</title>
      <link>https://binarymist.io/event/2021-11-12-purple-teaming-with-purpleteam-owasp-global-appsec-us/</link>
      <pubDate>Fri, 12 Nov 2021 12:00:00 +1300</pubDate>
      <guid>https://binarymist.io/event/2021-11-12-purple-teaming-with-purpleteam-owasp-global-appsec-us/</guid>
      <description>&lt;p&gt;Kim will briefly discuss the three year journey that has brought purpleteam from a proof of concept (PoC) to where it is now.&lt;/p&gt;
&lt;p&gt;An overview of the NodeJS micro-services with a pluggable tester architecture will be provided.&lt;/p&gt;

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/ACuaP-ZToKw&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;h3 id=&#34;why-would-i-want-it-in-my-build-pipelines&#34;&gt;Why would I want it in my build pipelines?&lt;/h3&gt;
&lt;p&gt;In this section Kim will discus the problem that purpleteam solves,
along with the cost savings of finding and fixing your application security defects early (as you&amp;rsquo;re introducing them) as opposed to late (weeks months later with external penetration testing) or not at all.&lt;/p&gt;
&lt;!-- uncomment below when available --&gt;
&lt;!-- &lt;br&gt;

&lt;script async class=&#34;speakerdeck-embed&#34; data-id=&#34;1784d6fdfc3d4fab8ec5a67156387bf3&#34; data-ratio=&#34;1.37081659973226&#34; src=&#34;//speakerdeck.com/assets/embed.js&#34;&gt;&lt;/script&gt;

&lt;br&gt;--&gt;
&lt;h3 id=&#34;ok-i-want-it-how-do-i-set-it-up&#34;&gt;OK, I want it, how do I set it up?&lt;/h3&gt;
&lt;p&gt;Kim will walk you through all of the components and how to get them set-up and configured&lt;/p&gt;
&lt;h3 id=&#34;great-but-what-do-the-work-flows-look-like&#34;&gt;Great, but what do the work flows look like?&lt;/h3&gt;
&lt;p&gt;Let&amp;rsquo;s walk through the different ways purpleteam can be run and utilised, such as:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Running purpleteam standalone (with UI)&lt;/li&gt;
&lt;li&gt;Running purpleteam from within your pipelines as a spawned sub process (headless: without UI)&lt;/li&gt;
&lt;li&gt;Running all of the purpleteam components, including debugging each and every one of them if and when the need arises&lt;/li&gt;
&lt;/ul&gt;
&lt;br&gt;
</description>
    </item>
    
    <item>
      <title>Talk - Purple Teaming with OWASP purpleteam</title>
      <link>https://binarymist.io/event/2021-10-29-purple-teaming-with-purpleteam-all-day-dev-ops/</link>
      <pubDate>Fri, 29 Oct 2021 16:00:00 +1300</pubDate>
      <guid>https://binarymist.io/event/2021-10-29-purple-teaming-with-purpleteam-all-day-dev-ops/</guid>
      <description>&lt;p&gt;Kim will briefly discuss the three year journey that has brought purpleteam from a proof of concept (PoC) to where it is now.&lt;/p&gt;
&lt;p&gt;An overview of the NodeJS micro-services with a pluggable tester architecture will be provided.&lt;/p&gt;














&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;
        &lt;img alt=&#34;Kim Carter&#34; srcset=&#34;
               /event/2021-10-29-purple-teaming-with-purpleteam-all-day-dev-ops/KimCarter-Horizontal720w-min_hu5482ebd621a46d8dd9b0b02a558b943f_138466_0b6a8327f54049241c4a1807f6805214.png 400w,
               /event/2021-10-29-purple-teaming-with-purpleteam-all-day-dev-ops/KimCarter-Horizontal720w-min_hu5482ebd621a46d8dd9b0b02a558b943f_138466_ad8874fbe9103a7db7faf1f9037eb7c7.png 760w,
               /event/2021-10-29-purple-teaming-with-purpleteam-all-day-dev-ops/KimCarter-Horizontal720w-min_hu5482ebd621a46d8dd9b0b02a558b943f_138466_1200x1200_fit_lanczos_2.png 1200w&#34;
               src=&#34;https://binarymist.io/event/2021-10-29-purple-teaming-with-purpleteam-all-day-dev-ops/KimCarter-Horizontal720w-min_hu5482ebd621a46d8dd9b0b02a558b943f_138466_0b6a8327f54049241c4a1807f6805214.png&#34;
               width=&#34;720&#34;
               height=&#34;405&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;h3 id=&#34;why-would-i-want-it-in-my-build-pipelines&#34;&gt;Why would I want it in my build pipelines?&lt;/h3&gt;
&lt;p&gt;In this section Kim will discus the problem that purpleteam solves,
along with the cost savings of finding and fixing your application security defects early (as you&amp;rsquo;re introducing them) as opposed to late (weeks months later with external penetration testing) or not at all.&lt;/p&gt;
&lt;!-- uncomment below when available --&gt;
&lt;!-- &lt;br&gt;

&lt;script async class=&#34;speakerdeck-embed&#34; data-id=&#34;1784d6fdfc3d4fab8ec5a67156387bf3&#34; data-ratio=&#34;1.37081659973226&#34; src=&#34;//speakerdeck.com/assets/embed.js&#34;&gt;&lt;/script&gt;

&lt;br&gt;--&gt;
&lt;h3 id=&#34;ok-i-want-it-how-do-i-set-it-up&#34;&gt;OK, I want it, how do I set it up?&lt;/h3&gt;
&lt;p&gt;Kim will walk you through all of the components and how to get them set-up and configured&lt;/p&gt;
&lt;h3 id=&#34;great-but-what-do-the-work-flows-look-like&#34;&gt;Great, but what do the work flows look like?&lt;/h3&gt;
&lt;br&gt;

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/ACuaP-ZToKw&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;br&gt;
&lt;p&gt;Let&amp;rsquo;s walk through the different ways purpleteam can be run and utilised, such as:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Running purpleteam standalone (with UI)&lt;/li&gt;
&lt;li&gt;Running purpleteam from within your pipelines as a spawned sub process (headless: without UI)&lt;/li&gt;
&lt;li&gt;Running all of the purpleteam components, including debugging each and every one of them if and when the need arises&lt;/li&gt;
&lt;/ul&gt;
&lt;br&gt;
</description>
    </item>
    
    <item>
      <title>Talk - Purple Teaming with OWASP purpleteam</title>
      <link>https://binarymist.io/event/2021-10-27-purple-teaming-with-purpleteam-chch-js/</link>
      <pubDate>Wed, 27 Oct 2021 17:30:00 +1300</pubDate>
      <guid>https://binarymist.io/event/2021-10-27-purple-teaming-with-purpleteam-chch-js/</guid>
      <description>&lt;p&gt;Kim will briefly discuss the three year journey that has brought purpleteam from a proof of concept (PoC) to where it is now.&lt;/p&gt;
&lt;p&gt;An overview of the NodeJS micro-services with a pluggable tester architecture will be provided.&lt;/p&gt;

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/ACuaP-ZToKw&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;h3 id=&#34;why-would-i-want-it-in-my-build-pipelines&#34;&gt;Why would I want it in my build pipelines?&lt;/h3&gt;
&lt;p&gt;In this section Kim will discus the problem that purpleteam solves,
along with the cost savings of finding and fixing your application security defects early (as you&amp;rsquo;re introducing them) as opposed to late (weeks months later with external penetration testing) or not at all.&lt;/p&gt;
&lt;!-- uncomment below when available --&gt;
&lt;!-- &lt;br&gt;

&lt;script async class=&#34;speakerdeck-embed&#34; data-id=&#34;1784d6fdfc3d4fab8ec5a67156387bf3&#34; data-ratio=&#34;1.37081659973226&#34; src=&#34;//speakerdeck.com/assets/embed.js&#34;&gt;&lt;/script&gt;

&lt;br&gt;--&gt;
&lt;h3 id=&#34;ok-i-want-it-how-do-i-set-it-up&#34;&gt;OK, I want it, how do I set it up?&lt;/h3&gt;
&lt;p&gt;Kim will walk you through all of the components and how to get them set-up and configured&lt;/p&gt;
&lt;h3 id=&#34;great-but-what-do-the-work-flows-look-like&#34;&gt;Great, but what do the work flows look like?&lt;/h3&gt;
&lt;p&gt;Let&amp;rsquo;s walk through the different ways purpleteam can be run and utilised, such as:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Running purpleteam standalone (with UI)&lt;/li&gt;
&lt;li&gt;Running purpleteam from within your pipelines as a spawned sub process (headless: without UI)&lt;/li&gt;
&lt;li&gt;Running all of the purpleteam components, including debugging each and every one of them if and when the need arises&lt;/li&gt;
&lt;/ul&gt;
&lt;br&gt;
</description>
    </item>
    
    <item>
      <title>Talk - Purple Teaming with OWASP purpleteam</title>
      <link>https://binarymist.io/event/2021-purple-teaming-with-purpleteam-owasp-20th-anniversary/</link>
      <pubDate>Fri, 24 Sep 2021 14:25:00 +1200</pubDate>
      <guid>https://binarymist.io/event/2021-purple-teaming-with-purpleteam-owasp-20th-anniversary/</guid>
      <description>&lt;p&gt;Kim will briefly discuss the three year journey that has brought purpleteam from a proof of concept (PoC) to where it is now.&lt;/p&gt;
&lt;p&gt;An overview of the NodeJS micro-services with a pluggable tester architecture will be provided.&lt;/p&gt;














&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;
        &lt;img alt=&#34;Kim Carter&#34; srcset=&#34;
               /event/2021-purple-teaming-with-purpleteam-owasp-20th-anniversary/20th_Twitter_Speaker_Post_Kim%20Carter_720W-min_hu8ffa2922a64b28014bab8151110880be_39970_4165377ca94114d5c9c68c0fa37eee8c.jpg 400w,
               /event/2021-purple-teaming-with-purpleteam-owasp-20th-anniversary/20th_Twitter_Speaker_Post_Kim%20Carter_720W-min_hu8ffa2922a64b28014bab8151110880be_39970_a3f883836420a29e63291fe1163761ff.jpg 760w,
               /event/2021-purple-teaming-with-purpleteam-owasp-20th-anniversary/20th_Twitter_Speaker_Post_Kim%20Carter_720W-min_hu8ffa2922a64b28014bab8151110880be_39970_1200x1200_fit_q90_lanczos.jpg 1200w&#34;
               src=&#34;https://binarymist.io/event/2021-purple-teaming-with-purpleteam-owasp-20th-anniversary/20th_Twitter_Speaker_Post_Kim%20Carter_720W-min_hu8ffa2922a64b28014bab8151110880be_39970_4165377ca94114d5c9c68c0fa37eee8c.jpg&#34;
               width=&#34;720&#34;
               height=&#34;405&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;h3 id=&#34;why-would-i-want-it-in-my-build-pipelines&#34;&gt;Why would I want it in my build pipelines?&lt;/h3&gt;
&lt;p&gt;In this section Kim will discus the problem that purpleteam solves,
along with the cost savings of finding and fixing your application security defects early (as you&amp;rsquo;re introducing them) as opposed to late (weeks months later with external penetration testing) or not at all.&lt;/p&gt;
&lt;!-- uncomment below when available --&gt;
&lt;!-- &lt;br&gt;

&lt;script async class=&#34;speakerdeck-embed&#34; data-id=&#34;1784d6fdfc3d4fab8ec5a67156387bf3&#34; data-ratio=&#34;1.37081659973226&#34; src=&#34;//speakerdeck.com/assets/embed.js&#34;&gt;&lt;/script&gt;

&lt;br&gt;--&gt;
&lt;h3 id=&#34;ok-i-want-it-how-do-i-set-it-up&#34;&gt;OK, I want it, how do I set it up?&lt;/h3&gt;
&lt;p&gt;Kim will walk you through all of the components and how to get them set-up and configured&lt;/p&gt;
&lt;h3 id=&#34;great-but-what-do-the-work-flows-look-like&#34;&gt;Great, but what do the work flows look like?&lt;/h3&gt;
&lt;br&gt;

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/ACuaP-ZToKw&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;br&gt;
&lt;p&gt;Let&amp;rsquo;s walk through the different ways purpleteam can be run and utilised, such as:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Running purpleteam standalone (with UI)&lt;/li&gt;
&lt;li&gt;Running purpleteam from within your pipelines as a spawned sub process (headless: without UI)&lt;/li&gt;
&lt;li&gt;Running all of the purpleteam components, including debugging each and every one of them if and when the need arises&lt;/li&gt;
&lt;/ul&gt;
&lt;br&gt;
</description>
    </item>
    
    <item>
      <title>PurpleTeam TLS Tester Implementation</title>
      <link>https://binarymist.io/blog/2021/09/07/purpleteam-tls-tester-implementation/</link>
      <pubDate>Tue, 07 Sep 2021 17:17:11 +1300</pubDate>
      <guid>https://binarymist.io/blog/2021/09/07/purpleteam-tls-tester-implementation/</guid>
      <description>&lt;p&gt;The &lt;em&gt;PurpleTeam&lt;/em&gt; TLS &lt;em&gt;Tester&lt;/em&gt; is now implemented. I&amp;rsquo;ve written this post to highlight the learnings, and to talk about the various significant changes that were made as part of the release. All core components were released as version &lt;code&gt;1.0.0-alpha.3&lt;/code&gt;.&lt;/p&gt;

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/ACuaP-ZToKw&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;br&gt;
&lt;p&gt;The details of the above video can be found &lt;a href=&#34;https://purpleteam-labs.com/project/video-pt-full-system-run-2021/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h1 id=&#34;contents&#34;&gt;Contents&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#documentation&#34;&gt;Documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#work-items-created&#34;&gt;Work items created&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#synchronisation&#34;&gt;Synchronisation&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#time-outs&#34;&gt;Time-outs&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#cli&#34;&gt;CLI&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#for-the-test-command&#34;&gt;For the &lt;code&gt;test&lt;/code&gt; command&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#for-tester-progress--pctcomplete--bugcount--updates&#34;&gt;For &lt;code&gt;tester&lt;/code&gt;[ &lt;code&gt;Progress&lt;/code&gt; | &lt;code&gt;PctComplete&lt;/code&gt; | &lt;code&gt;BugCount&lt;/code&gt; ] updates&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#orchestrator&#34;&gt;Orchestrator&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#app-tester&#34;&gt;App Tester&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#tls-tester&#34;&gt;Tls Tester&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#message-flows&#34;&gt;Message flows&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#tls-tester-implementation&#34;&gt;TLS Tester Implementation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;All of the release notes can be accessed from the &lt;em&gt;PurpleTeam&lt;/em&gt; &lt;a href=&#34;https://purpleteam-labs.com/doc/changelog/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Changelog&lt;/a&gt; page and/or the &lt;a href=&#34;https://github.com/purpleteam-labs/purpleteam/issues/60&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Github issue&lt;/a&gt;.&lt;/p&gt;
&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;Massive set of releases just gone live around the new &lt;a href=&#34;https://twitter.com/hashtag/SSL?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#SSL&lt;/a&gt; &lt;a href=&#34;https://twitter.com/hashtag/TLS?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#TLS&lt;/a&gt; &lt;a href=&#34;https://twitter.com/hashtag/Tester?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#Tester&lt;/a&gt; &lt;a href=&#34;https://t.co/f0bPNRBjUh&#34;&gt;https://t.co/f0bPNRBjUh&lt;/a&gt;&lt;/p&gt;&amp;mdash; PurpleTeam (@purpleteamlabs) &lt;a href=&#34;https://twitter.com/purpleteamlabs/status/1433018222412910595?ref_src=twsrc%5Etfw&#34;&gt;September 1, 2021&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;

&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    &lt;p&gt;Updated a number of values around timeouts on 2021-12-09. Source of Pull Requests:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/purpleteam-labs/purpleteam/pull/105&#34;&gt;https://github.com/purpleteam-labs/purpleteam/pull/105&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/purpleteam-labs/purpleteam-orchestrator/pull/28&#34;&gt;https://github.com/purpleteam-labs/purpleteam-orchestrator/pull/28&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/purpleteam-labs/purpleteam-app-scanner/pull/34&#34;&gt;https://github.com/purpleteam-labs/purpleteam-app-scanner/pull/34&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;h1 id=&#34;documentation&#34;&gt;Documentation&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;The &lt;a href=&#34;https://purpleteam-labs.com/doc/definitions/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Definitions&lt;/a&gt; were updated&lt;/li&gt;
&lt;li&gt;The &lt;a href=&#34;https://purpleteam-labs.com/doc/log-and-outcomes-files/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Log and Outcomes files&lt;/a&gt; page was created, providing details of the &lt;em&gt;Outcomes&lt;/em&gt; archive, what&amp;rsquo;s in it and how to read specific files. You can also &lt;a href=&#34;https://www.youtube.com/watch?v=nJNAbGLCGNY&amp;amp;t=346s&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;see the contents&lt;/a&gt; of the &lt;em&gt;Outcomes&lt;/em&gt; archive for &lt;a href=&#34;https://github.com/purpleteam-labs/purpleteam/blob/main/testResources/jobs/job_1.0.0-alpha.3_local&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;this &lt;em&gt;Job&lt;/em&gt; file&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;The main architecture diagrams for &lt;a href=&#34;https://purpleteam-labs.com/doc/cloud/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;cloud&lt;/code&gt;&lt;/a&gt; and &lt;a href=&#34;https://purpleteam-labs.com/doc/local/set-up/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;local&lt;/code&gt;&lt;/a&gt; have been updated&lt;/li&gt;
&lt;li&gt;The &lt;em&gt;Job&lt;/em&gt; file schema has been &lt;a href=&#34;https://purpleteam-labs.com/doc/job-file/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;documented&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;A &lt;a href=&#34;https://purpleteam-labs.com/doc/faq/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;FAQ&lt;/a&gt; page was created&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://purpleteam-labs.com/doc/local/set-up/#tls-scanner&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Setting up&lt;/a&gt; the Tls Tester, although this is trivial&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://purpleteam-labs.com/doc/local/workflow/#other-testers&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Debugging the Tls Tester&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;work-items-created&#34;&gt;Work items created&lt;/h1&gt;
&lt;p&gt;As a result of the Tls Tester Implementation&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/purpleteam-labs/purpleteam/issues/87&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Re-work orchestrator.js&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/purpleteam-labs/purpleteam/issues/88&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Create Tester reset for &amp;ldquo;Tester failure:&amp;rdquo; occurrances&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/purpleteam-labs/purpleteam/issues/89&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Improve orchestrator Tester model error handling&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/purpleteam-labs/purpleteam/issues/90&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Re-work App and Tls Tester models&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/purpleteam-labs/purpleteam/issues/91&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Re-work Dockerfiles&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/purpleteam-labs/purpleteam/issues/92&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Extract common code into package&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/purpleteam-labs/purpleteam/issues/93&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Blog post on the TLS Scanner&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;synchronisation&#34;&gt;Synchronisation&lt;/h1&gt;
&lt;p&gt;There ended up being quite a bit of work done around synchronisation of the components, and there is still work to be done. There were architectural decisions made several years ago that needed some modification, and as you can see from the &lt;a href=&#34;#work-items-created&#34;&gt;Work items created&lt;/a&gt; there is ongoing work that needs to be done.&lt;/p&gt;
&lt;p&gt;For example I discovered near the end of the implementation another edge-case around state of a given &lt;em&gt;Tester&lt;/em&gt; being incorrect if a different &lt;em&gt;Tester&lt;/em&gt; is in a &lt;code&gt;Tester failure:&lt;/code&gt; state.
You can read about the issue &lt;a href=&#34;https://github.com/purpleteam-labs/purpleteam/issues/88&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;here&lt;/a&gt;. We will be addressing this one soon.&lt;/p&gt;
&lt;p&gt;Then there is this &lt;a href=&#34;https://github.com/purpleteam-labs/purpleteam/issues/89&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;lack of retry issue&lt;/a&gt; in the &lt;em&gt;orchestrator&lt;/em&gt; &lt;em&gt;Tester&lt;/em&gt; models which was found near the end of the TLS implementation work also, which probably won&amp;rsquo;t occur very often at all (we have never witnessed it), but it still needs to be fixed.&lt;/p&gt;
&lt;mark&gt;Before we get started discussing the synchronisation of components, you will need some understanding of the various relevant time-outs in the code base.&lt;/mark&gt;
&lt;h2 id=&#34;time-outs&#34;&gt;Time-outs&lt;/h2&gt;
&lt;p&gt;Many of the time-out issues with AWS just don&amp;rsquo;t exist when running &lt;code&gt;local&lt;/code&gt;ly. AWS Api Gateway does not support streaming, so we need to use long polling (&lt;code&gt;lp&lt;/code&gt;) between the CLI and the &lt;em&gt;orchestrator&lt;/em&gt; in the &lt;code&gt;cloud&lt;/code&gt; environment.&lt;/p&gt;
&lt;h3 id=&#34;cli&#34;&gt;CLI&lt;/h3&gt;
&lt;h4 id=&#34;for-the-test-command&#34;&gt;For the &lt;code&gt;test&lt;/code&gt; command&lt;/h4&gt;
&lt;p&gt;The initial request to the &lt;em&gt;orchestrator&lt;/em&gt; for the &lt;code&gt;test&lt;/code&gt; command has a set of timeouts, but it must stop trying before the back-end fails due to:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Stage Two containers not being up and responsive within the currently &lt;code&gt;200000&lt;/code&gt; (&lt;code&gt;s2containers.serviceDiscoveryServiceInstances.timeoutToBeAvailable&lt;/code&gt;) + &lt;code&gt;120000&lt;/code&gt; (&lt;code&gt;s2containers.responsive.timeout&lt;/code&gt;) duration&lt;/li&gt;
&lt;li&gt;The Stage Two container service discovery services not being up and responsive within the same duration as above&lt;/li&gt;
&lt;/ul&gt;
&lt;div id=&#34;cli_continues_to_retry&#34;&gt;&lt;/div&gt;
&lt;p&gt;If the CLI continues to retry after a back-end timeout, then it may continue to do so indefinitely if unsupervised, as is likely if being used in &lt;a href=&#34;https://github.com/purpleteam-labs/purpleteam#ui&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;noUi&lt;/code&gt; mode&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The &lt;a href=&#34;https://github.com/purpleteam-labs/purpleteam/blob/0a054e46d02bfbd561f8b2797e86a9d16df484d3/src/presenter/apiDecoratingAdapter.js#L215&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;time-out series&lt;/a&gt; for the &lt;code&gt;test&lt;/code&gt; command currently looks like the following for the &lt;code&gt;cloud&lt;/code&gt; environment. The CLI doesn&amp;rsquo;t timeout at all for &lt;code&gt;local&lt;/code&gt;:&lt;/p&gt;
&lt;p&gt;Tries:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;23000,&lt;/li&gt;
&lt;li&gt;23000,&lt;/li&gt;
&lt;li&gt;23000,&lt;/li&gt;
&lt;li&gt;23000,&lt;/li&gt;
&lt;li&gt;23000,&lt;/li&gt;
&lt;li&gt;23000,&lt;/li&gt;
&lt;li&gt;23000,&lt;/li&gt;
&lt;li&gt;23000,&lt;/li&gt;
&lt;li&gt;23000,&lt;/li&gt;
&lt;li&gt;23000,&lt;/li&gt;
&lt;li&gt;23000,&lt;/li&gt;
&lt;li&gt;23000,&lt;/li&gt;
&lt;li&gt;23000,&lt;/li&gt;
&lt;li&gt;14000,&lt;/li&gt;
&lt;li&gt;0 // Cancel&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;This adds up to 313000 + some request and response latency, a little (7 seconds) short of 320000 + some comms latency in the AWS machine.&lt;/p&gt;
&lt;h4 id=&#34;for-tester-progress--pctcomplete--bugcount--updates&#34;&gt;For &lt;code&gt;tester&lt;/code&gt;[ &lt;code&gt;Progress&lt;/code&gt; | &lt;code&gt;PctComplete&lt;/code&gt; | &lt;code&gt;BugCount&lt;/code&gt; ] updates&lt;/h4&gt;
&lt;p&gt;Five long-poll request attempts with no data returned from the &lt;em&gt;orchestrator&lt;/em&gt; and the CLI gives up.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// ...,
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;testerFeedbackComms&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; {
  &lt;span style=&#34;color:#a6e22e&#34;&gt;longPoll&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; {
    &lt;span style=&#34;color:#a6e22e&#34;&gt;nullProgressMaxRetries&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; {
      &lt;span style=&#34;color:#a6e22e&#34;&gt;doc&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;The number of times (sequentially receiving an event with a data object containing a property with a null value) to poll the backend when the orchestrator is not receiving feedback from the testers.&amp;#39;&lt;/span&gt;,
      &lt;span style=&#34;color:#a6e22e&#34;&gt;format&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;int&amp;#39;&lt;/span&gt;,
      &lt;span style=&#34;color:#66d9ef&#34;&gt;default&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;
    }
  }
},
&lt;span style=&#34;color:#75715e&#34;&gt;// ...
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;orchestrator&#34;&gt;Orchestrator&lt;/h3&gt;
&lt;p&gt;The following is used in the &lt;code&gt;testerWatcher&lt;/code&gt; and needs to be well under the AWS API Gateway timeout which is 30 seconds:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// ...,
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;testerFeedbackComms&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; {
  &lt;span style=&#34;color:#75715e&#34;&gt;// ...,
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;longPoll&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; {
    &lt;span style=&#34;color:#a6e22e&#34;&gt;timeout&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; {
      &lt;span style=&#34;color:#a6e22e&#34;&gt;doc&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;A double that expresses seconds to wait for blocking Redis commands. We need to timeout well before the AWS Api Gateway timeout.&amp;#39;&lt;/span&gt;,
      &lt;span style=&#34;color:#a6e22e&#34;&gt;format&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; Number,
      &lt;span style=&#34;color:#66d9ef&#34;&gt;default&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;20.0&lt;/span&gt;
    }
  }
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;app-tester&#34;&gt;App Tester&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// ...,
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;s2Containers&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; {
  &lt;span style=&#34;color:#a6e22e&#34;&gt;serviceDiscoveryServiceInstances&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; {
    &lt;span style=&#34;color:#a6e22e&#34;&gt;timeoutToBeAvailable&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; {
      &lt;span style=&#34;color:#a6e22e&#34;&gt;doc&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;The duration in milliseconds before giving up on waiting for the s2 Service Discovery Service Instances to be available.&amp;#39;&lt;/span&gt;,
      &lt;span style=&#34;color:#a6e22e&#34;&gt;format&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;duration&amp;#39;&lt;/span&gt;,
&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;      &lt;span style=&#34;color:#66d9ef&#34;&gt;default&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;200000&lt;/span&gt;
&lt;/span&gt;    },
    &lt;span style=&#34;color:#a6e22e&#34;&gt;retryIntervalToBeAvailable&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; {
      &lt;span style=&#34;color:#a6e22e&#34;&gt;doc&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;The retry interval in milliseconds for the s2 Service Discovery Service Instances to be available.&amp;#39;&lt;/span&gt;,
      &lt;span style=&#34;color:#a6e22e&#34;&gt;format&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;duration&amp;#39;&lt;/span&gt;,
      &lt;span style=&#34;color:#66d9ef&#34;&gt;default&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;5000&lt;/span&gt;
    }
  },
  &lt;span style=&#34;color:#a6e22e&#34;&gt;responsive&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; {
    &lt;span style=&#34;color:#a6e22e&#34;&gt;timeout&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; {
      &lt;span style=&#34;color:#a6e22e&#34;&gt;doc&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;The duration in milliseconds before giving up on waiting for the s2 containers to be responsive.&amp;#39;&lt;/span&gt;,
      &lt;span style=&#34;color:#a6e22e&#34;&gt;format&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;duration&amp;#39;&lt;/span&gt;,
&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;      &lt;span style=&#34;color:#66d9ef&#34;&gt;default&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;120000&lt;/span&gt;
&lt;/span&gt;    },
    &lt;span style=&#34;color:#a6e22e&#34;&gt;retryInterval&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; {
      &lt;span style=&#34;color:#a6e22e&#34;&gt;doc&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;The retry interval in milliseconds for the s2 containers to be responsive.&amp;#39;&lt;/span&gt;,
      &lt;span style=&#34;color:#a6e22e&#34;&gt;format&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;duration&amp;#39;&lt;/span&gt;,
      &lt;span style=&#34;color:#66d9ef&#34;&gt;default&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;10000&lt;/span&gt;
    }
  }
},
&lt;span style=&#34;color:#75715e&#34;&gt;// ...
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;code&gt;emissary.apiFeedbackSpeed&lt;/code&gt; is used to send the CLI the following message types: &lt;code&gt;testerProgress&lt;/code&gt;, &lt;code&gt;testerPctComplete&lt;/code&gt; and &lt;code&gt;testerBugCount&lt;/code&gt;, thus keeping the &lt;code&gt;lp&lt;/code&gt; alive. This duration needs to be less than the &lt;em&gt;orchestrator&amp;rsquo;s&lt;/em&gt; &lt;code&gt;20&lt;/code&gt; second &lt;code&gt;testerFeedbackComms.longPoll.timeout&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;emissary&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; {
  &lt;span style=&#34;color:#75715e&#34;&gt;// ...,
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;apiFeedbackSpeed&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; {
    &lt;span style=&#34;color:#a6e22e&#34;&gt;doc&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;The speed to poll the Zap API for feedback of test progress&amp;#39;&lt;/span&gt;,
    &lt;span style=&#34;color:#a6e22e&#34;&gt;format&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;duration&amp;#39;&lt;/span&gt;,
    &lt;span style=&#34;color:#66d9ef&#34;&gt;default&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;5000&lt;/span&gt;
  },
  &lt;span style=&#34;color:#75715e&#34;&gt;// ...
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;tls-tester&#34;&gt;TLS Tester&lt;/h3&gt;
&lt;p&gt;If we don&amp;rsquo;t receive any update from the TLS &lt;em&gt;Emissary&lt;/em&gt; within this duration (&lt;code&gt;messageChannelHeartBeatInterval&lt;/code&gt;) then the TLS &lt;em&gt;Tester&lt;/em&gt; sends the CLI a &lt;code&gt;testerProgress&lt;/code&gt; message with the &lt;code&gt;textData&lt;/code&gt;: &lt;code&gt;Tester is awaiting Emissary feedback...&lt;/code&gt;. This duration needs to be less than the &lt;em&gt;orchestrator&amp;rsquo;s&lt;/em&gt; &lt;code&gt;20&lt;/code&gt; second &lt;code&gt;testerFeedbackComms.longPoll.timeout&lt;/code&gt; to make sure the CLI continues to poll the &lt;em&gt;orchestrator&lt;/em&gt; for &lt;code&gt;tester[Progress|PctComplete|BugCount]&lt;/code&gt; updates.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// ...,
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;messageChannelHeartBeatInterval&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; {
  &lt;span style=&#34;color:#a6e22e&#34;&gt;doc&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;This is used to send heart beat messages every n milliseconds. Primarily to keep the orchestrator\&amp;#39;s testerWatcher longPoll timeout from being reached.&amp;#39;&lt;/span&gt;,
  &lt;span style=&#34;color:#a6e22e&#34;&gt;format&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;duration&amp;#39;&lt;/span&gt;,
  &lt;span style=&#34;color:#66d9ef&#34;&gt;default&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;15000&lt;/span&gt;
},
&lt;span style=&#34;color:#75715e&#34;&gt;// ...
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;message-flows&#34;&gt;Message flows&lt;/h2&gt;
&lt;p&gt;There are two flow types in play between the &lt;em&gt;orchestrator&lt;/em&gt; and the CLI, namely Server Sent Events (&lt;code&gt;sse&lt;/code&gt;) and Long Polling (&lt;code&gt;lp&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;&lt;mark&gt;Before reading this section dive over to the &lt;em&gt;orchestrator&lt;/em&gt; &lt;a href=&#34;https://github.com/purpleteam-labs/purpleteam-orchestrator/blob/main/README.md#configuration&#34; target=&#34;_blank&#34;&gt;README&lt;/a&gt; for a quick run-down on how &lt;em&gt;PurpleTeam&lt;/em&gt; is using &lt;code&gt;sse&lt;/code&gt; and &lt;code&gt;lp&lt;/code&gt;.&lt;/mark&gt; &lt;/p&gt;
&lt;p&gt;Before The TLS implementation, the &lt;code&gt;testerFeedbackComms.medium&lt;/code&gt; was defined in the configuration for both the &lt;em&gt;orchestrator&lt;/em&gt; and the CLI. Both configurations had to match. If they didn&amp;rsquo;t the &lt;em&gt;orchestrator&lt;/em&gt; would respond with an error message. Now this is defined in the &lt;em&gt;orchestrator&lt;/em&gt; only and the &lt;em&gt;orchestrator&lt;/em&gt; tells the CLI which medium it should use before stating either &lt;code&gt;sse&lt;/code&gt; or &lt;code&gt;lp&lt;/code&gt;.&lt;/p&gt;
&lt;br&gt;
&lt;p&gt;When the CLI runs the &lt;code&gt;test&lt;/code&gt; command, there are three significant sequential events, I&amp;rsquo;ll brush over or omit less significant events to make explaining the flow easier to understand. If you&amp;rsquo;d rather just read the code it&amp;rsquo;s &lt;a href=&#34;https://github.com/purpleteam-labs/purpleteam-orchestrator/blob/15804fe13a294d7b37b5f2758833f562298f5685/src/api/orchestration/models/orchestrate.js#L177&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;here&lt;/a&gt;:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;CLI makes a &lt;code&gt;POST&lt;/code&gt; request&lt;/strong&gt; to the &lt;em&gt;orchestrator&amp;rsquo;s&lt;/em&gt; &lt;code&gt;/test&lt;/code&gt; route with the &lt;em&gt;Job&lt;/em&gt;, and continues to do so according to it&amp;rsquo;s &lt;a href=&#34;#cli_continues_to_retry&#34;&gt;retry schedule&lt;/a&gt;.&lt;br&gt;
The &lt;em&gt;orchestrator&amp;rsquo;s&lt;/em&gt; &lt;code&gt;testTeamAttack&lt;/code&gt; routine is where a lot of the decision making occurs
&lt;ul&gt;
&lt;li&gt;If a &lt;em&gt;Test Run&lt;/em&gt; is already in progress (&lt;code&gt;initTesterResponsesForCli&lt;/code&gt; is defined) and the &lt;em&gt;orchestrator&lt;/em&gt; already has the responses from the requests to the &lt;em&gt;Testers&lt;/em&gt; &lt;code&gt;/init-tester&lt;/code&gt; route (&lt;code&gt;initTesterResponsesForCli&lt;/code&gt; has a length), whether the &lt;em&gt;Testers&lt;/em&gt; were successfully initialised or not, then the &lt;em&gt;Tester&lt;/em&gt; responses along with whether to use &lt;code&gt;sse&lt;/code&gt; or &lt;code&gt;lp&lt;/code&gt; to subscribe to &lt;em&gt;Tester&lt;/em&gt; feedback are returned to the CLI&lt;/li&gt;
&lt;li&gt;If a &lt;em&gt;Test Run&lt;/em&gt; is already in progress (&lt;code&gt;initTesterResponsesForCli&lt;/code&gt; is defined), the &lt;em&gt;orchestrator&lt;/em&gt; causes a client-side time-out because a response from the request to the &lt;em&gt;Testers&lt;/em&gt; &lt;code&gt;/init-tester&lt;/code&gt; route has not yet been received, and the &lt;em&gt;orchestrator&lt;/em&gt; wants the CLI to try again once it times out&lt;/li&gt;
&lt;li&gt;If execution gets past the above then a &lt;em&gt;Test Run&lt;/em&gt; is not currently in progress, so the &lt;em&gt;orchestrator&lt;/em&gt;:
&lt;ol&gt;
&lt;li&gt;Sets a in-progress flag&lt;/li&gt;
&lt;li&gt;Asks it&amp;rsquo;s &lt;em&gt;Tester&lt;/em&gt; models to initialise their &lt;em&gt;Testers&lt;/em&gt; and wait for the responses&lt;/li&gt;
&lt;li&gt;Once all of the responses are received, the &lt;em&gt;orchestrator&lt;/em&gt; populates a &lt;code&gt;failedTesterInitialisations&lt;/code&gt; array with any &lt;code&gt;Tester failure:&lt;/code&gt;&amp;hellip; messages&lt;/li&gt;
&lt;li&gt;The &lt;em&gt;orchestrator&lt;/em&gt; creates a &lt;code&gt;startTesters&lt;/code&gt; boolean and assigns it true if every active &lt;em&gt;Tester&lt;/em&gt; has it&amp;rsquo;s state set to &lt;code&gt;Tester initialised.&lt;/code&gt;&amp;hellip; (not &lt;code&gt;Awaiting Job.&lt;/code&gt;, &lt;code&gt;Initialising Tester.&lt;/code&gt;, or &lt;code&gt;[App|Tls] tests are running.&lt;/code&gt;), otherwise false is assigned&lt;/li&gt;
&lt;li&gt;If there were any &lt;code&gt;failedTesterInitialisations&lt;/code&gt; or &lt;code&gt;startTesters&lt;/code&gt; is false:
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;initTesterResponsesForCli&lt;/code&gt; is populated with the responses from trying to initialise the &lt;em&gt;Testers&lt;/em&gt; (both successful and/or unsuccessful)&lt;/li&gt;
&lt;li&gt;A response is returned to the CLI with &lt;code&gt;initTesterResponsesForCli&lt;/code&gt; and whether the &lt;em&gt;orchestrator&lt;/em&gt; expects the CLI to use &lt;code&gt;sse&lt;/code&gt; or &lt;code&gt;lp&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;Otherwise:
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;The &lt;em&gt;orchestrator&lt;/em&gt; invokes each &lt;em&gt;Testers&lt;/em&gt; &lt;code&gt;/start-tester&lt;/code&gt; route&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If we are running in &lt;code&gt;cloud&lt;/code&gt; the &lt;em&gt;orchestrator&lt;/em&gt; warms up the &lt;em&gt;Test Session&lt;/em&gt; message (Redis) channels and lists, this waits for all &lt;em&gt;Testers&lt;/em&gt; of the represented &lt;em&gt;Test Sessions&lt;/em&gt; to provide their first message set. These message sets are assigned to an array called &lt;code&gt;warmUpTestSessionMessageSets&lt;/code&gt; which looks like the following before being populated with messages:&lt;br&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;[
  {
    &lt;span style=&#34;color:#a6e22e&#34;&gt;channelName&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;app-lowPrivUser&amp;#39;&lt;/span&gt;,
    &lt;span style=&#34;color:#a6e22e&#34;&gt;testerMessageSet&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; []
  }, {
    &lt;span style=&#34;color:#a6e22e&#34;&gt;channelName&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;app-adminUser&amp;#39;&lt;/span&gt;,
    &lt;span style=&#34;color:#a6e22e&#34;&gt;testerMessageSet&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; []
  }, {
    &lt;span style=&#34;color:#a6e22e&#34;&gt;channelName&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;tls-NA&amp;#39;&lt;/span&gt;,
    &lt;span style=&#34;color:#a6e22e&#34;&gt;testerMessageSet&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; []
  }
]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt;
&lt;p&gt;If &lt;em&gt;Testers&lt;/em&gt; are started and the &lt;em&gt;orchestrator&lt;/em&gt; did not subscribe to the &lt;em&gt;Test Session&lt;/em&gt; message channels, it would never know when the &lt;em&gt;Test Sessions&lt;/em&gt; are finished in order to clean-up, so this subscription must occur&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;initTesterResponsesForCli&lt;/code&gt; is populated with the responses from trying to initialise the &lt;em&gt;Testers&lt;/em&gt; (only successful)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A response is returned to the CLI with &lt;code&gt;initTesterResponsesForCli&lt;/code&gt; and whether the &lt;em&gt;orchestrator&lt;/em&gt; expects the CLI to use &lt;code&gt;sse&lt;/code&gt; or &lt;code&gt;lp&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;CLI makes a &lt;code&gt;GET&lt;/code&gt; request&lt;/strong&gt; to either of the following (currently this happens whether all &lt;em&gt;Testers&lt;/em&gt; were initialised successfully or not, there is no point in this happening if there were any &lt;code&gt;Tester failure:&lt;/code&gt; messages returned from any &lt;em&gt;Testers&lt;/em&gt;, we will change this soon):
&lt;ul&gt;
&lt;li&gt;If using &lt;code&gt;sse&lt;/code&gt;?   &lt;code&gt;/tester-feedback/{testerName}/{sessionId}&lt;/code&gt;:&lt;br&gt;
In this case messages from the &lt;em&gt;Test Sessions&lt;/em&gt; continue to flow through the Redis channels and the &lt;em&gt;orchestrator&lt;/em&gt; continues to push them to the CLI&lt;/li&gt;
&lt;li&gt;If using &lt;code&gt;lp&lt;/code&gt;?   &lt;code&gt;/poll-tester-feedback/{testerName}/{sessionId}&lt;/code&gt;:&lt;br&gt;
In this case the CLI starts the long-poll process, the &lt;em&gt;orchestrator&lt;/em&gt; checks to see if &lt;code&gt;warmUpTestSessionMessageSets&lt;/code&gt; contains an element for the given channel name (BTW: channel names are constructed like: &lt;code&gt;${testerName}-${sessionId&lt;/code&gt;) (this will only happen in the &lt;code&gt;cloud&lt;/code&gt; environment), if so it is &lt;code&gt;splice&lt;/code&gt;d out and returned, if not the &lt;code&gt;pollTesterMessages&lt;/code&gt; of the &lt;code&gt;testerWatcher&lt;/code&gt; is invoked. &lt;code&gt;pollTesterMessages&lt;/code&gt; is responsible for providing a callback to each Redis channel which when invoked takes the given message from a &lt;em&gt;Testers&lt;/em&gt; &lt;em&gt;Test Session&lt;/em&gt; and pushes it on to the tail of a Redis list with the same name as the Redis channel that the message was received from. Each time the CLI requests a message set for a given &lt;em&gt;Test Session&lt;/em&gt;, if no messages are yet available it waits (on Redis &lt;code&gt;blpop&lt;/code&gt; (blocking head pop)), if messages are available, they are popped (Redis &lt;code&gt;lpop&lt;/code&gt; (non blocking head pop)) from the head of the Redis list&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;CLI makes a &lt;code&gt;GET&lt;/code&gt; request&lt;/strong&gt; to the &lt;code&gt;/outcomes&lt;/code&gt; route
&lt;ul&gt;
&lt;li&gt;This happens once the CLI receives a message starting with &lt;code&gt;All Test Sessions of all Testers are finished&lt;/code&gt;. By the time this has happens, the &lt;em&gt;orchestrator&lt;/em&gt; has already cleaned up the &lt;em&gt;Testers&lt;/em&gt; and created the &lt;em&gt;Outcomes&lt;/em&gt; archive based on the results and reports generated by the &lt;em&gt;Testers&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;tls-tester-implementation&#34;&gt;TLS Tester Implementation&lt;/h1&gt;
&lt;p&gt;Unlike the App &lt;em&gt;Tester&lt;/em&gt; (&lt;a href=&#34;https://github.com/purpleteam-labs/purpleteam-app-scanner&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;app-scanner&lt;/a&gt;) which supervises an external &lt;em&gt;Emissary&lt;/em&gt; (Zaproxy), the TLS &lt;em&gt;Tester&lt;/em&gt; (&lt;a href=&#34;https://github.com/purpleteam-labs/purpleteam-tls-scanner&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;tls-scanner&lt;/a&gt;) supervises an embedded &lt;em&gt;Emissary&lt;/em&gt; (testssl.sh). This means that the TLS &lt;em&gt;Emissary&lt;/em&gt; runs within the same container as the TLS &lt;em&gt;Tester&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;The &lt;a href=&#34;https://purpleteam-labs.com/doc/job-file/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;em&gt;Job&lt;/em&gt;&lt;/a&gt; file which the &lt;a href=&#34;https://purpleteam-labs.com/doc/definitions/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;em&gt;Build User&lt;/em&gt;&lt;/a&gt; provides to the &lt;a href=&#34;https://github.com/purpleteam-labs/purpleteam&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CLI&lt;/a&gt; contains everything required to get the TLS &lt;em&gt;Emissary&lt;/em&gt; running and targeting your website or web API.&lt;/p&gt;
&lt;p&gt;The implementation of the TLS &lt;em&gt;Tester&lt;/em&gt; was actually the easy part of this release. An additional stage one container image was required for &lt;code&gt;local&lt;/code&gt; and also in the Terraform configuration for &lt;code&gt;cloud&lt;/code&gt; in the form of AWS ECS Task Definition modification. The AWS ECR deployment script needed adding to.&lt;/p&gt;
&lt;p&gt;The new TLS &lt;em&gt;Tester&lt;/em&gt; isn&amp;rsquo;t that different from the App &lt;em&gt;Tester&lt;/em&gt; other than it is a lot simpler because we don&amp;rsquo;t have to bring up stage two containers, and all the potential synchronisation issues around external &lt;em&gt;Emissaries&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;The execution flow goes from the &lt;code&gt;/init-tester&lt;/code&gt; and &lt;code&gt;/start-tester&lt;/code&gt; &lt;a href=&#34;https://github.com/purpleteam-labs/purpleteam-tls-scanner/blob/main/src/api/tls/routes/post.js&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;routes&lt;/a&gt; to the &lt;a href=&#34;https://github.com/purpleteam-labs/purpleteam-tls-scanner/blob/main/src/api/tls/models/tls.js&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;model&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;/init-tester&lt;/code&gt; basically sets the &lt;em&gt;Tester&lt;/em&gt; up with the &lt;em&gt;Build User&lt;/em&gt; supplied &lt;em&gt;Job&lt;/em&gt; and sets the &lt;code&gt;status&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;/start-tester&lt;/code&gt; &lt;a href=&#34;https://github.com/purpleteam-labs/purpleteam-tls-scanner/blob/7b2d453c63f6a280132b45d2db9a546bf6fc0d19/src/api/tls/models/tls.js#L74&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;starts (&lt;code&gt;spawn&lt;/code&gt;s)&lt;/a&gt; the &lt;a href=&#34;https://github.com/purpleteam-labs/purpleteam-tls-scanner/blob/main/src/scripts/runCuc.js#L71&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Cucumber CLI&lt;/a&gt;,
which initialises the &lt;a href=&#34;https://github.com/purpleteam-labs/purpleteam-tls-scanner/blob/main/src/steps/world.js&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Cucumber world&lt;/a&gt; which is where most of the domain specific parts are glued together, and the actual Cucumber Steps (tests) are run.&lt;/p&gt;
&lt;p&gt;The following are added to the Cucumber &lt;code&gt;world&lt;/code&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The &lt;code&gt;messagePublisher&lt;/code&gt; (pushes messages onto Redis &lt;code&gt;${testerName}-${sessionId&lt;/code&gt; channels)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sut&lt;/code&gt; (System Under Test) domain object&lt;/li&gt;
&lt;li&gt;&lt;code&gt;testssl&lt;/code&gt; domain object&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The &lt;a href=&#34;https://github.com/purpleteam-labs/purpleteam-tls-scanner/blob/7b2d453c63f6a280132b45d2db9a546bf6fc0d19/src/steps/tls_scan_steps.js#L78&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;testssl.sh process is &lt;code&gt;spawn&lt;/code&gt;ed&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;When ever the TLS &lt;em&gt;Emissary&lt;/em&gt; writes to &lt;code&gt;stdout&lt;/code&gt; the &lt;em&gt;Tester&lt;/em&gt; deals with it &lt;a href=&#34;https://github.com/purpleteam-labs/purpleteam-tls-scanner/blob/7b2d453c63f6a280132b45d2db9a546bf6fc0d19/src/steps/tls_scan_steps.js#L80&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>PurpleTeam</title>
      <link>https://binarymist.io/project/external-project-purpleteam/</link>
      <pubDate>Sat, 12 Jun 2021 00:00:00 +0000</pubDate>
      <guid>https://binarymist.io/project/external-project-purpleteam/</guid>
      <description></description>
    </item>
    
    <item>
      <title>PurpleTeam at Alpha</title>
      <link>https://binarymist.io/blog/2021/02/17/purpleteam-at-alpha/</link>
      <pubDate>Wed, 17 Feb 2021 17:17:11 +1300</pubDate>
      <guid>https://binarymist.io/blog/2021/02/17/purpleteam-at-alpha/</guid>
      <description>&lt;p&gt;PurpleTeam alpha (both &lt;code&gt;local&lt;/code&gt; and &lt;code&gt;cloud&lt;/code&gt; environments) have been released, after several years of hard work, mostly on top of a day job.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://purpleteam-labs.com&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;













&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;
        &lt;img alt=&#34;purpleteam&#34;
           src=&#34;https://binarymist.io/media/headers/PurpleTeam_landscape_rev.svg&#34;
           loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This is a very condensed run-down of the process of taking PurpleTeam (a web security regression testing SaaS and CLI) from Proof of Concept (PoC) to Alpha release.&lt;/p&gt;
&lt;h1 id=&#34;poc&#34;&gt;PoC&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;Q&lt;/strong&gt;: What were my intentions with creating the original &lt;a href=&#34;https://github.com/OWASP/NodeGoat/blob/e2dffdb8c7e988c10bacdccba14d6f0d352c5090/test/security/profile-test.js&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Proof of Concept&lt;/a&gt; (PoC), what was I trying to achieve?&lt;br&gt;
&lt;strong&gt;A&lt;/strong&gt;: Elicit Developer feedback, Find out what Developers and their Teams really needed for just in time security regression testing of their web applications and APIs. How to get this process (dynamic security testing) as close as possible to the coding of their applications and APIs&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Q&lt;/strong&gt;: What did I do with the PoC?&lt;br&gt;
&lt;strong&gt;A&lt;/strong&gt;: Took it around the world speaking and running workshops with Developers and their Teams. That&amp;rsquo;s right, getting this process as close as possible to Developers and their Teams&lt;/p&gt;
&lt;p&gt;To name a few such events:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://binarymist.io/event/chcjs-meetup-2016-workshop-security-regression-testing-with-zapapi-and-nodegoat/&#34;&gt;CHCH.js Meetup&lt;/a&gt; 2016&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://binarymist.io/event/owaspchch-meetup-2016-workshop-security-regression-testing-with-zapapi-and-nodegoat/&#34;&gt;OWASP Chch Meetup&lt;/a&gt; 2016&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://binarymist.io/event/owaspny-meetup-2016-workshop-security-regression-testing-with-zapapi-and-nodegoat/&#34;&gt;OWASP NYC Meetup&lt;/a&gt; 2016&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://binarymist.io/event/nodeconfeu-2016-workshop-security-regression-testing-with-zapapi-and-nodegoat/&#34;&gt;NodeConf EU&lt;/a&gt; 2016&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://binarymist.io/event/nodejs-meetup-2016-workshop-security-regression-testing-with-zapapi-and-nodegoat/&#34;&gt;NodeJS Meetup Auckland&lt;/a&gt; 2016&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://binarymist.io/event/aws-meetup-2016-workshop-security-regression-testing-with-zapapi-and-nodegoat/&#34;&gt;AWS Meetup Auckland&lt;/a&gt; 2016&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://binarymist.io/event/owaspnzday-2019-talk-security-regression-testing-on-owasp-zap-node-api/&#34;&gt;OWASP NZ Day Auckland&lt;/a&gt; 2019&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;There are many Static Analyse Security Testing (SAST) tools available. As Developers we need both static and dynamic application security testing.&lt;/p&gt;
&lt;p&gt;The Proof of Concept I created several years ago was to work out exactly what Developers and their Teams needed in terms of
Dynamic Application Security Testing (DAST) capabilities to compliment the many Static Application Security Testing (SAST) tools already available
and able to be plugged into or consumed by your CI/build pipelines.&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;ve written extensively in the past on SAST offerings, for example the Web Applications chapter of my 2nd book &lt;a href=&#34;https://holisticinfosecforwebdevelopers.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Holistic Info-Sec for Web Developers&lt;/a&gt; covers:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The &lt;a href=&#34;https://f1.holisticinfosecforwebdevelopers.com/chap06.html#web-applications-identify-risks-consuming-free-and-open-source&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;perils of consuming free and open source libraries&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://f1.holisticinfosecforwebdevelopers.com/chap06.html#web-applications-countermeasures-consuming-free-and-open-source&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Countermeasures&lt;/a&gt; to the above perils&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://f1.holisticinfosecforwebdevelopers.com/chap06.html#web-applications-countermeasures-consuming-free-and-open-source-tooling&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Tooling options&lt;/a&gt; for SAST&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;journey&#34;&gt;Journey&lt;/h1&gt;
&lt;p&gt;If you&amp;rsquo;re a Developer creating internet facing applications, you know security is something you need to be thinking about right?
As Developers we all need as much automated help with improving our AppSec as possible.
As we&amp;rsquo;re creating it, no blockers, just enablers.&lt;/p&gt;
&lt;!-- .......... following is from owasp project page ................ --&gt;
&lt;p&gt;Many organisations spend many thousands of dollars on security defect remediation of the software projects they create. Usually this effort is also performed late in the development life-cycle, often even after the code is considered done. This fact makes the remediation effort &lt;a href=&#34;https://f0.holisticinfosecforwebdevelopers.com/chap06.html#leanpub-auto-cheapest-place-to-deal-with-defects&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;very costly&lt;/a&gt; and often too short. Because of this there are many bugs left in the software that get deployed to production.&lt;/p&gt;
&lt;br&gt;
&lt;script async class=&#34;speakerdeck-embed&#34; data-slide=&#34;48&#34; data-id=&#34;8ca6ad5eb9c34ba9873158026d9cfc6a&#34; data-ratio=&#34;1.37081659973226&#34; src=&#34;//speakerdeck.com/assets/embed.js&#34;&gt;&lt;/script&gt;
&lt;br&gt;
&lt;p&gt;PurpleTeam strikes at the very heart of this problem. PurpleTeam is a CLI and back-end/API (SaaS). The CLI can be run manually, but it&amp;rsquo;s sweet spot is being inserted into Development Team&amp;rsquo;s &lt;a href=&#34;https://github.com/purpleteam-labs/purpleteam#npm-install-locally&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;build pipelines&lt;/a&gt;, where it can find the security defects in your running web applications and APIs, and provide immediate and continuous notification of what and where your security defects are, along with tips on how to fix them.&lt;/p&gt;
&lt;br&gt;
&lt;script async class=&#34;speakerdeck-embed&#34; data-slide=&#34;49&#34; data-id=&#34;8ca6ad5eb9c34ba9873158026d9cfc6a&#34; data-ratio=&#34;1.37081659973226&#34; src=&#34;//speakerdeck.com/assets/embed.js&#34;&gt;&lt;/script&gt;
&lt;br&gt;
&lt;p&gt;The PurpleTeam back-end runs smart dynamic application security testing against your web applications or APIs. The purpleteam CLI drives the PurpleTeam back-end.&lt;/p&gt;
&lt;!-- end....... following is from owasp project page ................ --&gt;
&lt;br&gt;
&lt;script async class=&#34;speakerdeck-embed&#34; data-slide=&#34;18&#34; data-id=&#34;8ca6ad5eb9c34ba9873158026d9cfc6a&#34; data-ratio=&#34;1.37081659973226&#34; src=&#34;//speakerdeck.com/assets/embed.js&#34;&gt;&lt;/script&gt;
&lt;br&gt;
&lt;p&gt;I have also created the ability to add testers, There is currently a &lt;a href=&#34;https://github.com/purpleteam-labs/purpleteam-tls-checker&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;TLS checker&lt;/a&gt; and &lt;a href=&#34;https://github.com/purpleteam-labs/purpleteam-server-scanner&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;server scanner&lt;/a&gt; stubbed out and ready to be implemented. Feel free to dive in and start implementing.&lt;/p&gt;
&lt;br&gt;
&lt;script async class=&#34;speakerdeck-embed&#34; data-slide=&#34;58&#34; data-id=&#34;8ca6ad5eb9c34ba9873158026d9cfc6a&#34; data-ratio=&#34;1.37081659973226&#34; src=&#34;//speakerdeck.com/assets/embed.js&#34;&gt;&lt;/script&gt;
&lt;br&gt;
&lt;p&gt;If there is a tester that you need that PurpleTeam doesn&amp;rsquo;t have, you can now create it.&lt;/p&gt;
&lt;h1 id=&#34;environments&#34;&gt;Environments&lt;/h1&gt;
&lt;h2 id=&#34;local&#34;&gt;&lt;code&gt;local&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;The &lt;code&gt;local&lt;/code&gt; environment is &lt;a href=&#34;https://github.com/purpleteam-labs&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;free and open source&lt;/a&gt;. It is also now an &lt;a href=&#34;https://owasp.org/www-project-purpleteam/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;OWASP project&lt;/a&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;There&amp;rsquo;s quite a bit of set-up to do&lt;/li&gt;
&lt;li&gt;You need to set-up all the micro-services&lt;/li&gt;
&lt;li&gt;All the set-up should be documented &lt;a href=&#34;https://doc.purpleteam-labs.com/local/local-setup.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;here&lt;/a&gt;. Documentation &lt;a href=&#34;https://github.com/purpleteam-labs/purpleteam/issues/37&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;will be moving&lt;/a&gt; to a proper doc site soon.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You will need to set-up the following:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/purpleteam-labs/purpleteam-lambda&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Lambda functions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/purpleteam-labs/purpleteam-s2-containers&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Stage 2 containers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/purpleteam-labs/purpleteam-orchestrator&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Orchestrator&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Testers (only &lt;a href=&#34;https://github.com/purpleteam-labs/purpleteam-app-scanner&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;app&lt;/a&gt; currently)&lt;/li&gt;
&lt;li&gt;Get the &lt;a href=&#34;https://github.com/purpleteam-labs/purpleteam&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;purpleteam CLI&lt;/a&gt; on your system&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/purpleteam-labs/purpleteam/blob/3f2c97a14c617181a4bf71669a95540b99812e2d/README.md#install&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Install&lt;/a&gt; it, the options are:
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/purpleteam-labs/purpleteam/blob/3f2c97a14c617181a4bf71669a95540b99812e2d/README.md#clone-the-git-repository&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Clone the repository&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/purpleteam-labs/purpleteam/blob/3f2c97a14c617181a4bf71669a95540b99812e2d/README.md#npm-install-locally&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Local NPM install&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/purpleteam-labs/purpleteam/blob/3f2c97a14c617181a4bf71669a95540b99812e2d/README.md#npm-install-globally&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Global NPM install&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/purpleteam-labs/purpleteam/blob/3f2c97a14c617181a4bf71669a95540b99812e2d/README.md#configure&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Configure it&lt;/a&gt; and create your &lt;a href=&#34;https://doc.purpleteam-labs.com/definitions.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;em&gt;Job&lt;/em&gt;&lt;/a&gt; file&lt;/li&gt;
&lt;li&gt;Run your System under Test (SUT). we use &lt;a href=&#34;https://github.com/purpleteam-labs/purpleteam-iac-sut&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;purpleteam-iac-sut&lt;/a&gt; to build/deploy our cloud SUTs&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/purpleteam-labs/purpleteam/blob/3f2c97a14c617181a4bf71669a95540b99812e2d/README.md#run&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Run&lt;/a&gt; the purpleteam CLI&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;cloud&#34;&gt;&lt;code&gt;cloud&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;The &lt;code&gt;cloud&lt;/code&gt; environment costs because PurpleTeam-Labs have to maintain the infrastructure that the SaaS runs on, but is the easiest and quickest to get going.&lt;/p&gt;
&lt;p&gt;All infrastructure set-up is done for you. You just need to set-up the following:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Get the purpleteam CLI on your system (same as step 5.1 of &lt;code&gt;local&lt;/code&gt;). Configure the CLI and create your Job file (similar to step 5.2 of &lt;code&gt;local&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;Run your SUT (same as step 6 of &lt;code&gt;local&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;Run the purpleteam CLI (same as step 7 of &lt;code&gt;local&lt;/code&gt;)&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;architecture-and-tech&#34;&gt;Architecture and Tech&lt;/h1&gt;
&lt;h2 id=&#34;local-1&#34;&gt;&lt;code&gt;local&lt;/code&gt;&lt;/h2&gt;
&lt;!-- .......... following is from owasp project page ................ --&gt;
&lt;p&gt;Redis pub/sub is used to transfer &lt;em&gt;Tester&lt;/em&gt; messages (live update data) from the &lt;a href=&#34;https://doc.purpleteam-labs.com/definitions.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;em&gt;Tester&lt;/em&gt;&lt;/a&gt; micro-services to the &lt;a href=&#34;https://github.com/purpleteam-labs/purpleteam-orchestrator&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Orchestrator&lt;/a&gt;.
The &lt;a href=&#34;https://doc.purpleteam-labs.com/definitions.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;em&gt;Build User&lt;/em&gt;&lt;/a&gt; can configure the &lt;a href=&#34;https://github.com/purpleteam-labs/purpleteam&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;purpleteam CLI&lt;/a&gt; to receive these messages via Server Sent Events (SSE) or Long Polling (LP). The Orchestrator also needs to be configured to use either SSE or LP.
With Long Polling (LP) if the CLI goes off-line at some point during the &lt;em&gt;Test Run&lt;/em&gt; and then comes back on-line, no messages will be lost due to the fact that the Orchestrator persists the messages it&amp;rsquo;s subscribed to back to Redis lists, then pops them off the given lists as a LP request comes in and returns them to the CLI. LP is request-&amp;gt;response, SSE is one way. In saying that, LP can be quite efficient as we are able to batch messages into arrays to be returned.&lt;/p&gt;














&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;
        &lt;img alt=&#34;local architecture&#34; srcset=&#34;
               /media/post/2021/purpleteam_local_2021-01_720w_hucfd65cea1480a6a25157b97b5ad9aa7c_37485_5605e3a82d8ba95fa5762bb48d2ce1e3.png 400w,
               /media/post/2021/purpleteam_local_2021-01_720w_hucfd65cea1480a6a25157b97b5ad9aa7c_37485_6f5f2d43dfb5cdec618bc028f8e5aa0d.png 760w,
               /media/post/2021/purpleteam_local_2021-01_720w_hucfd65cea1480a6a25157b97b5ad9aa7c_37485_1200x1200_fit_lanczos_2.png 1200w&#34;
               src=&#34;https://binarymist.io/media/post/2021/purpleteam_local_2021-01_720w_hucfd65cea1480a6a25157b97b5ad9aa7c_37485_5605e3a82d8ba95fa5762bb48d2ce1e3.png&#34;
               width=&#34;720&#34;
               height=&#34;371&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;h3 id=&#34;orchestrator&#34;&gt;Orchestrator&lt;/h3&gt;
&lt;p&gt;The Orchestrator is responsible for:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Organising and supervising the Testers&lt;/li&gt;
&lt;li&gt;Sending real-time Tester messages to the CLI via either SSE or LP&lt;/li&gt;
&lt;li&gt;Packaging and sending the outcomes (test reports, test results) back to the CLI as they become available&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://f1.holisticinfosecforwebdevelopers.com/chap06.html#web-applications-countermeasures-lack-of-input-validation-filtering-and-sanitisation&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Validating, filtering and sanitising&lt;/a&gt; the &lt;em&gt;Build User&lt;/em&gt;&amp;rsquo;s input&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;testers&#34;&gt;Testers&lt;/h3&gt;
&lt;p&gt;Each Tester is responsible for:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Obtaining resources, cleaning up and releasing resources once the &lt;em&gt;Test Run&lt;/em&gt; is finished&lt;/li&gt;
&lt;li&gt;Starting and Stopping &lt;a href=&#34;https://github.com/purpleteam-labs/purpleteam-s2-containers&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Stage Two Containers&lt;/a&gt; (hosted on docker-compose-ui) dynamically (via &lt;a href=&#34;https://github.com/purpleteam-labs/purpleteam-lambda&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Lambda Functions&lt;/a&gt; hosted locally via sam cli) based on the number of Test Sessions provided by the Build User in the &lt;a href=&#34;https://doc.purpleteam-labs.com/definitions.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;em&gt;Job&lt;/em&gt;&lt;/a&gt; file which is sent from the CLI to the Orchestrator, then disseminated to the Testers. The following shows two &lt;em&gt;Test Sessions&lt;/em&gt; from a test resource &lt;a href=&#34;https://github.com/purpleteam-labs/purpleteam/blob/3f2c97a14c617181a4bf71669a95540b99812e2d/testResources/jobs/job_0.1.0-alpha.1_local&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;em&gt;Job&lt;/em&gt;&lt;/a&gt; that we use:
&lt;br&gt;&lt;br&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;...
&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;included&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; [
{
  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;type&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;testSession&amp;#34;&lt;/span&gt;,
  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;id&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;lowPrivUser&amp;#34;&lt;/span&gt;,
  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;attributes&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; {
    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;username&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;user1&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;password&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;User1_123&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;aScannerAttackStrength&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;HIGH&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;aScannerAlertThreshold&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;LOW&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;alertThreshold&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt;
  },
  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;relationships&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; {
    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;data&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; [{
      &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;type&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;route&amp;#34;&lt;/span&gt;,
      &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;id&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/profile&amp;#34;&lt;/span&gt;
    }]
  }
},
{
  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;type&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;testSession&amp;#34;&lt;/span&gt;,
  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;id&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;adminUser&amp;#34;&lt;/span&gt;,
  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;attributes&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; {
    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;username&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;admin&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;password&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Admin_123&amp;#34;&lt;/span&gt;
  },
  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;relationships&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; {
    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;data&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; [{
      &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;type&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;route&amp;#34;&lt;/span&gt;,
      &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;id&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/memos&amp;#34;&lt;/span&gt;
    },
    {
      &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;type&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;route&amp;#34;&lt;/span&gt;,
      &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;id&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/profile&amp;#34;&lt;/span&gt;
    }]
  }
},
...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;The actual (app, server, tls, etc) &lt;a href=&#34;https://github.com/purpleteam-labs/purpleteam-app-scanner/blob/e62601b76212f9bde866164fe6f4ad687fb5b458/src/features/app_scan.feature&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;test plan&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;sam-cli&#34;&gt;Sam Cli&lt;/h3&gt;
&lt;p&gt;Sam Cli stays running and listening for the &lt;em&gt;Tester&lt;/em&gt; requests to run the lambda functions which start and stop the Stage Two Containers.&lt;/p&gt;
&lt;h3 id=&#34;docker-compose-ui&#34;&gt;docker-compose-ui&lt;/h3&gt;
&lt;p&gt;In &lt;code&gt;local&lt;/code&gt; docker-compose-ui is required to be running in order to start/stop it&amp;rsquo;s hosted (Stage Two) containers (it has access to the hosts Docker socket).&lt;/p&gt;
&lt;!-- end....... following is from owasp project page ................ --&gt;
&lt;h2 id=&#34;cloud-1&#34;&gt;&lt;code&gt;cloud&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;The &lt;code&gt;cloud&lt;/code&gt; environment is similar in terms of functionality, a good number of components are quite different though.&lt;/p&gt;
&lt;p&gt;For the &lt;em&gt;Tester&lt;/em&gt; messages only Long Polling (LP) is available due to streaming APIs not being supported by AWS API Gateway. We could have used API Gateway WebSockets for bi-directional comms, but that doesn&amp;rsquo;t support OAuth client-credentials flow, which I had already completed.&lt;/p&gt;
&lt;p&gt;When the CLI makes a request to the back-end (directly to the Orchestrator in &lt;code&gt;local&lt;/code&gt;, but AWS API Gateway in &lt;code&gt;cloud&lt;/code&gt;), first that request is intercepted and a request to the PurpleTeam auth domain is made with: &lt;code&gt;grant_type&lt;/code&gt;, &lt;code&gt;client_id&lt;/code&gt; of the user pool app client, &lt;code&gt;scope&lt;/code&gt;s, &lt;code&gt;client_secret&lt;/code&gt;. Cognito Authorisation server returns an &lt;code&gt;access_token&lt;/code&gt; if all good. The CLI then makes requests with the &lt;code&gt;access_token&lt;/code&gt; to the resource server which in our case is the API Gateway. The resource server/API Gateway validates the &lt;code&gt;access_token&lt;/code&gt; with the User pool. If all good, the original request is allowed to continue on it&amp;rsquo;s way.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Testers&lt;/em&gt; run their lambdas, lambdas tell ECS to spin up and tear down n (where n is the number of &lt;i&gt;Test Session&lt;/i&gt;s) stage 2 containers. I originally used AWS ALB but that didn&amp;rsquo;t support our authentication requirements, so I had to back out and swap it for API Gateway and NLB.&lt;/p&gt;














&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;
        &lt;img alt=&#34;cloud architecture&#34; srcset=&#34;
               /media/post/2021/purpleteam_cloud_2021-01_720w_hu83a716143dd8f79317fec22591f5c2f8_43644_f54df717d7feaa38c5c21a9bdf72f347.png 400w,
               /media/post/2021/purpleteam_cloud_2021-01_720w_hu83a716143dd8f79317fec22591f5c2f8_43644_976493ddd09fb9ce1043500f1bff7bda.png 760w,
               /media/post/2021/purpleteam_cloud_2021-01_720w_hu83a716143dd8f79317fec22591f5c2f8_43644_1200x1200_fit_lanczos_2.png 1200w&#34;
               src=&#34;https://binarymist.io/media/post/2021/purpleteam_cloud_2021-01_720w_hu83a716143dd8f79317fec22591f5c2f8_43644_f54df717d7feaa38c5c21a9bdf72f347.png&#34;
               width=&#34;720&#34;
               height=&#34;371&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;h1 id=&#34;pressures&#34;&gt;Pressures&lt;/h1&gt;
&lt;h2 id=&#34;keeping-nodejs-dedendencies-up-to-date&#34;&gt;Keeping NodeJS Dedendencies up to date&lt;/h2&gt;
&lt;p&gt;The never ending battle of staying on top of a constantly moving NodeJS ecosystem. Never ending security and feature updates.
&lt;a href=&#34;https://github.com/purpleteam-labs/purpleteam/issues/29&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;This issue&lt;/a&gt; has a check list of our last major updates after we finished the IaC for the &lt;code&gt;cloud&lt;/code&gt; environment.&lt;/p&gt;
&lt;h2 id=&#34;forkingadopting-libraries&#34;&gt;Forking/adopting libraries&lt;/h2&gt;
&lt;p&gt;Then there is the forking and/or rewriting of libraries when authors lose interest, no longer maintain or just no longer have the bandwidth.
This must be expected and planned for when consuming free and open source libraries.
Yes it&amp;rsquo;s great to have the head start of being able to just use someone else&amp;rsquo;s code, but nothing is really free, everything ultimately costs.
Just realise that if you are consuming free and open source libraries in your project,
then at some stage you are going to have to dive into their code and either help out, or ultimately end up forking or rewriting.&lt;/p&gt;
&lt;p&gt;Following are some of the libraries we have forked, ported and/or rewritten:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/binarymist/mocksse&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;mocksse&lt;/a&gt; was a rewrite/port of MockEvent. We use this library for mocking Server Sent Events (SSE)&lt;/li&gt;
&lt;li&gt;Cucumber &lt;a href=&#34;https://gitlab.com/purpleteam-labs/purpleteam-app-scanner/-/blob/9be05624afc9a92ebe89da9cc82e16dd856c562d/src/scripts/cucumber-redacted.js&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;functionality&lt;/a&gt; that was &lt;a href=&#34;https://github.com/cucumber/cucumber-js/issues/1489&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;removed&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/francescou/docker-compose-ui&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;docker-compose-ui&lt;/a&gt; has been archived. This means we will have to either fork, rewrite, research to see if we can use something else.
This isn&amp;rsquo;t currently urgent&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;competitors&#34;&gt;Competitors&lt;/h2&gt;
&lt;p&gt;When I started developing PurpleTeam, as part of the business plan creation I needed to list my competitors. There was really only one. Now that competitor has mostly gone away and we have several new ones.&lt;/p&gt;
&lt;p&gt;Just to be clear, when I say competitor, I&amp;rsquo;m talking about Dynamic Application Security Tools for the web that can be used natively in any build pipeline.&lt;/p&gt;
&lt;p&gt;Our current competitors are doing things differently to us, with different offerings. We think PurpleTeam has unique aspects that make it stand out from the rest.&lt;/p&gt;
&lt;h1 id=&#34;next-steps&#34;&gt;Next Steps&lt;/h1&gt;
&lt;p&gt;PurpleTeam &lt;code&gt;local&lt;/code&gt; is now an &lt;a href=&#34;https://owasp.org/www-project-purpleteam/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;OWASP project&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;consuming-purpleteam&#34;&gt;Consuming PurpleTeam&lt;/h2&gt;
&lt;p&gt;How can you start using PurpleTeam today?&lt;/p&gt;
&lt;p&gt;As discussed in the &lt;a href=&#34;#environments&#34;&gt;Environments&lt;/a&gt; sub section you have a few options&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;local&lt;/code&gt;: set everything up yourself&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cloud&lt;/code&gt;: Sign-up for an account, set-up your test &lt;em&gt;Job&lt;/em&gt;, get the CLI on your system&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You can use the purpleteam CLI manually or consume it within your build pipelines.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Manual examples:
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/purpleteam-labs/purpleteam/tree/3f2c97a14c617181a4bf71669a95540b99812e2d#clone-the-git-repository-option&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;bin/purpleteam via npm script&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/purpleteam-labs/purpleteam/tree/3f2c97a14c617181a4bf71669a95540b99812e2d#run-the-binpurpleteam-file-directly&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;bin/purpleteam directly&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/purpleteam-labs/purpleteam/tree/3f2c97a14c617181a4bf71669a95540b99812e2d#run-the-purpleteam-cli-directly&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;purpleteam CLI directly&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/purpleteam-labs/purpleteam/tree/3f2c97a14c617181a4bf71669a95540b99812e2d#run-your-app&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Within your NodeJS app or build pipeline&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/purpleteam-labs/purpleteam/tree/3f2c97a14c617181a4bf71669a95540b99812e2d#npm-install-globally-option&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Within your non NodeJS app or build pipelines&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;contributing-to-purpleteam&#34;&gt;Contributing to PurpleTeam&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Is PurpleTeam missing something you need that would otherwise allow you to use it?&lt;/li&gt;
&lt;li&gt;Do you need to add a different kind of &lt;a href=&#34;https://doc.purpleteam-labs.com/definitions.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;em&gt;Tester&lt;/em&gt;&lt;/a&gt;?&lt;/li&gt;
&lt;li&gt;Have you found a bug?&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;Ways you can contribute to building &lt;a href=&#34;https://twitter.com/hashtag/owasp?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#owasp&lt;/a&gt; &lt;a href=&#34;https://twitter.com/hashtag/purpleteam?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#purpleteam&lt;/a&gt; &lt;a href=&#34;https://t.co/yxdb9XJaIT&#34;&gt;https://t.co/yxdb9XJaIT&lt;/a&gt;&lt;/p&gt;&amp;mdash; PurpleTeam (@purpleteamlabs) &lt;a href=&#34;https://twitter.com/purpleteamlabs/status/1363257338283622400?ref_src=twsrc%5Etfw&#34;&gt;February 20, 2021&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;

&lt;p&gt;As you can see, there are plenty of avenues that you can contribute to:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/purpleteam-labs/purpleteam/discussions&#34; target=&#34;_blank&#34;&gt;Github Discussions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://owasp.slack.com/messages/project-purpleteam&#34; target=&#34;_blank&#34;&gt;OWASP purpleteam Slack&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/purpleteam-labs/purpleteam/projects/2&#34; target=&#34;_blank&#34;&gt;Project Board&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/purpleteam-labs/purpleteam/issues&#34; target=&#34;_blank&#34;&gt;Submit Issue&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/purpleteam-labs/purpleteam/pulls&#34; target=&#34;_blank&#34;&gt;Submit PR&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/purpleteam-labs/purpleteam/security/policy&#34; target=&#34;_blank&#34;&gt;Reporting Security Issues&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/purpleteam-labs/purpleteam/projects/1&#34; target=&#34;_blank&#34;&gt;Public Roadmap&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/purpleteam-labs/purpleteam/blob/main/CONTRIBUTING.md&#34; target=&#34;_blank&#34;&gt;CONTRIBUTING.md&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;PurpleTeam-Labs also has a submission in with Google Summer of Code for students this year. We&amp;rsquo;ve got plenty to work on, so here&amp;rsquo;s hoping!&lt;/p&gt;
&lt;h2 id=&#34;purpleteam-next-steps&#34;&gt;PurpleTeam Next Steps&lt;/h2&gt;
&lt;p&gt;We will be getting started on a documentation site (not just a &lt;a href=&#34;https://doc.purpleteam-labs.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;hosted doc git repo&lt;/a&gt;) soon. We will also be working on a real website.
If you have a Dev Team that is keen to try PurpleTeam out, reach out to us if you need to.
We are always looking for people to work on the codebase. Even if you&amp;rsquo;re a student, it&amp;rsquo;s a great way to learn about security, by coding it.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Talk - Building PurpleTeam (a Security Regression Testing SaaS) - From PoC to Alpha</title>
      <link>https://binarymist.io/event/appsecnz-2021-talk-building-purpleteam-a-security-regression-testing-saas-from-poc-to-alpha/</link>
      <pubDate>Fri, 12 Feb 2021 14:25:00 +1300</pubDate>
      <guid>https://binarymist.io/event/appsecnz-2021-talk-building-purpleteam-a-security-regression-testing-saas-from-poc-to-alpha/</guid>
      <description>&lt;p&gt;Let me take you on the journey of trials, errors, and lessons learnt from getting a web app/API security regression testing proof of concept (PoC) to the next stage (alpha release).&lt;/p&gt;
&lt;p&gt;In 2019, I gave a &lt;a href=&#34;https://binarymist.io/event/owaspnzday-2019-talk-security-regression-testing-on-owasp-zap-node-api&#34;&gt;talk at OWASP New Zealand Day&lt;/a&gt; on a security regression testing PoC I had developed based on developer feedback. Since then, on top of a normal day job, I’ve been working on this project with every spare minute of time.&lt;/p&gt;

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/0RFmweM7bwM&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;br&gt;
&lt;p&gt;Let’s walk through the:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Architecture: How the micro-services hang together and communicate with each other. Design decisions, including backing out of some and redesigning when I got them wrong&lt;/li&gt;
&lt;li&gt;Environments: &lt;code&gt;local&lt;/code&gt;: you set-up all the purpleteam micro-services on your own machine or within your network. &lt;code&gt;cloud&lt;/code&gt;: all set-up is done for you, just create a job file and run it&lt;/li&gt;
&lt;li&gt;Technologies: Micro-services written in NodeJS. Docker containers. Authentication/authorisation in the &lt;code&gt;cloud&lt;/code&gt;. Lambda functions (&lt;code&gt;local&lt;/code&gt; and &lt;code&gt;cloud&lt;/code&gt;). Redis pub/sub and lists, along with Server Sent Events for messaging. Many AWS services. Terraform and Terragrunt for IaC&lt;/li&gt;
&lt;li&gt;Pressures: The never ending battle of keeping your NodeJS dependencies up to date. Forking/adopting libraries when maintainers disappear. Keeping relationships alive. Keeping yourself alive (eating, sleeping, fitness). Dealing with competitors&lt;/li&gt;
&lt;/ul&gt;
&lt;br&gt;
&lt;script async class=&#34;speakerdeck-embed&#34; data-id=&#34;1784d6fdfc3d4fab8ec5a67156387bf3&#34; data-ratio=&#34;1.37081659973226&#34; src=&#34;//speakerdeck.com/assets/embed.js&#34;&gt;&lt;/script&gt;
&lt;br&gt;
&lt;p&gt;We will then discuss the &lt;a href=&#34;https://binarymist.io/blog/2021/02/17/purpleteam-at-alpha/#next-steps&#34;&gt;next steps&lt;/a&gt; for PurpleTeam, and how you can start using - and contributing to it if it’s missing something you need.&lt;/p&gt;
&lt;br&gt;
</description>
    </item>
    
    <item>
      <title>Hugo with Staticman Commenting and Subscriptions</title>
      <link>https://binarymist.io/blog/2018/02/24/hugo-with-staticman-commenting-and-subscriptions/</link>
      <pubDate>Sat, 24 Feb 2018 00:00:00 +1300</pubDate>
      <guid>https://binarymist.io/blog/2018/02/24/hugo-with-staticman-commenting-and-subscriptions/</guid>
      <description>&lt;p&gt;Continuing on from the &lt;a href=&#34;https://binarymist.io/blog/2018/01/27/binarymist-web-migration/&#34;&gt;last post&lt;/a&gt;, in which we set-up the BinaryMist blog and business site on Hugo, it was now time to provide some functionality for you to be able to:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;#leave-comments-on-posts&#34;&gt;Leave comments on posts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#subscribe-to-comments-on-specific-blog-posts&#34;&gt;Subscribe to comments on specific blog posts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#subscribe-to-notification-by-email-as-new-blog-posts-are-published&#34;&gt;Subscribe to notification by email as new blog posts are published&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Hugo &lt;a href=&#34;https://gohugo.io/content-management/comments/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;uses Disqus&lt;/a&gt; as it&amp;rsquo;s default reader commenting system which is a shame, as &lt;a href=&#34;https://f1.holisticinfosecforwebdevelopers.com/chap06.html#leanpub-auto-alternative-approaches&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Disqus is evil&lt;/a&gt;, but never fear, I&amp;rsquo;ve gone ahead and got a commenting system set-up for the Academic theme that won&amp;rsquo;t abuse you. Your comments are actually hosted from the same place as this website is running from, your email address is md5 hashed, so it&amp;rsquo;s not visible to the public in clear text anywhere. For example, this is the hash of my email address:&lt;br&gt;
&lt;code&gt;01486cfc6aa638a6f8e85142c645fcd7&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&#34;whats-on-offer&#34;&gt;What&amp;rsquo;s on Offer?&lt;/h2&gt;
&lt;p&gt;I reviewed the &lt;a href=&#34;https://gohugo.io/content-management/comments/#comments-alternatives&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;other offerings&lt;/a&gt; promoted by Hugo:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Disqus: As discussed, No thanks!&lt;/li&gt;
&lt;li&gt;Texpen: Their site doesn&amp;rsquo;t respond for me&lt;/li&gt;
&lt;li&gt;IntenseDebate: Closed source (I think). Looks like they want to sign the consumer up, I&amp;rsquo;m guessing this costs money. What ever their deal is, they&amp;rsquo;re not up-front enough about it for me&lt;/li&gt;
&lt;li&gt;GraphComment: Closed source&lt;/li&gt;
&lt;li&gt;Mutt: Closed source, costs money&lt;/li&gt;
&lt;li&gt;isso: Python and open (great), but the consumer has to self host, may not be a show stopper, but we can do better&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This leaves the free and open &lt;a href=&#34;https://staticman.net/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Staticman&lt;/a&gt;. You can see some of the other sites that use Staticman &lt;a href=&#34;https://github.com/eduardoboucas/staticman#sites-using-staticman&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;here&lt;/a&gt;. Staticman ticked all of my boxes, apart from the fact I&amp;rsquo;d like to see some more contributors to the project, but hay, if that is honestly a problem, then I should be contributing, and I guess I am in a small way. In saying that, Worst case scenario, is that the project becomes dormant, and one of the consumers, will need to become a producer, and/or we have to self host it. Big ups to &lt;a href=&#34;https://github.com/eduardoboucas&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;@eduardoboucas&lt;/a&gt; for running this project for free, and in his spare time. It&amp;rsquo;s people like this that make the open source world what it is.&lt;/p&gt;
&lt;h2 id=&#34;staticman-it-is-lets-move-on&#34;&gt;Staticman it is, Let&amp;rsquo;s move on&lt;/h2&gt;
&lt;p&gt;If you subscribe to &lt;a href=&#34;#comments&#34;&gt;comments&lt;/a&gt; on any of the BinaryMist blog posts, your email address will be stored in a mailing list that I control. You can unsubscribe at any time, and I will not spam you. You can also tell me to remove you at any time and I will make sure your request is honoured. If you check the &amp;ldquo;&lt;em&gt;Notify me of new comments on this post&lt;/em&gt;&amp;rdquo; (on this or any other post), your email will go into my private mailing list, and will also only be visible as a hash in a Github pull request. That&amp;rsquo;s right, they look like this (&lt;code&gt;01486cfc6aa638a6f8e85142c645fcd7&lt;/code&gt;) remember? You can also see what these look like &lt;a href=&#34;https://github.com/binarymist/BinaryMistBlog/pulls?q=is%3Apr&amp;#43;is%3Aclosed&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Now that I had decided to go the Staticman route, I needed to consolidate on the documentation, examples, and start to build a picture of how this was going to work.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The Beautifulhugo theme &lt;a href=&#34;https://themes.gohugo.io/beautifulhugo#staticman-support&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;appear(es|ed) to support&lt;/a&gt; Staticman, but there was no relevant config in the &lt;a href=&#34;https://github.com/halogenica/beautifulhugo/blob/ebfb6b87803f906382775ba90efdd9e1ebf31280/exampleSite/config.toml&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;config.toml&lt;/code&gt;&lt;/a&gt; or &lt;a href=&#34;https://github.com/halogenica/beautifulhugo/tree/ebfb6b87803f906382775ba90efdd9e1ebf31280/exampleSite&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;staticman.yml&lt;/code&gt;&lt;/a&gt;. Let me know if I have missed some of their documentation that explains the required config? The &lt;a href=&#34;https://github.com/halogenica/beautifulhugo/blob/ebfb6b87803f906382775ba90efdd9e1ebf31280/layouts/_default/single.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;single.html&lt;/code&gt;&lt;/a&gt; layout and &lt;a href=&#34;https://github.com/halogenica/beautifulhugo/blob/ebfb6b87803f906382775ba90efdd9e1ebf31280/layouts/partials/staticman-comments.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;staticman-comments.html&lt;/code&gt;&lt;/a&gt; was marginally helpful&lt;/li&gt;
&lt;li&gt;The gohugohq &lt;a href=&#34;https://gohugohq.com/howto/staticman-hugo-comment-system/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;howto&lt;/a&gt; was also marginally helpful.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If I had to do this again I would ignore both of the above Beautifulhugo and gohugohq examples.&lt;/p&gt;
&lt;p&gt;The Staticman &lt;a href=&#34;https://staticman.net/docs/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;official documentation&lt;/a&gt; is good, but will be even better with a little more time, the info is there, just that some of it is not as clear as it could be, but I know it&amp;rsquo;s being improved as we speak.&lt;/p&gt;
&lt;h2 id=&#34;leave-comments-on-posts&#34;&gt;Leave Comments on Posts&lt;/h2&gt;
&lt;p&gt;The creator of Staticman was nice enough to create a model Hugo site to demo Staticman working with Hugo. The following were the most helpful examples to set this up with Hugo:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Demo site: &lt;a href=&#34;https://hugo.staticman.net/post/my-entry/&#34;&gt;https://hugo.staticman.net/post/my-entry/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Config file: &lt;a href=&#34;https://github.com/eduardoboucas/hugo-plus-staticman/blob/master/staticman.yml&#34;&gt;https://github.com/eduardoboucas/hugo-plus-staticman/blob/master/staticman.yml&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;The layout partial that handles the markup for the comment display and posting: &lt;a href=&#34;https://github.com/eduardoboucas/hugo-plus-staticman/blob/master/themes/hugo-type-theme/layouts/partials/post-comments.html&#34;&gt;https://github.com/eduardoboucas/hugo-plus-staticman/blob/master/themes/hugo-type-theme/layouts/partials/post-comments.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;I used the style-sheet from the Staticman creators &lt;a href=&#34;https://eduardoboucas.com/blog/2017/11/14/static-api-generator.html#post-new-comment&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;own website&lt;/a&gt; (&lt;a href=&#34;https://github.com/eduardoboucas/eduardoboucas.github.io&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;source&lt;/a&gt;) for the &amp;ldquo;&lt;em&gt;Notify me of new comments on this post&lt;/em&gt;&amp;rdquo; checkbox as a starting point&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In order for the comment count to be displayed in the &lt;code&gt;article_metadata.html&lt;/code&gt; (That&amp;rsquo;s at the top of each post and listed under each posts title in the &lt;a href=&#34;https://binarymist.io/blog&#34;&gt;list&lt;/a&gt;), the blog posts &lt;code&gt;slug&lt;/code&gt; needs to be in the front matter of each post:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-md&#34; data-lang=&#34;md&#34;&gt;# Slug is required for counting comments.
slug = &amp;#34;blog-post-file-name-without-md&amp;#34;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you decide to have Staticman issue a pull request for each reader comment (see &lt;a href=&#34;https://staticman.net/docs/index.html#step-4-approve-entries-optional&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;step 4&lt;/a&gt; of the getting started guide), you can also &lt;a href=&#34;https://staticman.net/docs/webhooks&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;set-up a webhook&lt;/a&gt; to have Static man delete the branch once you have accepted or closed the pull request.&lt;/p&gt;
&lt;h2 id=&#34;subscribe-to-comments-on-specific-blog-posts&#34;&gt;Subscribe to Comments on Specific Blog Posts&lt;/h2&gt;
&lt;p&gt;This is where you set-up a Mailgun account and your domain within it. Go ahead and sign up for a free Mailgun account.&lt;/p&gt;
&lt;p&gt;The most useful piece of documentation for this was an &lt;a href=&#34;https://github.com/eduardoboucas/staticman/issues/42&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;issue thread&lt;/a&gt; in which @eduardoboucas explained how this should work. Some of the following comments on the thread were also useful.&lt;/p&gt;
&lt;p&gt;From the &lt;a href=&#34;https://github.com/eduardoboucas/staticman/blob/master/staticman.sample.yml&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;staticman.sample.yml&lt;/code&gt;&lt;/a&gt; which you copied to your sites root directory and modified, based on the directions in the official &lt;a href=&#34;https://staticman.net/docs/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;documentation&lt;/a&gt;, you will need to uncomment the &lt;code&gt;#notifications:&lt;/code&gt;, &lt;code&gt;#enabled: true&lt;/code&gt; and add your encrypted &lt;code&gt;apiKey&lt;/code&gt; and &lt;code&gt;domain&lt;/code&gt; that Staticman &lt;a href=&#34;https://staticman.net/docs/encryption&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;encrypts&lt;/a&gt; for you (also discussed in the issue thread mentioned above) if you use the API.&lt;/p&gt;
&lt;h2 id=&#34;subscribe-to-notification-by-email-as-new-blog-posts-are-published&#34;&gt;Subscribe to notification by email as new blog posts are published&lt;/h2&gt;
&lt;p&gt;Once I had the above set-up and working, this step only took an afternoon. What was involved:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Added the &lt;code&gt;blogSubscribers&lt;/code&gt; section to &lt;code&gt;staticman.yml&lt;/code&gt;, I will discus this when we look at the code in the next section&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Added the &lt;code&gt;post.html&lt;/code&gt; (shown below). This will &lt;code&gt;POST&lt;/code&gt; your subscription, and display a confirmation screen&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Some more styling added to &lt;code&gt;override.css&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;On first &lt;code&gt;POST&lt;/code&gt; the mailing list will be created in your Mailgun account. I then just gave it a sensible name, so I can see what the purpose of the list is at a glance, as Staticman provides a &amp;ldquo;&lt;a href=&#34;https://github.com/eduardoboucas/staticman/issues/42#issuecomment-283981036&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;em&gt;MD5 hash of the Github username, repository, and entry id concatenated together&lt;/em&gt;&lt;/a&gt;&amp;rdquo; which is prefixed to the Alias Address of the new Mailgun mailing list that you can send notifications to. If you have &lt;code&gt;moderation: true&lt;/code&gt; in your &lt;code&gt;staticman.yml&lt;/code&gt; under the section responsible for this (&lt;code&gt;blogSubscribers&lt;/code&gt; in my case), you will receive a pull request each time someone subscribes.&lt;/p&gt;
&lt;p&gt;If you are like me and would like to address notifications to a name/handle, the following is currently required:&lt;/p&gt;
&lt;p&gt;Once I receive the Github pull request from Staticman for blog subscription, if it looks legitimate, I need to &lt;code&gt;md5sum&lt;/code&gt; the email address in the new Mailgun record:&lt;br&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;echo -n &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;the-email-address-from-mailgun-record&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; | md5sum&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;
and compare the result with the hashed email in the pull request. Then take the name from that pull request and apply it to the Mailgun entry. This is a small piece of manual work that would be nice if Staticman could send the name as well and have it added to the email records &lt;code&gt;name&lt;/code&gt; variable.&lt;/p&gt;
&lt;p&gt;The pull request can be closed, unless for some reason you want it merged.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;sending-email-to-subscribers&#34;&gt;Sending Email to Subscribers&lt;/h4&gt;
&lt;p&gt;Once you have the above set-up, sending the email is as simple as:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;curl -s --user &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;api:key-[key-hash-goes-here]&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;   https://api.mailgun.net/v3/mailgun.binarymist.io/messages &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;   -F from&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;lt;your-name&amp;gt; &amp;lt;email-address-that-subscribers-can-reply-to&amp;gt;&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;   -F to&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&amp;lt;your-mailgun-email-address&amp;gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;   -F subject&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;New Blog Post from You&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;   --form-string html&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;lt;html&amp;gt;Hi %recipient.name%.&amp;lt;br&amp;gt;&amp;lt;br&amp;gt;This is a link to the new post: &amp;lt;a href=&amp;#34;https://&amp;lt;your-domain&amp;gt;/&amp;lt;post-slug&amp;gt;&amp;#34;&amp;gt;&amp;lt;name-of-your-post&amp;gt;&amp;lt;/a&amp;gt;&amp;lt;br&amp;gt;&amp;lt;br&amp;gt; Enjoy!&amp;lt;br&amp;gt;&amp;lt;br&amp;gt;-You.&amp;lt;br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;br&amp;gt;If at any point you would like to unsubscribe from this mailing list, click &amp;lt;a href=&amp;#34;%mailing_list_unsubscribe_url%&amp;#34;&amp;gt;Unsubscribe&amp;lt;/a&amp;gt;&amp;lt;/html&amp;gt;&amp;#39;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;show-me-the-code&#34;&gt;Show me the Code&lt;/h2&gt;
&lt;p&gt;Firstly, all of this is up and running on the blog you are reading now.&lt;/p&gt;
&lt;p&gt;You may also notice the &lt;code&gt;botpot&lt;/code&gt; &lt;code&gt;input&lt;/code&gt; field on both forms. This is from a mitigations &lt;a href=&#34;https://f1.holisticinfosecforwebdevelopers.com/chap06.html#web-applications-countermeasures-captcha&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;section&lt;/a&gt; in the Web Applications chapter of my second book around captchas, and how they place the website owners problem on the end uers. Bots are not the end users problem, so why should they have to jump through hoops to submit a simple form? Check out my research on the topic.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://f1.holisticinfosecforwebdevelopers.com/chap06.html#leanpub-auto-captcha&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;The problem&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://f1.holisticinfosecforwebdevelopers.com/chap06.html#web-applications-countermeasures-captcha&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;The solution(s)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Enough ranting&amp;hellip; The following are the new parts I added to &lt;code&gt;config.toml&lt;/code&gt;:&lt;/p&gt;
&lt;h6 id=&#34;modified-file-configtomlhttpsgithubcombinarymistbinarymistblogblobmasterconfigtoml&#34;&gt;Modified File: &lt;a href=&#34;https://github.com/binarymist/BinaryMistBlog/blob/master/config.toml&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;config.toml&lt;/code&gt;&lt;/a&gt;&lt;/h6&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-toml&#34; data-lang=&#34;toml&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Comment out disqusShortname Key/Value pair&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#disqusShortname = &amp;#34;&amp;#34;&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;# Add the following new Table somewhere under the params table&lt;/span&gt;
  [&lt;span style=&#34;color:#a6e22e&#34;&gt;params&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;staticman&lt;/span&gt;]
  &lt;span style=&#34;color:#a6e22e&#34;&gt;endpoint&lt;/span&gt; = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https://api.staticman.net/v2/entry&amp;#34;&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;username&lt;/span&gt; = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;binarymist&amp;#34;&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;repository&lt;/span&gt; = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;BinaryMistBlog&amp;#34;&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;branch&lt;/span&gt; = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;master&amp;#34;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h6 id=&#34;new-file-staticmanymlhttpsgithubcombinarymistbinarymistblogblobmasterstaticmanyml&#34;&gt;New File: &lt;a href=&#34;https://github.com/binarymist/BinaryMistBlog/blob/master/staticman.yml&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;staticman.yml&lt;/code&gt;&lt;/a&gt;&lt;/h6&gt;
&lt;p&gt;This is required by Staticman. You&amp;rsquo;ll notice I have a &lt;code&gt;comments&lt;/code&gt; section and a &lt;code&gt;blogSubscribers&lt;/code&gt; section. The former is used by Staticman when you submit a comment on a specific post, you can see this in action &lt;a href=&#34;#comments&#34;&gt;below&lt;/a&gt;. The latter is used by Staticman when you subscribe to be notified of a new blog post, you can see this in action &lt;a href=&#34;https://binarymist.io/blog&#34;&gt;here&lt;/a&gt;. If all you need is blog comments, you only need the &lt;code&gt;comments&lt;/code&gt; section.&lt;/p&gt;
&lt;h6 id=&#34;new-override-layoutspartialscommentshtmlhttpsgithubcombinarymistbinarymistblogblobmasterlayoutspartialscommentshtml&#34;&gt;New Override: &lt;a href=&#34;https://github.com/binarymist/BinaryMistBlog/blob/master/layouts/partials/comments.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;/layouts/partials/comments.html&lt;/code&gt;&lt;/a&gt;&lt;/h6&gt;
&lt;p&gt;&lt;code&gt;comments.html&lt;/code&gt; is used for posting and subscribing to each specific blog post comment thread, and was copied from &lt;code&gt;/themes/academic/layouts/partials/&lt;/code&gt; and modified extensively. The first lines diff:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-diff&#34; data-lang=&#34;diff&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;- {{ if and .Site.DisqusShortname (not (or .Site.Params.disable_comments .Params.disable_comments)) }}
&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;+ {{ if and (or .Site.DisqusShortname .Site.Params.staticman) (not (or .Site.Params.disable_comments .Params.disable_comments)) }}
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Lines 3 - 4 and 6 - 71 are brand new lines:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 1&lt;/span&gt;{{ if and (or .Site.DisqusShortname .Site.Params.staticman) (not (or .Site.Params.disable_comments .Params.disable_comments)) }}
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 2&lt;/span&gt;  &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;section&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;id&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;comments&amp;#34;&lt;/span&gt;&amp;gt;
&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 3&lt;/span&gt;    {{ if .Site.DisqusShortname }}
&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 4&lt;/span&gt;      &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;div&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;disqus-comments&amp;#34;&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 5&lt;/span&gt;        {{ template &amp;#34;_internal/disqus.html&amp;#34; . }}
&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 6&lt;/span&gt;      &amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;div&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 7&lt;/span&gt;    {{ end }}
&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 8&lt;/span&gt;    {{ if .Site.Params.staticman }}
&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 9&lt;/span&gt;      &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;section&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;staticman-comments post-comments&amp;#34;&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;10&lt;/span&gt;        &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;h3&lt;/span&gt;&amp;gt;Comments&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;h3&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;11&lt;/span&gt;
&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;12&lt;/span&gt;        {{ $comments := readDir &amp;#34;data/comments&amp;#34; }}
&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;13&lt;/span&gt;        {{ $.Scratch.Add &amp;#34;hasComments&amp;#34; 0 }}
&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;14&lt;/span&gt;        {{ $postSlug := .Source.BaseFileName }}
&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;15&lt;/span&gt;
&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;16&lt;/span&gt;        {{ range $comments }}
&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;17&lt;/span&gt;          {{ if eq .Name $postSlug }}
&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;18&lt;/span&gt;            {{ $.Scratch.Add &amp;#34;hasComments&amp;#34; 1 }}
&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;19&lt;/span&gt;            {{ range $index, $comments := (index $.Site.Data.comments $postSlug ) }}            
&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;20&lt;/span&gt;              &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;div&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;id&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;commentid-{{ ._id }}&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;post-comment&amp;#34;&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;21&lt;/span&gt;                &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;div&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;post-comment-header&amp;#34;&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;22&lt;/span&gt;                  &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;img&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;post-comment-avatar&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;src&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https://www.gravatar.com/avatar/{{ .email }}?s=70&amp;amp;r=pg&amp;amp;d=identicon&amp;#34;&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;23&lt;/span&gt;                  &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;p&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;post-comment-info&amp;#34;&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;24&lt;/span&gt;                    &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;span&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;post-comment-name&amp;#34;&lt;/span&gt;&amp;gt;{{ .name }}&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;span&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;25&lt;/span&gt;                    &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;br&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;26&lt;/span&gt;                    &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;a&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;href&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;#commentid-{{ ._id }}&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;title&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Permalink to this comment&amp;#34;&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;27&lt;/span&gt;                      &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;time&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;post-time&amp;#34;&lt;/span&gt;&amp;gt;{{ dateFormat &amp;#34;Monday, Jan 2, 2006 at 15:04 MST&amp;#34; .date }}&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;time&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;28&lt;/span&gt;                    &amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;a&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;29&lt;/span&gt;                  &amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;p&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;30&lt;/span&gt;                &amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;div&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;31&lt;/span&gt;                {{ .comment | markdownify }}
&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;32&lt;/span&gt;              &amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;div&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;33&lt;/span&gt;            {{ end }}       
&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;34&lt;/span&gt;          {{ end }}
&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;35&lt;/span&gt;        {{ end }}
&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;36&lt;/span&gt;
&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;37&lt;/span&gt;        {{ if eq ($.Scratch.Get &amp;#34;hasComments&amp;#34;) 0 }}
&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;38&lt;/span&gt;          &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;p&lt;/span&gt;&amp;gt;Be the first to leave a comment.&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;p&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;39&lt;/span&gt;        {{ end }}
&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;40&lt;/span&gt;        
&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;41&lt;/span&gt;        &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;h3&lt;/span&gt;&amp;gt;Say something&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;h3&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;42&lt;/span&gt;        Your email is used for &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;a&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;href&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https://gravatar.com&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;target&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;_blank&amp;#34;&lt;/span&gt;&amp;gt;Gravatar&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;a&lt;/span&gt;&amp;gt; image and reply notifications only.
&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;43&lt;/span&gt;        
&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;44&lt;/span&gt;        
&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;45&lt;/span&gt;        &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;form&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;post-new-comment&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;method&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;post&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;action&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;{{ .Site.Params.staticman.endpoint }}/{{ .Site.Params.staticman.username }}/{{ .Site.Params.staticman.repository }}/{{ .Site.Params.staticman.branch }}/comments&amp;#34;&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;46&lt;/span&gt;          &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;input&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;hidden&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;options[redirect]&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;value&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;{{ .Permalink }}#comment-submitted&amp;#34;&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;47&lt;/span&gt;          &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;input&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;hidden&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;options[slug]&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;value&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;{{ .Source.BaseFileName }}&amp;#34;&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;48&lt;/span&gt;          &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;input&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;hidden&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;fields[postName]&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;value&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;{{ .Source.BaseFileName }}&amp;#34;&lt;/span&gt;/&amp;gt;          
&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;49&lt;/span&gt;          &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;input&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;text&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;fields[name]&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;post-comment-field&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;placeholder&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Name *&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;required&lt;/span&gt;/&amp;gt;
&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;50&lt;/span&gt;          &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;input&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;email&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;fields[email]&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;post-comment-field&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;placeholder&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Email address (will not be public) *&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;required&lt;/span&gt;/&amp;gt;          
&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;51&lt;/span&gt;          &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;input&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;address&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;fields[botpot]&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;placeholder&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;botpot (do not fill!)&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;style&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;display: none&amp;#34;&lt;/span&gt;&amp;gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;textarea&lt;/span&gt;&amp;gt;          
&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;52&lt;/span&gt;          &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;textarea&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;fields[comment]&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;post-comment-field&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;placeholder&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Comment (markdown is accepted) *&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;required&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;rows&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;10&amp;#34;&lt;/span&gt;&amp;gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;textarea&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;53&lt;/span&gt;          &lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;!-- Following fields used for subscribing to comments --&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;54&lt;/span&gt;          &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;input&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;hidden&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;options[origin]&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;value&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;{{ $.Permalink }}#comments&amp;#34;&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;55&lt;/span&gt;          &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;input&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;hidden&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;options[parent]&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;value&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;{{ .Source.BaseFileName }}&amp;#34;&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;56&lt;/span&gt;          &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;input&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;id&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;form-submit&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;checkbox&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;options[subscribe]&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;checkbox post-comment-field&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;value&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;email&amp;#34;&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;57&lt;/span&gt;          &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;label&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;for&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;form-submit&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;post-comment-field checkbox-label&amp;#34;&lt;/span&gt;&amp;gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&amp;amp;&lt;/span&gt;nbsp Notify me of new comments on this post&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;label&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;58&lt;/span&gt;          &lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;!-- End following fields used for subscribing to comments --&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;59&lt;/span&gt;          &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;input&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;submit&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;post-comment-field btn btn-primary comment-buttons&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;value&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Submit&amp;#34;&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;60&lt;/span&gt;        &amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;form&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;61&lt;/span&gt;      &amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;section&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;62&lt;/span&gt;
&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;63&lt;/span&gt;      &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;div&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;id&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;comment-submitted&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;dialog&amp;#34;&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;64&lt;/span&gt;        &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;h3&lt;/span&gt;&amp;gt;Thank you&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;h3&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;65&lt;/span&gt;        &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;p&lt;/span&gt;&amp;gt;Your comment has been submitted and will be published once it has been approved.&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;p&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;66&lt;/span&gt;        &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;p&lt;/span&gt;&amp;gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;a&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;href&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https://github.com/{{ .Site.Params.staticman.username }}/{{ .Site.Params.staticman.repository }}/pulls&amp;#34;&lt;/span&gt;&amp;gt;Click here&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;a&lt;/span&gt;&amp;gt; to see the pull request you generated.&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;p&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;67&lt;/span&gt;        
&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;68&lt;/span&gt;        &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;p&lt;/span&gt;&amp;gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;a&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;href&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;#&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;btn btn-primary comment-buttons ok&amp;#34;&lt;/span&gt;&amp;gt;OK&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;a&lt;/span&gt;&amp;gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;p&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;69&lt;/span&gt;      &amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;div&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;70&lt;/span&gt;
&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;71&lt;/span&gt;    {{ end }}
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;72&lt;/span&gt;  &amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;section&lt;/span&gt;&amp;gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;73&lt;/span&gt;{{ end }}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h6 id=&#34;new-override-layoutspartialsarticle_metadatahtmlhttpsgithubcombinarymistbinarymistblogblobmasterlayoutspartialsarticle_metadatahtml&#34;&gt;New Override: &lt;a href=&#34;https://github.com/binarymist/BinaryMistBlog/blob/master/layouts/partials/article_metadata.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;/layouts/partials/article_metadata.html&lt;/code&gt;&lt;/a&gt;&lt;/h6&gt;
&lt;p&gt;&lt;code&gt;article_metadata.html&lt;/code&gt; is used for displaying the comment count directly under the title of each blog post in the &lt;a href=&#34;https://binarymist.io/blog&#34;&gt;post list&lt;/a&gt; and at the top of each post. You won&amp;rsquo;t see the count unless there are actually comments on the post. &lt;code&gt;article_metadata.html&lt;/code&gt; was copied from &lt;code&gt;/themes/academic/layouts/partials/&lt;/code&gt; and modified.&lt;/p&gt;
&lt;p&gt;Line 21 diff:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-diff&#34; data-lang=&#34;diff&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-   {{ $comments_enabled := and $.Site.DisqusShortname (not (or $.Site.Params.disable_comments $.Params.disable_comments)) }}
&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;+   {{ $comments_enabled := and (or $.Site.DisqusShortname $.Site.Params.staticman) (not (or $.Site.Params.disable_comments $.Params.disable_comments)) }}
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Lines 23 and 27 - 43 are brand new lines:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 1&lt;/span&gt;{{ $is_list := .is_list }}
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 2&lt;/span&gt;{{ $ := .content }}
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 3&lt;/span&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;div&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;article-metadata&amp;#34;&lt;/span&gt;&amp;gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 4&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 5&lt;/span&gt;  &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;span&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;article-date&amp;#34;&lt;/span&gt;&amp;gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 6&lt;/span&gt;    {{ if ne $.Params.Lastmod $.Params.Date }}
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 7&lt;/span&gt;        {{ i18n &amp;#34;last_updated&amp;#34; }}
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 8&lt;/span&gt;    {{ end }}
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 9&lt;/span&gt;    &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;time&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;datetime&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;{{ $.Date }}&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;itemprop&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;datePublished&amp;#34;&lt;/span&gt;&amp;gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;10&lt;/span&gt;      {{ $.Lastmod.Format $.Site.Params.date_format }}
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;11&lt;/span&gt;    &amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;time&lt;/span&gt;&amp;gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;12&lt;/span&gt;  &amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;span&lt;/span&gt;&amp;gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;13&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;14&lt;/span&gt;  {{ if ne $.Site.Params.reading_time false }}
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;15&lt;/span&gt;  &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;span&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;middot-divider&amp;#34;&lt;/span&gt;&amp;gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;span&lt;/span&gt;&amp;gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;16&lt;/span&gt;  &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;span&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;article-reading-time&amp;#34;&lt;/span&gt;&amp;gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;17&lt;/span&gt;    {{ $.ReadingTime }} {{ i18n &amp;#34;minute_read&amp;#34; }}
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;18&lt;/span&gt;  &amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;span&lt;/span&gt;&amp;gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;19&lt;/span&gt;  {{ end }}
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;20&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;21&lt;/span&gt;  {{ $comments_enabled := and (or $.Site.DisqusShortname $.Site.Params.staticman) (not (or $.Site.Params.disable_comments $.Params.disable_comments)) }}
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;22&lt;/span&gt;  {{ if and $comments_enabled ($.Site.Params.comment_count | default true) }}
&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;23&lt;/span&gt;    {{ if $.Site.DisqusShortname }}
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;24&lt;/span&gt;      &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;span&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;middot-divider&amp;#34;&lt;/span&gt;&amp;gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;span&lt;/span&gt;&amp;gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;25&lt;/span&gt;      &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;a&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;href&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;{{ $.Permalink }}#disqus_thread&amp;#34;&lt;/span&gt;&amp;gt;&lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;!-- Count will be inserted here --&amp;gt;&lt;/span&gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;a&lt;/span&gt;&amp;gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;26&lt;/span&gt;    {{ end }}
&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;27&lt;/span&gt;    {{ if $.Site.Params.staticman }}
&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;28&lt;/span&gt;      {{ $.Scratch.Set &amp;#34;commentCountPerPost&amp;#34; 0 }}
&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;29&lt;/span&gt;      {{ if $.Slug }} &lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;!-- Can&amp;#39;t count comments without slug --&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;30&lt;/span&gt;        {{ if fileExists (printf &amp;#34;data/comments/%s&amp;#34; $.Slug) }} &lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;!-- If the comment dir exists, we can count comments --&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;31&lt;/span&gt;          {{ $comments := readDir (printf &amp;#34;data/comments/%s&amp;#34; $.Slug) }}
&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;32&lt;/span&gt;          {{ $.Scratch.Set &amp;#34;commentCountPerPost&amp;#34; (len $comments) }}
&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;33&lt;/span&gt;        {{ end }}        
&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;34&lt;/span&gt;      {{ end }}
&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;35&lt;/span&gt;      {{ if gt ( $.Scratch.Get &amp;#34;commentCountPerPost&amp;#34; ) 1 }}
&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;36&lt;/span&gt;        &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;span&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;middot-divider&amp;#34;&lt;/span&gt;&amp;gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;span&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;37&lt;/span&gt;        &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;a&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;href&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;{{ $.Permalink }}#comments&amp;#34;&lt;/span&gt;&amp;gt;{{ $.Scratch.Get &amp;#34;commentCountPerPost&amp;#34; }} Comments&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;a&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;38&lt;/span&gt;      {{ else if eq ( $.Scratch.Get &amp;#34;commentCountPerPost&amp;#34; ) 1 }}
&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;39&lt;/span&gt;        &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;span&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;middot-divider&amp;#34;&lt;/span&gt;&amp;gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;span&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;40&lt;/span&gt;        &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;a&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;href&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;{{ $.Permalink }}#comments&amp;#34;&lt;/span&gt;&amp;gt;1 Comment&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;a&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;41&lt;/span&gt;      {{ end }}
&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;42&lt;/span&gt;    {{ end }}
&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;43&lt;/span&gt;  {{ end}}
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;44&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;45&lt;/span&gt;  {{ if isset $.Params &amp;#34;categories&amp;#34; }}
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;46&lt;/span&gt;  {{ $categoriesLen := len $.Params.categories }}
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;47&lt;/span&gt;  {{ if gt $categoriesLen 0 }}
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;48&lt;/span&gt;  &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;span&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;middot-divider&amp;#34;&lt;/span&gt;&amp;gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;span&lt;/span&gt;&amp;gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;49&lt;/span&gt;  &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;span&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;article-categories&amp;#34;&lt;/span&gt;&amp;gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;50&lt;/span&gt;    &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;i&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;fa fa-folder&amp;#34;&lt;/span&gt;&amp;gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;i&lt;/span&gt;&amp;gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;51&lt;/span&gt;    {{ range $k, $v := $.Params.categories }}
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;52&lt;/span&gt;    &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;a&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;href&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;{{ &amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;categories&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;/&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;relLangURL&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;}}{{&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;.&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;urlize&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;lower&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;}}&amp;#34;&lt;/span&gt;&amp;gt;{{ . }}&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;a&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;53&lt;/span&gt;    &amp;gt;{{ if lt $k (sub $categoriesLen 1) }}, {{ end }}
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;54&lt;/span&gt;    {{ end }}
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;55&lt;/span&gt;  &amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;span&lt;/span&gt;&amp;gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;56&lt;/span&gt;  {{ end }}
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;57&lt;/span&gt;  {{ end }}
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;58&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;59&lt;/span&gt;  {{ if ne $is_list 1 }}
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;60&lt;/span&gt;  {{ partial &amp;#34;share.html&amp;#34; $ }}
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;61&lt;/span&gt;  {{ end }}
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;62&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;63&lt;/span&gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;div&lt;/span&gt;&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h6 id=&#34;new-override-layoutssectionposthtmlhttpsgithubcombinarymistbinarymistblogblobmasterlayoutssectionposthtml&#34;&gt;New Override: &lt;a href=&#34;https://github.com/binarymist/BinaryMistBlog/blob/master/layouts/section/post.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;layouts/section/post.html&lt;/a&gt;&lt;/h6&gt;
&lt;p&gt;&lt;code&gt;post.html&lt;/code&gt; is used for &lt;a href=&#34;https://binarymist.io/blog&#34;&gt;subscribing&lt;/a&gt; to new blog posts, and was copied from &lt;code&gt;/themes/academic/layouts/section/&lt;/code&gt; and modified. Lines 14 - 40 are brand new lines.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 1&lt;/span&gt;{{ partial &amp;#34;header.html&amp;#34; . }}
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 2&lt;/span&gt;{{ partial &amp;#34;navbar.html&amp;#34; . }}
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 3&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 4&lt;/span&gt;{{ partial &amp;#34;header_image.html&amp;#34; . }}
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 5&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 6&lt;/span&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;div&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;universal-wrapper&amp;#34;&lt;/span&gt;&amp;gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 7&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 8&lt;/span&gt;  &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;h1&lt;/span&gt;&amp;gt;{{ .Title | default (i18n &amp;#34;posts&amp;#34;) }}&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;h1&lt;/span&gt;&amp;gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 9&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;10&lt;/span&gt;  {{ with .Content }}
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;11&lt;/span&gt;  &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;div&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;article-style&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;itemprop&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;articleBody&amp;#34;&lt;/span&gt;&amp;gt;{{ . }}&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;div&lt;/span&gt;&amp;gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;12&lt;/span&gt;  {{ end }}
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;13&lt;/span&gt;  {{ $paginator := .Paginate .Data.Pages }}
&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;14&lt;/span&gt;  {{ if eq ( $paginator.PageNumber ) 1 }}
&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;15&lt;/span&gt;    {{ .Scratch.Set &amp;#34;redirectUrl&amp;#34; (print .Permalink &amp;#34;#blogsubscription-submitted&amp;#34;) }}
&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;16&lt;/span&gt;  {{ else }}
&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;17&lt;/span&gt;    {{ .Scratch.Set &amp;#34;redirectUrl&amp;#34; (print .Permalink &amp;#34;page/&amp;#34; $paginator.PageNumber &amp;#34;/#blogsubscription-submitted&amp;#34;) }}
&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;18&lt;/span&gt;  {{ end }}
&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;19&lt;/span&gt;  &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;section&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;subscribe-to-blog&amp;#34;&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;20&lt;/span&gt;    &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;form&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;post-blogsubscribe&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;method&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;post&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;action&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;{{ .Site.Params.staticman.endpoint }}/{{ .Site.Params.staticman.username }}/{{ .Site.Params.staticman.repository }}/{{ .Site.Params.staticman.branch }}/blogSubscribers&amp;#34;&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;21&lt;/span&gt;      &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;input&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;hidden&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;options[redirect]&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;value&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;{{ .Scratch.Get &amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;redirectUrl&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;}}&amp;#34;&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;22&lt;/span&gt;      &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;input&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;hidden&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;options[slug]&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;value&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;post-collection&amp;#34;&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;23&lt;/span&gt;      &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;input&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;text&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;fields[name]&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;post-blogsubscriber-field left&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;placeholder&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Name *&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;required&lt;/span&gt;/&amp;gt;
&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;24&lt;/span&gt;      &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;input&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;email&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;fields[email]&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;post-blogsubscriber-field right&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;placeholder&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Email address (not publicised) *&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;required&lt;/span&gt;/&amp;gt;          
&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;25&lt;/span&gt;      &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;input&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;address&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;fields[botpot]&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;placeholder&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;botpot (do not fill!)&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;style&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;display: none&amp;#34;&lt;/span&gt;&amp;gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;textarea&lt;/span&gt;&amp;gt;          
&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;26&lt;/span&gt;      &lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;!-- Following fields used for subscription --&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;27&lt;/span&gt;      &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;input&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;hidden&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;options[origin]&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;value&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;{{ $.Permalink }}&amp;#34;&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;28&lt;/span&gt;      &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;input&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;hidden&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;options[parent]&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;value&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;post-collection&amp;#34;&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;29&lt;/span&gt;      &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;input&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;hidden&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;options[subscribe]&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;value&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;email&amp;#34;&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;30&lt;/span&gt;      &lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;!-- End following fields used for subscription --&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;31&lt;/span&gt;      &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;input&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;submit&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;btn btn-primary comment-buttons post-blogsubscriber-btn&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;value&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Subscribe to new posts &amp;amp;nbsp &amp;amp;nbsp -- &amp;amp;nbsp &amp;amp;nbsp Unsubscribe at any time&amp;#34;&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;32&lt;/span&gt;    &amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;form&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;33&lt;/span&gt;  &amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;section&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;34&lt;/span&gt;  &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;div&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;id&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;blogsubscription-submitted&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;dialog&amp;#34;&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;35&lt;/span&gt;    &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;h3&lt;/span&gt;&amp;gt;Thank you&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;h3&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;36&lt;/span&gt;    &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;p&lt;/span&gt;&amp;gt;Your subscription request has been submitted.&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;p&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;37&lt;/span&gt;    &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;p&lt;/span&gt;&amp;gt;You will receive a notification email of new posts when they are published.&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;p&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;38&lt;/span&gt;    &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;p&lt;/span&gt;&amp;gt;There will be an unsubscribe link in the notification emails if you wish to unsubscribe.&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;p&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;39&lt;/span&gt;    &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;p&lt;/span&gt;&amp;gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;a&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;href&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;#&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;btn btn-primary comment-buttons ok&amp;#34;&lt;/span&gt;&amp;gt;OK&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;a&lt;/span&gt;&amp;gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;p&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;40&lt;/span&gt;  &amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;div&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;41&lt;/span&gt;  {{ range $paginator.Pages }}
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;42&lt;/span&gt;    {{ $params := dict &amp;#34;post&amp;#34; . }}
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;43&lt;/span&gt;    {{ partial &amp;#34;post_li&amp;#34; $params }}
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;44&lt;/span&gt;  {{ end }}
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;45&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;46&lt;/span&gt;  {{ partial &amp;#34;pagination&amp;#34; . }}
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;47&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;48&lt;/span&gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;div&lt;/span&gt;&amp;gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;49&lt;/span&gt;{{ partial &amp;#34;footer_container.html&amp;#34; . }}
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;50&lt;/span&gt;{{ partial &amp;#34;footer.html&amp;#34; . }}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h6 id=&#34;modified-file-overridecsshttpsgithubcombinarymistbinarymistblogblob3eb7dbb1531fc1f6bd1c42d033c2b8acea454b47staticcssoverridecssl122-l286&#34;&gt;Modified File: &lt;a href=&#34;https://github.com/binarymist/BinaryMistBlog/blob/3eb7dbb1531fc1f6bd1c42d033c2b8acea454b47/static/css/override.css#L122-L286&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;override.css&lt;/code&gt;&lt;/a&gt;&lt;/h6&gt;
&lt;p&gt;In the &lt;code&gt;config.toml&lt;/code&gt;, you can provide style overrides:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-toml&#34; data-lang=&#34;toml&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;custom_css&lt;/span&gt; = [&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;override.css&amp;#34;&lt;/span&gt;]&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The relevant styling is all commented and looks like the following:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-css&#34; data-lang=&#34;css&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;122&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;/* Staticman comment section and form */&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;123&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;124&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;post-comments&lt;/span&gt; {
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;125&lt;/span&gt;   &lt;span style=&#34;color:#66d9ef&#34;&gt;margin-top&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;60&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;px&lt;/span&gt;;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;126&lt;/span&gt;}
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;127&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;128&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;post-comment&lt;/span&gt; {
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;129&lt;/span&gt;   &lt;span style=&#34;color:#66d9ef&#34;&gt;background-color&lt;/span&gt;: rgb(&lt;span style=&#34;color:#ae81ff&#34;&gt;247&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;247&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;247&lt;/span&gt;);
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;130&lt;/span&gt;   &lt;span style=&#34;color:#66d9ef&#34;&gt;padding&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;px&lt;/span&gt;;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;131&lt;/span&gt;   &lt;span style=&#34;color:#66d9ef&#34;&gt;margin-top&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;px&lt;/span&gt;;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;132&lt;/span&gt;}
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;133&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;134&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;post-comment-header&lt;/span&gt; {
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;135&lt;/span&gt;   &lt;span style=&#34;color:#66d9ef&#34;&gt;margin-bottom&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;px&lt;/span&gt;;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;136&lt;/span&gt;}
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;137&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;138&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;post-comment-avatar&lt;/span&gt; {
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;139&lt;/span&gt;   &lt;span style=&#34;color:#66d9ef&#34;&gt;display&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;inline&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;block&lt;/span&gt;;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;140&lt;/span&gt;   &lt;span style=&#34;color:#66d9ef&#34;&gt;vertical-align&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;middle&lt;/span&gt;;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;141&lt;/span&gt;   &lt;span style=&#34;color:#66d9ef&#34;&gt;border-radius&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;50&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;%&lt;/span&gt;;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;142&lt;/span&gt;}
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;143&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;144&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;post-comment-info&lt;/span&gt; {
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;145&lt;/span&gt;   &lt;span style=&#34;color:#66d9ef&#34;&gt;display&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;inline&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;block&lt;/span&gt;;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;146&lt;/span&gt;   &lt;span style=&#34;color:#66d9ef&#34;&gt;margin-left&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;px&lt;/span&gt;;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;147&lt;/span&gt;   &lt;span style=&#34;color:#66d9ef&#34;&gt;margin-bottom&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;148&lt;/span&gt;   &lt;span style=&#34;color:#66d9ef&#34;&gt;vertical-align&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;middle&lt;/span&gt;;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;149&lt;/span&gt;}
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;150&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;151&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;/* Part of blog subscription also */&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;152&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;post-comment-field&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; .&lt;span style=&#34;color:#a6e22e&#34;&gt;post-blogsubscriber-btn&lt;/span&gt; {
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;153&lt;/span&gt;   &lt;span style=&#34;color:#66d9ef&#34;&gt;display&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;block&lt;/span&gt;;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;154&lt;/span&gt;   &lt;span style=&#34;color:#66d9ef&#34;&gt;font&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;inherit&lt;/span&gt;;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;155&lt;/span&gt;   &lt;span style=&#34;color:#66d9ef&#34;&gt;padding&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;px&lt;/span&gt;;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;156&lt;/span&gt;   &lt;span style=&#34;color:#66d9ef&#34;&gt;margin-top&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;px&lt;/span&gt;;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;157&lt;/span&gt;   &lt;span style=&#34;color:#66d9ef&#34;&gt;outline-color&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;#9b6bcc&lt;/span&gt;;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;158&lt;/span&gt;   &lt;span style=&#34;color:#66d9ef&#34;&gt;width&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;%&lt;/span&gt;;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;159&lt;/span&gt;}
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;160&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;161&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;btn-primary&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;comment-buttons&lt;/span&gt; {
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;162&lt;/span&gt;   &lt;span style=&#34;color:#66d9ef&#34;&gt;background&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;#9b6bcc&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;!important&lt;/span&gt;;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;163&lt;/span&gt;   &lt;span style=&#34;color:#66d9ef&#34;&gt;border-color&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;#9b6bcc&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;!important&lt;/span&gt;;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;164&lt;/span&gt;   &lt;span style=&#34;color:#66d9ef&#34;&gt;font-size&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;0.9&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;rem&lt;/span&gt;;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;165&lt;/span&gt;   &lt;span style=&#34;color:#66d9ef&#34;&gt;padding&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;px&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;14&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;px&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;9&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;px&lt;/span&gt;;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;166&lt;/span&gt;   &lt;span style=&#34;color:#66d9ef&#34;&gt;border-radius&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;px&lt;/span&gt;;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;167&lt;/span&gt;}
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;168&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;169&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;btn-primary&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;comment-buttons&lt;/span&gt;:&lt;span style=&#34;color:#a6e22e&#34;&gt;hover&lt;/span&gt; {
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;170&lt;/span&gt;   &lt;span style=&#34;color:#66d9ef&#34;&gt;background&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;#53237f&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;!important&lt;/span&gt;;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;171&lt;/span&gt;}
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;172&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;173&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;post-comment-info&lt;/span&gt; .&lt;span style=&#34;color:#a6e22e&#34;&gt;post-comment-name&lt;/span&gt; {
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;174&lt;/span&gt;   &lt;span style=&#34;color:#66d9ef&#34;&gt;font-size&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;1.4&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;rem&lt;/span&gt;;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;175&lt;/span&gt;   &lt;span style=&#34;color:#66d9ef&#34;&gt;font-weight&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;500&lt;/span&gt;;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;176&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;177&lt;/span&gt;}
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;178&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;179&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;post-comment-info&lt;/span&gt; .&lt;span style=&#34;color:#a6e22e&#34;&gt;post-time&lt;/span&gt; {
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;180&lt;/span&gt;   &lt;span style=&#34;color:#66d9ef&#34;&gt;font-size&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;14&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;px&lt;/span&gt;;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;181&lt;/span&gt;   &lt;span style=&#34;color:#66d9ef&#34;&gt;font-weight&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;normal&lt;/span&gt;;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;182&lt;/span&gt;   &lt;span style=&#34;color:#66d9ef&#34;&gt;letter-spacing&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;0.03&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;em&lt;/span&gt;;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;183&lt;/span&gt;   &lt;span style=&#34;color:#66d9ef&#34;&gt;color&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;#888&lt;/span&gt;;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;184&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;185&lt;/span&gt;}
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;186&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;187&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;post-comment-info&lt;/span&gt; .&lt;span style=&#34;color:#a6e22e&#34;&gt;post-time&lt;/span&gt;:&lt;span style=&#34;color:#a6e22e&#34;&gt;hover&lt;/span&gt; {
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;188&lt;/span&gt;   &lt;span style=&#34;color:#66d9ef&#34;&gt;color&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;#9b6bcc&lt;/span&gt;;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;189&lt;/span&gt;}
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;190&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;191&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;192&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;/* End staticman comment section and form */&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;193&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;194&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;/* Staticman comment submission confirmation dialog */&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;195&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;196&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;dialog&lt;/span&gt; {
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;197&lt;/span&gt;   &lt;span style=&#34;color:#66d9ef&#34;&gt;display&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;none&lt;/span&gt;;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;198&lt;/span&gt;   &lt;span style=&#34;color:#66d9ef&#34;&gt;position&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;fixed&lt;/span&gt;;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;199&lt;/span&gt;   &lt;span style=&#34;color:#66d9ef&#34;&gt;background-color&lt;/span&gt;: rgb(&lt;span style=&#34;color:#ae81ff&#34;&gt;247&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;247&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;247&lt;/span&gt;);
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;200&lt;/span&gt;   &lt;span style=&#34;color:#66d9ef&#34;&gt;padding&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;25&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;px&lt;/span&gt;;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;201&lt;/span&gt;   &lt;span style=&#34;color:#66d9ef&#34;&gt;padding-top&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;%&lt;/span&gt;;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;202&lt;/span&gt;   &lt;span style=&#34;color:#66d9ef&#34;&gt;top&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;203&lt;/span&gt;   &lt;span style=&#34;color:#66d9ef&#34;&gt;left&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;204&lt;/span&gt;   &lt;span style=&#34;color:#66d9ef&#34;&gt;width&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;%&lt;/span&gt;;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;205&lt;/span&gt;   &lt;span style=&#34;color:#66d9ef&#34;&gt;height&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;%&lt;/span&gt;;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;206&lt;/span&gt;   &lt;span style=&#34;color:#66d9ef&#34;&gt;text-align&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;center&lt;/span&gt;;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;207&lt;/span&gt;}
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;208&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;209&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;dialog&lt;/span&gt;:&lt;span style=&#34;color:#a6e22e&#34;&gt;target&lt;/span&gt; {
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;210&lt;/span&gt;   &lt;span style=&#34;color:#66d9ef&#34;&gt;display&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;block&lt;/span&gt;;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;211&lt;/span&gt;}
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;212&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;213&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;dialog&lt;/span&gt; .&lt;span style=&#34;color:#a6e22e&#34;&gt;btn-primary&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;comment-buttons&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;ok&lt;/span&gt; {
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;214&lt;/span&gt;   &lt;span style=&#34;color:#66d9ef&#34;&gt;width&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;rem&lt;/span&gt;;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;215&lt;/span&gt;}
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;216&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;217&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;/* End staticman comment submission confirmation dialog */&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;218&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;219&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;/* Notify me of new comments checkbox */&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;220&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;221&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;input&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;checkbox&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;checkbox&lt;/span&gt; {
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;222&lt;/span&gt;   &lt;span style=&#34;color:#66d9ef&#34;&gt;display&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;none&lt;/span&gt;;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;223&lt;/span&gt;}
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;224&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;225&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;checkbox-label&lt;/span&gt; {
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;226&lt;/span&gt;   &lt;span style=&#34;color:#66d9ef&#34;&gt;position&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;relative&lt;/span&gt;;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;227&lt;/span&gt;   &lt;span style=&#34;color:#66d9ef&#34;&gt;padding-left&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;px&lt;/span&gt;;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;228&lt;/span&gt;   &lt;span style=&#34;color:#66d9ef&#34;&gt;padding-bottom&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;px&lt;/span&gt;;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;229&lt;/span&gt;   &lt;span style=&#34;color:#66d9ef&#34;&gt;margin-top&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;px&lt;/span&gt;;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;230&lt;/span&gt;   &lt;span style=&#34;color:#66d9ef&#34;&gt;margin-bottom&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;15&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;px&lt;/span&gt;;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;231&lt;/span&gt;   &lt;span style=&#34;color:#66d9ef&#34;&gt;float&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;left&lt;/span&gt;;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;232&lt;/span&gt;}
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;233&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;234&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;checkbox-label&lt;/span&gt;:&lt;span style=&#34;color:#a6e22e&#34;&gt;before&lt;/span&gt; {
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;235&lt;/span&gt;   &lt;span style=&#34;color:#66d9ef&#34;&gt;content&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39; &amp;#39;&lt;/span&gt;;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;236&lt;/span&gt;   &lt;span style=&#34;color:#66d9ef&#34;&gt;display&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;inline&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;block&lt;/span&gt;;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;237&lt;/span&gt;   &lt;span style=&#34;color:#66d9ef&#34;&gt;width&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;25&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;px&lt;/span&gt;;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;238&lt;/span&gt;   &lt;span style=&#34;color:#66d9ef&#34;&gt;height&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;25&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;px&lt;/span&gt;;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;239&lt;/span&gt;   &lt;span style=&#34;color:#66d9ef&#34;&gt;border-width&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;px&lt;/span&gt;;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;240&lt;/span&gt;   &lt;span style=&#34;color:#66d9ef&#34;&gt;border-style&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;solid&lt;/span&gt;;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;241&lt;/span&gt;   &lt;span style=&#34;color:#66d9ef&#34;&gt;vertical-align&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;middle&lt;/span&gt;;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;242&lt;/span&gt;   &lt;span style=&#34;color:#66d9ef&#34;&gt;position&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;relative&lt;/span&gt;;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;243&lt;/span&gt;   &lt;span style=&#34;color:#66d9ef&#34;&gt;bottom&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;px&lt;/span&gt;;&lt;span style=&#34;color:#66d9ef&#34;&gt;color&lt;/span&gt;: rgb(&lt;span style=&#34;color:#ae81ff&#34;&gt;169&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;169&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;169&lt;/span&gt;);    
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;244&lt;/span&gt;}
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;245&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;246&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;checkbox&lt;/span&gt;:&lt;span style=&#34;color:#a6e22e&#34;&gt;checked&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;checkbox-label&lt;/span&gt;:&lt;span style=&#34;color:#a6e22e&#34;&gt;after&lt;/span&gt; {
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;247&lt;/span&gt;   &lt;span style=&#34;color:#66d9ef&#34;&gt;content&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;x&amp;#39;&lt;/span&gt;;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;248&lt;/span&gt;   &lt;span style=&#34;color:#66d9ef&#34;&gt;display&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;inline&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;block&lt;/span&gt;;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;249&lt;/span&gt;   &lt;span style=&#34;color:#66d9ef&#34;&gt;position&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;absolute&lt;/span&gt;;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;250&lt;/span&gt;   &lt;span style=&#34;color:#66d9ef&#34;&gt;width&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;25&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;px&lt;/span&gt;;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;251&lt;/span&gt;   &lt;span style=&#34;color:#66d9ef&#34;&gt;height&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;25&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;px&lt;/span&gt;;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;252&lt;/span&gt;   &lt;span style=&#34;color:#66d9ef&#34;&gt;border-width&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;px&lt;/span&gt;;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;253&lt;/span&gt;   &lt;span style=&#34;color:#66d9ef&#34;&gt;line-height&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;25&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;px&lt;/span&gt;;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;254&lt;/span&gt;   &lt;span style=&#34;color:#66d9ef&#34;&gt;top&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;11&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;px&lt;/span&gt;;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;255&lt;/span&gt;   &lt;span style=&#34;color:#66d9ef&#34;&gt;left&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;px&lt;/span&gt;;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;256&lt;/span&gt;   &lt;span style=&#34;color:#66d9ef&#34;&gt;font-family&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;sans-serif&lt;/span&gt;;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;257&lt;/span&gt;   &lt;span style=&#34;color:#66d9ef&#34;&gt;text-align&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;center&lt;/span&gt;;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;258&lt;/span&gt;}
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;259&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;260&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;/* End notify me of new comments checkbox */&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;261&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;262&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;/* Subscribe to blog posts */&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;263&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;264&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;post-blogsubscriber-field&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;left&lt;/span&gt; {
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;265&lt;/span&gt;   &lt;span style=&#34;color:#66d9ef&#34;&gt;clear&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;left&lt;/span&gt;;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;266&lt;/span&gt;   &lt;span style=&#34;color:#66d9ef&#34;&gt;float&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;left&lt;/span&gt;;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;267&lt;/span&gt;   &lt;span style=&#34;color:#66d9ef&#34;&gt;font&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;inherit&lt;/span&gt;;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;268&lt;/span&gt;   &lt;span style=&#34;color:#66d9ef&#34;&gt;padding&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;px&lt;/span&gt;;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;269&lt;/span&gt;   &lt;span style=&#34;color:#66d9ef&#34;&gt;margin-top&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;px&lt;/span&gt;;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;270&lt;/span&gt;   &lt;span style=&#34;color:#66d9ef&#34;&gt;margin-bottom&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;px&lt;/span&gt;;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;271&lt;/span&gt;   &lt;span style=&#34;color:#66d9ef&#34;&gt;outline-color&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;#9b6bcc&lt;/span&gt;;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;272&lt;/span&gt;   &lt;span style=&#34;color:#66d9ef&#34;&gt;width&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;48&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;%&lt;/span&gt;;  
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;273&lt;/span&gt;}
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;274&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;275&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;post-blogsubscriber-field&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;right&lt;/span&gt; {
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;276&lt;/span&gt;   &lt;span style=&#34;color:#66d9ef&#34;&gt;clear&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;none&lt;/span&gt;;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;277&lt;/span&gt;   &lt;span style=&#34;color:#66d9ef&#34;&gt;float&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;right&lt;/span&gt;;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;278&lt;/span&gt;   &lt;span style=&#34;color:#66d9ef&#34;&gt;font&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;inherit&lt;/span&gt;;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;279&lt;/span&gt;   &lt;span style=&#34;color:#66d9ef&#34;&gt;padding&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;px&lt;/span&gt;;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;280&lt;/span&gt;   &lt;span style=&#34;color:#66d9ef&#34;&gt;margin-top&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;px&lt;/span&gt;;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;281&lt;/span&gt;   &lt;span style=&#34;color:#66d9ef&#34;&gt;margin-bottom&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;px&lt;/span&gt;;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;282&lt;/span&gt;   &lt;span style=&#34;color:#66d9ef&#34;&gt;outline-color&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;#9b6bcc&lt;/span&gt;;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;283&lt;/span&gt;   &lt;span style=&#34;color:#66d9ef&#34;&gt;width&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;48&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;%&lt;/span&gt;;  
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;284&lt;/span&gt;}
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;285&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;286&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;/* End subscribe to blog posts */&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;br&gt;
&lt;h2 id=&#34;contributing-back-to-the-hugo-academic-theme&#34;&gt;Contributing back to the Hugo Academic theme&lt;/h2&gt;
&lt;p&gt;The changes we&amp;rsquo;ve just been discussing have now been submitted back to mainline Hugo Academic theme.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/gcushen/hugo-academic/issues/427&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Issue&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/gcushen/hugo-academic/pull/438&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Pull Request&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>BinaryMist Web Migration</title>
      <link>https://binarymist.io/blog/2018/01/27/binarymist-web-migration/</link>
      <pubDate>Sat, 27 Jan 2018 00:00:00 +1300</pubDate>
      <guid>https://binarymist.io/blog/2018/01/27/binarymist-web-migration/</guid>
      <description>&lt;h2 id=&#34;synopsis&#34;&gt;Synopsis&lt;/h2&gt;
&lt;p&gt;Over the last four to five years I&amp;rsquo;ve been researching alternative bloggnig platforms in order to move from the Wordpress.com platform I&amp;rsquo;ve been blogging from.&lt;/p&gt;
&lt;p&gt;In this post I&amp;rsquo;ll discuss the migration and consolidation of both the BinaryMist blog, and business site.&lt;/p&gt;
&lt;h2 id=&#34;from&#34;&gt;From:&lt;/h2&gt;
&lt;h4 id=&#34;business-site&#34;&gt;Business Site&lt;/h4&gt;
&lt;p&gt;Full custom Nodejs/Express in Docker container on AWS EC2, behind Cloudflare, using my &lt;a href=&#34;https://github.com/binarymist/aws-docker-host&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;aws-docker-host&lt;/a&gt;.&lt;/p&gt;
&lt;h4 id=&#34;blog&#34;&gt;Blog&lt;/h4&gt;
&lt;p&gt;Wordpress.com&lt;/p&gt;
&lt;h2 id=&#34;to&#34;&gt;To:&lt;/h2&gt;
&lt;h4 id=&#34;all-in-one-business-site-with-blog-youre-looking-at-it-now&#34;&gt;All in one: Business Site with Blog (you&amp;rsquo;re looking at it now)&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Hugo with customised Academic theme&lt;/li&gt;
&lt;li&gt;Staticman for blog commenting (See the &lt;a href=&#34;#comments&#34;&gt;bottom of this post&lt;/a&gt; for the working example), as we will discuss in the &lt;a href=&#34;https://binarymist.io/blog/2018/02/24/hugo-with-staticman-commenting-and-subscriptions&#34;&gt;next post&lt;/a&gt;, along with sign-up for receiving new post notifications as they are published (See the &lt;a href=&#34;https://binarymist.io/blog&#34;&gt;post list&lt;/a&gt; for the working example)&lt;/li&gt;
&lt;li&gt;Hosted directly from Github (&lt;a href=&#34;https://github.com/binarymist/BinaryMistBlog/tree/gh-pages&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;gh-pages&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Sitting behind Cloudflare. Cloudflare handles DNS, TLS, caching and expiration, minification, pretty much everything anyone would need for a static and in many cases dynamic website. When Github goes down, Cloudflare continues to serve your cached site&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;why&#34;&gt;Why?&lt;/h2&gt;
&lt;p&gt;Wordpress.com has so many issues that really bugged me. One of my goals was to do everything for no monetary cost.&lt;/p&gt;
&lt;p&gt;Some of the issues I had with The free Wordpress.com platform, unless I paid them money, and even if I did, most of these issues remain:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Inflexibility&lt;/li&gt;
&lt;li&gt;Non-extensibility&lt;/li&gt;
&lt;li&gt;Buggy (especially for dealing with source code)&lt;/li&gt;
&lt;li&gt;Archaic workflow (logging in, admin interface, no source control)&lt;/li&gt;
&lt;li&gt;Very limited customisation&lt;/li&gt;
&lt;li&gt;Unable to apply styling&lt;/li&gt;
&lt;li&gt;Always felt like I was fighting the platform to do just about anything&lt;/li&gt;
&lt;li&gt;Multiple view ports were not well supported&lt;/li&gt;
&lt;li&gt;No control over improving performance&lt;/li&gt;
&lt;li&gt;Backups were a pain, I used &lt;a href=&#34;https://binarymist.wordpress.com/2011/07/28/shell-script-to-provide-monthly-backup-of-your-blog/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;wget&lt;/code&gt; scripts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Charged for domain masking. All Github requires is a &lt;a href=&#34;https://github.com/binarymist/BinaryMistBlog/blob/gh-pages/CNAME&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;CNAME&lt;/code&gt;&lt;/a&gt; file&lt;/li&gt;
&lt;li&gt;So many other issues.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;requirements&#34;&gt;Requirements&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Industry standard markdown instead of some flaky Wordpress editor that always tries to help your formatting, but ends up just getting in your way and doing it wrong. The code highlighting was a prime example of this&lt;/li&gt;
&lt;li&gt;Ideally I wanted to be able to easily display Github gists&lt;/li&gt;
&lt;li&gt;Work in source control, stay in the terminal and a text editor&lt;/li&gt;
&lt;li&gt;Vibrant community. With 104 posts over 8 years on Wordpress.com, it&amp;rsquo;s easy to understand that I take blogging seriously, so I need a platform that is going to be supported for a long time&lt;/li&gt;
&lt;li&gt;Have complete control of the entire system&lt;/li&gt;
&lt;li&gt;Easily share blog posts to social media platforms&lt;/li&gt;
&lt;li&gt;Ability to add tags and categories&lt;/li&gt;
&lt;li&gt;&lt;code&gt;id&lt;/code&gt; attributes added to headings in posts (ideally automatically)&lt;/li&gt;
&lt;li&gt;Email notification of new blog posts&lt;/li&gt;
&lt;li&gt;Reader commenting and subscription to comment threads&lt;/li&gt;
&lt;li&gt;Ability to label posts with the author (Hugo is &lt;a href=&#34;https://github.com/gcushen/hugo-academic/issues/220&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;working&lt;/a&gt; on this). Not a show stopper for me&lt;/li&gt;
&lt;li&gt;Search: Wordpress.com has good search, and I find it really useful to find content that I know I&amp;rsquo;ve written about but can&amp;rsquo;t remember where it is&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;platforms-investigated&#34;&gt;Platforms Investigated&lt;/h2&gt;
&lt;p&gt;The following platforms are listed in order of least interesting to me -&amp;gt; to most. I have a bias toward Nodejs, but as you&amp;rsquo;ll see, the platform I chose wasn&amp;rsquo;t based on Nodejs. A lot of the information I used leading up to the final decision wasn&amp;rsquo;t recorded, as many of the reviews were carried out over the four to five year period, but I did keep an ordered list which was quite fluid, and this is what it looked like, from lowest scoring to highest.&lt;/p&gt;
&lt;h4 id=&#34;wheat&#34;&gt;Wheat&lt;/h4&gt;
&lt;p&gt;Built on Nodejs. No longer actively maintained.&lt;br&gt;
&lt;a href=&#34;https://howtonode.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;howtonode.org&lt;/a&gt; was running on Wheat. Browsing to now yields &lt;code&gt;Internal Server Error&lt;/code&gt;.&lt;br&gt;
&lt;code&gt;wheat2&lt;/code&gt; used to be at &lt;a href=&#34;https://github.com/c9/nog&#34;&gt;https://github.com/c9/nog&lt;/a&gt; but now yields &lt;code&gt;404&lt;/code&gt;.&lt;br&gt;
All the other resources I had links to are now dead.&lt;br&gt;
I think we can safely say Wheat is dead. Please correct me if you know something I don&amp;rsquo;t on Wheat?&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Github: &lt;a href=&#34;https://github.com/creationix/wheat&#34;&gt;https://github.com/creationix/wheat&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;used-to-be-a-react-blog-jlongstercomhttpsgithubcomjlongsterblog&#34;&gt;Used to be a React blog (&lt;a href=&#34;https://github.com/jlongster/blog&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;jlongster.com&lt;/a&gt;)&lt;/h4&gt;
&lt;p&gt;Cool! I like React. Community, docs, activity? Ah&amp;hellip; no.&lt;/p&gt;
&lt;h4 id=&#34;kerouac&#34;&gt;Kerouac&lt;/h4&gt;
&lt;p&gt;Built on Nodejs/Express. Allows you to add dynamic functionality as you have full access to express.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Github: &lt;a href=&#34;https://github.com/jaredhanson/kerouac&#34;&gt;https://github.com/jaredhanson/kerouac&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Github stars: 84&lt;br&gt;
Github contributors: 1&lt;/p&gt;
&lt;h4 id=&#34;jekyll&#34;&gt;Jekyll&lt;/h4&gt;
&lt;p&gt;I had a play with this Ruby platform about four years ago, along with &lt;a href=&#34;http://octopress.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;octopress&lt;/a&gt; and at that point it didn&amp;rsquo;t score very high for me. Don&amp;rsquo;t ask me to much about it now&amp;hellip; it was four years ago. 😨&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://georgecushen.com/create-your-website-with-hugo/#hugo-vs-jekyll&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Hugo vs Jekyll&lt;/a&gt; points (From George Cushen (Hugo theme Academic creator))&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Home: &lt;a href=&#34;https://jekyllrb.com&#34;&gt;https://jekyllrb.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Github: &lt;a href=&#34;https://github.com/jekyll/jekyll&#34;&gt;https://github.com/jekyll/jekyll&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Github stars: 32618&lt;br&gt;
Github contributors: 750&lt;/p&gt;
&lt;h4 id=&#34;wintersmith&#34;&gt;Wintersmith&lt;/h4&gt;
&lt;p&gt;Built on Nodejs with coffee script&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Home: &lt;a href=&#34;http://wintersmith.io&#34;&gt;http://wintersmith.io&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Github &lt;a href=&#34;https://github.com/jnordberg/wintersmith&#34;&gt;https://github.com/jnordberg/wintersmith&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Good examples: &lt;a href=&#34;https://github.com/jnordberg/wintersmith/wiki/Showcase&#34;&gt;https://github.com/jnordberg/wintersmith/wiki/Showcase&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Github stars: 3286&lt;br&gt;
Github contributors: 41&lt;/p&gt;
&lt;h4 id=&#34;keystonejs&#34;&gt;KeystoneJS&lt;/h4&gt;
&lt;p&gt;Built on Nodejs/Express and MongoDB&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Home: &lt;a href=&#34;http://keystonejs.com&#34;&gt;http://keystonejs.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Github: &lt;a href=&#34;https://github.com/keystonejs/keystone&#34;&gt;https://github.com/keystonejs/keystone&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Github stars: 11707&lt;br&gt;
Github contributors: 196&lt;/p&gt;
&lt;h4 id=&#34;docpad&#34;&gt;DocPad&lt;/h4&gt;
&lt;p&gt;Built on Nodejs/Express. Completely file based. No databases, but can use one if you want.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Home: &lt;a href=&#34;http://docpad.org&#34;&gt;http://docpad.org&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Github: &lt;a href=&#34;https://github.com/docpad/docpad&#34;&gt;https://github.com/docpad/docpad&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Github stars: 2945&lt;br&gt;
Github contributors: 43&lt;/p&gt;
&lt;h4 id=&#34;ghost&#34;&gt;Ghost&lt;/h4&gt;
&lt;p&gt;Built on Nodejs/Express. I know a few people that have had good success with Ghost.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Home: &lt;a href=&#34;https://ghost.org/&#34;&gt;https://ghost.org/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Github: &lt;a href=&#34;https://github.com/TryGhost/Ghost&#34;&gt;https://github.com/TryGhost/Ghost&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Github stars: 24681&lt;br&gt;
Github contributors: 278&lt;/p&gt;
&lt;h4 id=&#34;harp&#34;&gt;Harp&lt;/h4&gt;
&lt;p&gt;Built on Nodejs.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Home: &lt;a href=&#34;http://harpjs.com&#34;&gt;http://harpjs.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Github: &lt;a href=&#34;https://github.com/sintaxi/harp&#34;&gt;https://github.com/sintaxi/harp&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Github stars: 4571&lt;br&gt;
Github contributors: 23&lt;/p&gt;
&lt;h4 id=&#34;hugo&#34;&gt;Hugo&lt;/h4&gt;
&lt;p&gt;Written in Go, Hugo has been around since June 2013, and is reaching maturity quickly. Has a very large base of consumers and committers. Excellent documentation, both official and community provided. Has hundreds of customisable themes produced by many contributors. Builds your pages of markdown in &amp;lt; 1 ms per page. There is no such thing as waiting for your site to build. I&amp;rsquo;ve spent about four weeks on the BinaryMist site and it&amp;rsquo;s a dream to work with. Instant live reload out of the box also makes working with Hugo frictionless.&lt;/p&gt;
&lt;p&gt;All the content you will need to create can be done so in markdown, in your file-system, in source control, in the terminal. Backups are no longer an issue.&lt;/p&gt;
&lt;p&gt;Any of the theme aspects you can override, simply by copying the specific template or partial from your chosen theme layout directory to the same structure within your sites root directory and making your desired modifications. If you make large changes, consider submitting them back to the theme repository by way of &lt;a href=&#34;https://github.com/gcushen/hugo-academic/pull/438&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Pull Request&lt;/a&gt; (go-on, give back), which is what I did with my Staticman additions to the Academic theme.&lt;/p&gt;
&lt;p&gt;Hugo has &lt;a href=&#34;https://gohugo.io/content-management/shortcodes/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;shortcodes&lt;/a&gt; for many things. such as embedding &lt;a href=&#34;https://gohugo.io/content-management/shortcodes/#speakerdeck&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;speakerdeck&lt;/a&gt; presentations, different video formats, (examples &lt;a href=&#34;https://binarymist.io/event/js-remote-conf-2017-the-art-of-exploitation/&#34;&gt;here&lt;/a&gt;) &lt;a href=&#34;https://gohugo.io/content-management/shortcodes/#tweet&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;tweets&lt;/a&gt;, (&lt;a href=&#34;https://binarymist.io/project/service-development-team-security-training/#what-others-are-saying&#34;&gt;example&lt;/a&gt;), plus you can create your own custom shortcodes. Gists are easily pulled in with the Hugo &lt;a href=&#34;https://gohugo.io/content-management/shortcodes/#gist&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;gist shortcode&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The Hugo &lt;a href=&#34;https://gohugo.io/content-management/syntax-highlighting/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;highlight&lt;/code&gt;&lt;/a&gt; shortcode is powerful, flexible, and just seems to work well. Many languages and styles are supported out of the box (code examples below are using it). If for some reason, it doesn&amp;rsquo;t give you enough power, then just use something else. You&amp;rsquo;re not locked into anything.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://gohugo.io/tools/search/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Search&lt;/a&gt;, although I haven&amp;rsquo;t got &lt;a href=&#34;https://github.com/aerobatic/hugo-search-demo&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;this&lt;/a&gt; set-up yet. Let me know if you would find this helpful. Either &lt;a href=&#34;http://localhost:1313/#contact&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;contact me&lt;/a&gt;, leave a &lt;a href=&#34;#comments&#34;&gt;comment&lt;/a&gt;, or &lt;a href=&#34;https://github.com/binarymist/BinaryMistBlog/issues&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;submit an issue&lt;/a&gt;, as I&amp;rsquo;m generally lazy and may not get a round to it unless someone puts some pressure on me.&lt;/p&gt;
&lt;p&gt;The biggest problem for me was migrating existing Wordpress.com posts. I ended up just creating a collection of redirects to the legacy posts. In saying that, some appear to have had better success, but I just gave up on migrating.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/thomasf/exitwp&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Exitwp&lt;/a&gt; seems to be the main tool for (WP -&amp;gt;) Immigrants.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Abhishek Pandey &lt;a href=&#34;http://abhipandey.com/2015/09/moving-to-hugo/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Migration&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Venkatt Guhesan &lt;a href=&#34;https://mythinkpond.com/post/2017-09-23-converting-wordpress-hosted-blog-to-hugo/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Migration&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&#34;https://eklausmeier.wordpress.com/2017/04/24/converting-wordpress-export-file-to-hugo/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;wp2hugo&lt;/a&gt; is another.&lt;/p&gt;
&lt;p&gt;Then there is Hugo &lt;a href=&#34;https://gohugo.io/tools/migrations/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;migration docs&lt;/a&gt;.&lt;/p&gt;
&lt;br&gt;
&lt;ul&gt;
&lt;li&gt;Home: &lt;a href=&#34;https://gohugo.io&#34;&gt;https://gohugo.io&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Github: &lt;a href=&#34;https://github.com/gohugoio/hugo&#34;&gt;https://github.com/gohugoio/hugo&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Github stars: 22219&lt;br&gt;
Github contributors: 521&lt;/p&gt;
&lt;h5 id=&#34;hugo-themes&#34;&gt;Hugo Themes&lt;/h5&gt;
&lt;p&gt;Knock yourself out: &lt;a href=&#34;https://themes.gohugo.io/&#34;&gt;https://themes.gohugo.io/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I chose &lt;a href=&#34;https://themes.gohugo.io/academic/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Academic&lt;/a&gt;, as it was the closest fit for when I realised I could combine both blog and business site.&lt;/p&gt;
&lt;p&gt;At this point, I was still thinking I&amp;rsquo;d have to host the website in a Docker container using my &lt;a href=&#34;https://github.com/binarymist/aws-docker-host&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;aws-docker-host&lt;/a&gt; which works flawlessly and costs nothing, but as Docker is completely unnecessary if you have Github with a decent CDN in front of it, like Cloudflare, I&amp;rsquo;ll skip the process I took to work out how that would be done. If you are interested, just ask in the &lt;a href=&#34;#comments&#34;&gt;comments section&lt;/a&gt; bellow.&lt;/p&gt;
&lt;h2 id=&#34;the-process&#34;&gt;The Process&lt;/h2&gt;
&lt;p&gt;I needed to move the legacy BinaryMist blog, which was long over due for this, from Wordpress.com to Github. I&amp;rsquo;ve added redirect stubs to the &lt;a href=&#34;https://binarymist.io/blog&#34;&gt;list of posts&lt;/a&gt;, that lead to many of the legacy posts on the Wordpress.com platform which haven&amp;rsquo;t been migrated to the new platform. Going forward, all posts will be published from &lt;a href=&#34;https://binarymist.io/blog&#34;&gt;binarymist.io/blog&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Once I found the theme for Hugo that would work best for my needs, I realised, I&amp;rsquo;d be able to not only migrate the blog, but also the BinaryMist business site, both to a really flexible platform.&lt;/p&gt;
&lt;p&gt;I can work on blog posts on a specific branch without pushing to Github until finished, or just mark them as &lt;code&gt;draft = true&lt;/code&gt;, or put the &lt;code&gt;date&lt;/code&gt; to sometime in the future in the post&amp;rsquo;s front-matter. This allows one to work on other content and merge reader comments (if you have them set-up, which &lt;a href=&#34;#comments&#34;&gt;I do&lt;/a&gt;) which are issued as pull requests directly into this Github repo by Staticman.&lt;/p&gt;
&lt;h3 id=&#34;setting-up-hugo&#34;&gt;Setting up Hugo&lt;/h3&gt;
&lt;p&gt;As I was playing with the Academic theme, and reading a blog post from the Academic creator, the version of Hugo in the Ubuntu Software Sources was very old, so I installed Hugo (.deb binary) on my machines, starting with the directions &lt;a href=&#34;https://georgecushen.com/create-your-website-with-hugo/#installing-hugo&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;here&lt;/a&gt;, which linked to &lt;a href=&#34;https://github.com/gohugoio/hugo/releases&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Hugo Releases&lt;/a&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;cd ~
wget https://github.com/gohugoio/hugo/releases/download/v0.31/hugo_0.31_Linux-64bit.deb &lt;span style=&#34;color:#75715e&#34;&gt;# or what ever the latest version is.&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;# This is where you should check the checksum... Then:&lt;/span&gt;
sudo dpkg -i hugo*.deb&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Once I had Hugo installed, I Worked through step 2 and 3 of the &lt;a href=&#34;https://gohugo.io/getting-started/quick-start/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;quick start guide&lt;/a&gt; to create the site, committing each change as I went:&lt;/p&gt;
&lt;p&gt;From my local Source directory:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;hugo new site BinaryMistBlog
cd BinaryMistBlog
git init
&lt;span style=&#34;color:#75715e&#34;&gt;# As I had decided to use the academic theme:&lt;/span&gt;
git submodule add https://github.com/gcushen/hugo-academic.git themes/academic&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now from step 3, 4 and 5 of the Installation section of the &lt;a href=&#34;https://themes.gohugo.io/theme/academic/post/getting-started/#installation&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Getting Started&lt;/a&gt; post from the &lt;a href=&#34;https://themes.gohugo.io/theme/academic/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Demo&lt;/a&gt;/&lt;a href=&#34;https://github.com/gcushen/hugo-academic/tree/master/exampleSite&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;exampleSite&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Copy the example site to that which will become your personal site&lt;/span&gt;
cp -av themes/academic/exampleSite/* .
&lt;span style=&#34;color:#75715e&#34;&gt;# Start hugo&lt;/span&gt;
hugo server&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;By the way, &lt;code&gt;hugo server&lt;/code&gt; is about the only command I use when working on my site. There is one other script that gets used to make my site live, but I&amp;rsquo;ll cover that in a bit.&lt;/p&gt;
&lt;p&gt;Once you&amp;rsquo;ve done any customisations you may want to do to your new site (of course you can do this latter instead if you like), it&amp;rsquo;s  time to set-up how you are going to deploy your static site. For me, hosting directly from where your source control is is a no-brainer. Once this is set-up, there is one script to run every time you want to deploy, which as I said, I&amp;rsquo;ll cover soon.&lt;/p&gt;
&lt;p&gt;I chose to have my source on the &lt;a href=&#34;https://github.com/binarymist/BinaryMistBlog/tree/master&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;master&lt;/a&gt; branch, and my generated site (which is generated to the &lt;code&gt;public/&lt;/code&gt; directory of my local sites root directory, on the &lt;a href=&#34;https://github.com/binarymist/BinaryMistBlog/tree/gh-pages&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;gh-pages&lt;/a&gt; branch.&lt;/p&gt;
&lt;p&gt;Before the following steps, I needed to install the latest git as there was a bug in the current version in the Ubuntu Software Sources that affects the git &lt;code&gt;worktree&lt;/code&gt; feature. The resources I used for this:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/gohugoio/hugo/issues/3232&#34;&gt;https://github.com/gohugoio/hugo/issues/3232&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://discourse.gohugo.io/t/github-deployment-using-worktrees-failing/5918/7&#34;&gt;https://discourse.gohugo.io/t/github-deployment-using-worktrees-failing/5918/7&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://discourse.gohugo.io/t/simple-deployment-to-gh-pages/5003&#34;&gt;https://discourse.gohugo.io/t/simple-deployment-to-gh-pages/5003&lt;/a&gt;&lt;br&gt;
which led to:&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://unix.stackexchange.com/questions/33617/how-can-i-update-to-a-newer-version-of-git-using-apt-get&#34;&gt;https://unix.stackexchange.com/questions/33617/how-can-i-update-to-a-newer-version-of-git-using-apt-get&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To get your new git:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;sudo add-apt-repository ppa:git-core/ppa
sudo apt-get update
sudo apt-get install git&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now&amp;hellip; for the next steps, head on over to: &lt;a href=&#34;https://gohugo.io/hosting-and-deployment/hosting-on-github/#deployment-from-your-gh-pages-branch&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Preparations for &lt;code&gt;gh-pages&lt;/code&gt; Branch&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Then add the commands to a script as the documentation &lt;a href=&#34;https://gohugo.io/hosting-and-deployment/hosting-on-github/#put-it-into-a-script&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;suggests&lt;/a&gt;. There is a script that you can take and customise. My script looks like &lt;a href=&#34;https://github.com/binarymist/BinaryMistBlog/blob/master/publish-to-gh-pages.sh&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;this&lt;/a&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#!/bin/bash
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Run from public&lt;/span&gt;

&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[[&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;git status -s&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;]]&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;
    echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;The working directory is dirty. Please commit any pending changes.&amp;#34;&lt;/span&gt;
    exit 1;
&lt;span style=&#34;color:#66d9ef&#34;&gt;fi&lt;/span&gt;

cd ..

echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Deleting old publication&amp;#34;&lt;/span&gt;
rm -rf public
mkdir public
git worktree prune
rm -rf .git/worktrees/public/

echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Checking out gh-pages branch into public&amp;#34;&lt;/span&gt;
git worktree add -B gh-pages public origin/gh-pages

echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Removing existing files&amp;#34;&lt;/span&gt;
rm -rf public/*

echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Generating site&amp;#34;&lt;/span&gt;
hugo

echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Updating gh-pages branch&amp;#34;&lt;/span&gt;
echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;cd&amp;#39;ing into public&amp;#34;&lt;/span&gt;
cd public

echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Adding back the CNAME after deletion&amp;#34;&lt;/span&gt;
echo binarymist.io &amp;gt; CNAME

echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;git add&amp;#39;ing all to staging&amp;#34;&lt;/span&gt;
git add --all
echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;git commit&amp;#39;ing&amp;#34;&lt;/span&gt;
git commit -m &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Publishing to gh-pages (publish.sh)&amp;#34;&lt;/span&gt;

echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Do you wish to push this commit?&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;select&lt;/span&gt; yn in &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Yes&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;No&amp;#34;&lt;/span&gt;; &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;case&lt;/span&gt; $yn in
        Yes &lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; git push origin gh-pages; break;;
        No &lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; exit;;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;esac&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;done&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;br&gt;
&lt;h2 id=&#34;my-hugo-workflow&#34;&gt;My Hugo Workflow&lt;/h2&gt;
&lt;p&gt;OK, so we&amp;rsquo;re ready to start &lt;a href=&#34;https://gohugo.io/themes/customizing/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;customising&lt;/a&gt; our site and blogging. My workflow involves one console (&lt;a href=&#34;https://binarymist.io/blog/2013/01/19/a-decent-console-for-windows/&#34;&gt;&lt;code&gt;terminator&lt;/code&gt;&lt;/a&gt;, that&amp;rsquo;s on Linux of course) split into four terminals:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Terminal 1 runs &lt;code&gt;hugo server&lt;/code&gt;, I leave this running, it tells me if I introduce any errors, as I introduce them, and tells me what they are, as Hugo uses live reload, everything is instant, so you know as soon as you make any change if there is an issue&lt;/li&gt;
&lt;li&gt;Terminal 2 runs my diffing tool (currently &lt;code&gt;diffuse&lt;/code&gt;) as in, from within the root directory of my source, I just [up-arrow] -&amp;gt; [Enter] (which gives me &lt;code&gt;diffuse -m&lt;/code&gt;) any time I want to check my changes&lt;/li&gt;
&lt;li&gt;Terminal 3 Stays on my master branch. This is where I &lt;code&gt;git status&lt;/code&gt;, &lt;code&gt;git commit&lt;/code&gt;, &lt;code&gt;git push&lt;/code&gt; from, etc. What happens in master in no way affects what is being pushed to gh-pages (live) though. &lt;code&gt;hugo&lt;/code&gt; generates the static site from what ever is in the working directory, see next terminal&lt;/li&gt;
&lt;li&gt;All that happens in the forth terminal, is I run &lt;code&gt;../&lt;/code&gt;&lt;a href=&#34;https://github.com/binarymist/BinaryMistBlog/blob/master/publish-to-gh-pages.sh&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;publish-to-gh-pages.sh&lt;/code&gt;&lt;/a&gt; from the sites root directory, which makes the site live. That&amp;rsquo;s right, one script to make your site live&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Now this is frictionless blogging 😆&lt;/p&gt;
&lt;p&gt;If you are interested in getting a similar site set-up and are struggling, &lt;a href=&#34;https://binarymist.io/#contact&#34;&gt;let me know&lt;/a&gt; and I&amp;rsquo;ll be happy to help.&lt;/p&gt;
&lt;p&gt;In the &lt;a href=&#34;https://binarymist.io/blog/2018/02/24/hugo-with-staticman-commenting-and-subscriptions&#34;&gt;next post&lt;/a&gt; we will discuss how commenting and blog subscription was set-up&amp;hellip; Introducing dynamic behaviour to a static website&amp;hellip;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Holistic Info-Sec for Web Developers</title>
      <link>https://binarymist.io/publication/holistic-infosec-for-web-developers/</link>
      <pubDate>Fri, 01 Dec 2017 00:00:00 +0000</pubDate>
      <guid>https://binarymist.io/publication/holistic-infosec-for-web-developers/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Talk - Secrets of a High Performance Security Focussed Agile Team</title>
      <link>https://binarymist.io/event/bsides-talk-wellington-secrets-of-a-high-performance-security-focussed-agile-team/</link>
      <pubDate>Thu, 23 Nov 2017 16:00:00 +1300</pubDate>
      <guid>https://binarymist.io/event/bsides-talk-wellington-secrets-of-a-high-performance-security-focussed-agile-team/</guid>
      <description>
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/hRs8lWtR5LM&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;br&gt;
</description>
    </item>
    
    <item>
      <title>Talk - Secrets of a High Performance Security Focussed Agile Team</title>
      <link>https://binarymist.io/event/all-day-devops-2017-talk-secrets-of-a-high-performance-security-focussed-agile-team/</link>
      <pubDate>Tue, 24 Oct 2017 16:30:00 +1300</pubDate>
      <guid>https://binarymist.io/event/all-day-devops-2017-talk-secrets-of-a-high-performance-security-focussed-agile-team/</guid>
      <description>
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/ApVI7-g_wpk&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;br&gt;
</description>
    </item>
    
    <item>
      <title>Workshop - Web Developer Quiz Night</title>
      <link>https://binarymist.io/event/owaspnz-chch-meetup-2017-workshop-quiz-night/</link>
      <pubDate>Wed, 28 Jun 2017 19:00:00 +1200</pubDate>
      <guid>https://binarymist.io/event/owaspnz-chch-meetup-2017-workshop-quiz-night/</guid>
      <description>&lt;p&gt;Kim will be covering:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://f0.holisticinfosecforwebdevelopers.com/chap03.html#starting-with-the-30000-foot-view&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Threat modelling&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://f0.holisticinfosecforwebdevelopers.com/chap06.html#process-and-practises-agile-development-and-practices&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Developer security&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://f0.holisticinfosecforwebdevelopers.com/chap07.html#physical&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Physical security&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://f0.holisticinfosecforwebdevelopers.com/chap08.html#people&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Social Engineering&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://f1.holisticinfosecforwebdevelopers.com/chap03.html#vps&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;VPS security / hardening&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://f1.holisticinfosecforwebdevelopers.com/chap04.html#network&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Network Security&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://f1.holisticinfosecforwebdevelopers.com/chap05.html#cloud&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Cloud Security&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://f1.holisticinfosecforwebdevelopers.com/chap06.html#web-applications&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Application Security&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;There will be prizes worth working for, especially the team that takes first place.&lt;/p&gt;
&lt;p&gt;If you want to win, I&amp;rsquo;d suggest getting familiar with the content in my book series.&lt;/p&gt;
&lt;p&gt;Questions have also come from many other sources&lt;/p&gt;
&lt;p&gt;The below was the quiz:&lt;/p&gt;
&lt;script async class=&#34;speakerdeck-embed&#34; data-id=&#34;f02090963f7b48c08cad89bd11bf6c7c&#34; data-ratio=&#34;1.33333333333333&#34; src=&#34;//speakerdeck.com/assets/embed.js&#34;&gt;&lt;/script&gt;
&lt;br&gt;
&lt;h2 id=&#34;what-others-have-said&#34;&gt;What others have said&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://www.meetup.com/OWASP-New-Zealand-Chapter-Christchurch/events/236349292/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;













&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;
        &lt;img alt=&#34;&#34; srcset=&#34;
               /media/talk/owaspnz-chch-meetup-2017-workshop-quiz-night-feedback0_hue0311ddeae221a19eb50c408cf4eeb60_9598_bec3d98b9b39181ddeaff2469b7463d9.png 400w,
               /media/talk/owaspnz-chch-meetup-2017-workshop-quiz-night-feedback0_hue0311ddeae221a19eb50c408cf4eeb60_9598_6fdeade18f7c25510b66d2546f627a4a.png 760w,
               /media/talk/owaspnz-chch-meetup-2017-workshop-quiz-night-feedback0_hue0311ddeae221a19eb50c408cf4eeb60_9598_1200x1200_fit_lanczos_2.png 1200w&#34;
               src=&#34;https://binarymist.io/media/talk/owaspnz-chch-meetup-2017-workshop-quiz-night-feedback0_hue0311ddeae221a19eb50c408cf4eeb60_9598_bec3d98b9b39181ddeaff2469b7463d9.png&#34;
               width=&#34;760&#34;
               height=&#34;141&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;&lt;/a&gt;
&lt;a href=&#34;https://www.meetup.com/OWASP-New-Zealand-Chapter-Christchurch/events/236349292/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;













&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;
        &lt;img alt=&#34;&#34; srcset=&#34;
               /media/talk/owaspnz-chch-meetup-2017-workshop-quiz-night-feedback1_hudaa52d2607b767be5477218c5a5514df_7560_df274d0b8b0bc2b0271c6cb967de671f.png 400w,
               /media/talk/owaspnz-chch-meetup-2017-workshop-quiz-night-feedback1_hudaa52d2607b767be5477218c5a5514df_7560_83b7f355b2951444b9a99308be62b051.png 760w,
               /media/talk/owaspnz-chch-meetup-2017-workshop-quiz-night-feedback1_hudaa52d2607b767be5477218c5a5514df_7560_1200x1200_fit_lanczos_2.png 1200w&#34;
               src=&#34;https://binarymist.io/media/talk/owaspnz-chch-meetup-2017-workshop-quiz-night-feedback1_hudaa52d2607b767be5477218c5a5514df_7560_df274d0b8b0bc2b0271c6cb967de671f.png&#34;
               width=&#34;760&#34;
               height=&#34;108&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;&lt;/a&gt;
&lt;a href=&#34;https://www.meetup.com/OWASP-New-Zealand-Chapter-Christchurch/events/236349292/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;













&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;
        &lt;img alt=&#34;&#34; srcset=&#34;
               /media/talk/owaspnz-chch-meetup-2017-workshop-quiz-night-feedback2_hu0eaaae30a15137f2e6f8e9a7b14ad5ee_8104_c65be90e70a89f7bb7b29edb106ef813.png 400w,
               /media/talk/owaspnz-chch-meetup-2017-workshop-quiz-night-feedback2_hu0eaaae30a15137f2e6f8e9a7b14ad5ee_8104_12eba1c0ce4d738e9c20786c0b306849.png 760w,
               /media/talk/owaspnz-chch-meetup-2017-workshop-quiz-night-feedback2_hu0eaaae30a15137f2e6f8e9a7b14ad5ee_8104_1200x1200_fit_lanczos_2.png 1200w&#34;
               src=&#34;https://binarymist.io/media/talk/owaspnz-chch-meetup-2017-workshop-quiz-night-feedback2_hu0eaaae30a15137f2e6f8e9a7b14ad5ee_8104_c65be90e70a89f7bb7b29edb106ef813.png&#34;
               width=&#34;760&#34;
               height=&#34;167&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;&lt;/a&gt;&lt;/p&gt;
&lt;br&gt;
</description>
    </item>
    
    <item>
      <title>Workshop - Developing a high-performance security focussed Agile Team</title>
      <link>https://binarymist.io/event/devseccon-asia-2017-workshop-developing-a-high-perf-security-focussed-agile-team/</link>
      <pubDate>Thu, 23 Feb 2017 13:00:00 +1300</pubDate>
      <guid>https://binarymist.io/event/devseccon-asia-2017-workshop-developing-a-high-perf-security-focussed-agile-team/</guid>
      <description>&lt;p&gt;Kim will then discuss and demo a set of light weight processes, practises and tools, that when combined have proven their value in:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Aiding high throughput (reducing time to market)&lt;/li&gt;
&lt;li&gt;Significantly increasing quality (finding and removing bugs)&lt;/li&gt;
&lt;li&gt;Without de-scoping&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;and all while reducing total project cost (fact).
If this sounds like breaking the laws of physics, or too good to be true, then this workshop is for you.&lt;/p&gt;
&lt;p&gt;Kim will finish off with the habits of top developers and how we can make them part of our lives.&lt;/p&gt;
&lt;script async class=&#34;speakerdeck-embed&#34; data-id=&#34;339e2d4e2d1f44a8bfaf33d50a163339&#34; data-ratio=&#34;1.33159947984395&#34; src=&#34;//speakerdeck.com/assets/embed.js&#34;&gt;&lt;/script&gt;
&lt;br&gt;
</description>
    </item>
    
    <item>
      <title>Workshop - Holistic Info-Sec for Computer Science Students</title>
      <link>https://binarymist.io/event/uca-2016-workshop-holistic-info-sec-for-comp-sci-students/</link>
      <pubDate>Mon, 05 Sep 2016 10:00:00 +1200</pubDate>
      <guid>https://binarymist.io/event/uca-2016-workshop-holistic-info-sec-for-comp-sci-students/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Workshop - Holistic Info-Sec for Web Developers</title>
      <link>https://binarymist.io/event/hope-2016-workshop-holistic-info-sec-for-web-developers/</link>
      <pubDate>Sat, 23 Jul 2016 10:00:00 +1200</pubDate>
      <guid>https://binarymist.io/event/hope-2016-workshop-holistic-info-sec-for-web-developers/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://xi.hope.net/workshops.html#-holistic-info-sec-for-web-developers-&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;













&lt;figure  id=&#34;figure-the-eleventh-hope-conference&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;
        &lt;img alt=&#34;The eleventh hope conference&#34; srcset=&#34;
               /media/talk/hope-2016_hu2115ddf1cd8ed128baa6e5528080cbc9_33200_104d2d0532b26bd481706ee2d14672a2.png 400w,
               /media/talk/hope-2016_hu2115ddf1cd8ed128baa6e5528080cbc9_33200_0558948350d1b499b3d755b0b8070653.png 760w,
               /media/talk/hope-2016_hu2115ddf1cd8ed128baa6e5528080cbc9_33200_1200x1200_fit_lanczos_2.png 1200w&#34;
               src=&#34;https://binarymist.io/media/talk/hope-2016_hu2115ddf1cd8ed128baa6e5528080cbc9_33200_104d2d0532b26bd481706ee2d14672a2.png&#34;
               width=&#34;600&#34;
               height=&#34;600&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      The eleventh hope conference
    &lt;/figcaption&gt;&lt;/figure&gt;&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Workshop - Tools, Password Profiling, Brute Forcing</title>
      <link>https://binarymist.io/event/isig-2016-talk-tools-password-profiling-brute-forcing/</link>
      <pubDate>Wed, 27 Apr 2016 19:30:00 +1200</pubDate>
      <guid>https://binarymist.io/event/isig-2016-talk-tools-password-profiling-brute-forcing/</guid>
      <description>&lt;p&gt;
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/zevpMvQwWOU&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;br&gt;
&lt;br&gt;&lt;/p&gt;
&lt;script async class=&#34;speakerdeck-embed&#34; data-id=&#34;85f2b3e9491b4bc8b1465782412a7396&#34; data-ratio=&#34;1.33333333333333&#34; src=&#34;//speakerdeck.com/assets/embed.js&#34;&gt;&lt;/script&gt;
&lt;br&gt;
</description>
    </item>
    
    <item>
      <title>Talk - Password Profiling, Brute Forcing</title>
      <link>https://binarymist.io/event/toastmasters-2015-talk-password-profiling/</link>
      <pubDate>Fri, 04 Dec 2015 07:00:00 +1300</pubDate>
      <guid>https://binarymist.io/event/toastmasters-2015-talk-password-profiling/</guid>
      <description>&lt;p&gt;Kim then takes the word-lists and analysis of failed and successful login attempts to a web application and educates a collection of brute-forcing tools what an unsuccessful and successful login looks like. Then run the brute-forcing tools until the credentials have been discovered. This demonstrates that common password strategies are no longer sufficient to stop full account compromise and worse.&lt;/p&gt;
&lt;p&gt;This is followed up with some tips on how to make this process a lot harder for attackers. Content can be found in Kims Holistic Infosec for Web Developers book.&lt;/p&gt;
&lt;p&gt;
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/zevpMvQwWOU&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;br&gt;
&lt;br&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Node.js Asynchronicity and Callback Nesting</title>
      <link>https://binarymist.io/blog/2014/07/26/node.js-asynchronicity-and-callback-nesting/</link>
      <pubDate>Sat, 26 Jul 2014 00:00:00 +1200</pubDate>
      <guid>https://binarymist.io/blog/2014/07/26/node.js-asynchronicity-and-callback-nesting/</guid>
      <description>&lt;html&gt;
  &lt;head&gt;
    &lt;title&gt;Node.js Asynchronicity and Callback Nesting&lt;/title&gt;
    &lt;link rel=&#34;canonical&#34; href=&#34;https://binarymist.wordpress.com/2014/07/26/node-js-asynchronicity-and-callback-nesting/&#34;/&gt;
    &lt;meta http-equiv=&#34;content-type&#34; content=&#34;text/html; charset=utf-8&#34;/&gt;
    &lt;meta http-equiv=&#34;refresh&#34; content=&#34;3; url=https://binarymist.wordpress.com/2014/07/26/node-js-asynchronicity-and-callback-nesting/&#34;/&gt;
  &lt;/head&gt;
&lt;/html&gt;
</description>
    </item>
    
    <item>
      <title>Exploring JavaScript Closures</title>
      <link>https://binarymist.io/blog/2014/05/31/exploring-javascript-closures/</link>
      <pubDate>Sat, 31 May 2014 00:00:00 +1200</pubDate>
      <guid>https://binarymist.io/blog/2014/05/31/exploring-javascript-closures/</guid>
      <description>&lt;html&gt;
  &lt;head&gt;
    &lt;title&gt;Exploring JavaScript Closures&lt;/title&gt;
    &lt;link rel=&#34;canonical&#34; href=&#34;https://binarymist.wordpress.com/2014/05/31/javascript-closures/&#34;/&gt;
    &lt;meta http-equiv=&#34;content-type&#34; content=&#34;text/html; charset=utf-8&#34;/&gt;
    &lt;meta http-equiv=&#34;refresh&#34; content=&#34;3; url=https://binarymist.wordpress.com/2014/05/31/javascript-closures/&#34;/&gt;
  &lt;/head&gt;
&lt;/html&gt;
</description>
    </item>
    
    <item>
      <title>Talk - What&#39;s Our Software Doing With All That User Input</title>
      <link>https://binarymist.io/event/owaspnzday-2013-talk-whats-our-software-doing-with-all-that-user-input/</link>
      <pubDate>Thu, 12 Sep 2013 09:50:00 +1200</pubDate>
      <guid>https://binarymist.io/event/owaspnzday-2013-talk-whats-our-software-doing-with-all-that-user-input/</guid>
      <description>&lt;p&gt;We have a vast collection of libraries, techniques, cheat sheets, tutorials, guides and tools at our disposal. I often find myself thinking… how can we commoditise the sanitisation of user input and I keep coming up with the same answer. It’s not easy. Every application has a completely different set of concerns.&lt;/p&gt;
&lt;p&gt;In order for our software to be shielded from an attack, the builders must think like attackers.&lt;/p&gt;
&lt;p&gt;In this talk I’ll attempt to:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Increase our knowledge and awareness&lt;/li&gt;
&lt;li&gt;Discuss practical techniques and approaches that increase our defences&lt;/li&gt;
&lt;li&gt;Break some software&lt;/li&gt;
&lt;/ul&gt;
&lt;script async class=&#34;speakerdeck-embed&#34; data-id=&#34;bd7eb04bff6147bbaa67911e2e48d45c&#34; data-ratio=&#34;1.33333333333333&#34; src=&#34;//speakerdeck.com/assets/embed.js&#34;&gt;&lt;/script&gt;
&lt;br&gt;
</description>
    </item>
    
    <item>
      <title>Workshop - Security Testing with Kim Carter</title>
      <link>https://binarymist.io/event/anztb-2013-workshop-security-testing-with-kim-carter/</link>
      <pubDate>Mon, 26 Aug 2013 17:30:00 +1200</pubDate>
      <guid>https://binarymist.io/event/anztb-2013-workshop-security-testing-with-kim-carter/</guid>
      <description>&lt;script async class=&#34;speakerdeck-embed&#34; data-id=&#34;4d981eff21584ff2a7c361580105bdc8&#34; data-ratio=&#34;1.33333333333333&#34; src=&#34;//speakerdeck.com/assets/embed.js&#34;&gt;&lt;/script&gt;
&lt;br&gt;
</description>
    </item>
    
    <item>
      <title>Software Engineer Interview Quick Question Set</title>
      <link>https://binarymist.io/blog/2013/05/11/software-engineer-interview-quick-question-set/</link>
      <pubDate>Sat, 11 May 2013 00:00:00 +1200</pubDate>
      <guid>https://binarymist.io/blog/2013/05/11/software-engineer-interview-quick-question-set/</guid>
      <description>&lt;html&gt;
  &lt;head&gt;
    &lt;title&gt;Software Engineer Interview Quick Question Set&lt;/title&gt;
    &lt;link rel=&#34;canonical&#34; href=&#34;https://binarymist.wordpress.com/2013/05/11/software-engineer-interview-quick-question-set/&#34;/&gt;
    &lt;meta http-equiv=&#34;content-type&#34; content=&#34;text/html; charset=utf-8&#34;/&gt;
    &lt;meta http-equiv=&#34;refresh&#34; content=&#34;3; url=https://binarymist.wordpress.com/2013/05/11/software-engineer-interview-quick-question-set/&#34;/&gt;
  &lt;/head&gt;
&lt;/html&gt;
</description>
    </item>
    
    <item>
      <title>Software Engineer Interview Process and Questions</title>
      <link>https://binarymist.io/blog/2013/04/27/software-engineer-interview-process-and-questions/</link>
      <pubDate>Sat, 27 Apr 2013 00:00:00 +1200</pubDate>
      <guid>https://binarymist.io/blog/2013/04/27/software-engineer-interview-process-and-questions/</guid>
      <description>&lt;html&gt;
  &lt;head&gt;
    &lt;title&gt;Software Engineer Interview Process and Questions&lt;/title&gt;
    &lt;link rel=&#34;canonical&#34; href=&#34;https://binarymist.wordpress.com/2013/04/27/software-engineer-interview-process-and-questions/&#34;/&gt;
    &lt;meta http-equiv=&#34;content-type&#34; content=&#34;text/html; charset=utf-8&#34;/&gt;
    &lt;meta http-equiv=&#34;refresh&#34; content=&#34;3; url=https://binarymist.wordpress.com/2013/04/27/software-engineer-interview-process-and-questions/&#34;/&gt;
  &lt;/head&gt;
&lt;/html&gt;
</description>
    </item>
    
    <item>
      <title>Setup of Chromium, Burp Suite, Node.js to view HTTP on the wire</title>
      <link>https://binarymist.io/blog/2013/03/30/setup-of-chromium-burp-suite-node.js-to-view-http-on-the-wire/</link>
      <pubDate>Sat, 30 Mar 2013 00:00:00 +1300</pubDate>
      <guid>https://binarymist.io/blog/2013/03/30/setup-of-chromium-burp-suite-node.js-to-view-http-on-the-wire/</guid>
      <description>&lt;html&gt;
  &lt;head&gt;
    &lt;title&gt;Setup of Chromium, Burp Suite, Node.js to view HTTP on the wire&lt;/title&gt;
    &lt;link rel=&#34;canonical&#34; href=&#34;https://binarymist.wordpress.com/2013/03/30/setup-of-chromium-burp-suite-node-js-to-view-http-on-the-wire/&#34;/&gt;
    &lt;meta http-equiv=&#34;content-type&#34; content=&#34;text/html; charset=utf-8&#34;/&gt;
    &lt;meta http-equiv=&#34;refresh&#34; content=&#34;3; url=https://binarymist.wordpress.com/2013/03/30/setup-of-chromium-burp-suite-node-js-to-view-http-on-the-wire/&#34;/&gt;
  &lt;/head&gt;
&lt;/html&gt;
</description>
    </item>
    
    <item>
      <title>Sanitising User Input from Browser part 2</title>
      <link>https://binarymist.io/blog/2012/11/16/sanitising-user-input-from-browser-part-2/</link>
      <pubDate>Fri, 16 Nov 2012 00:00:00 +1300</pubDate>
      <guid>https://binarymist.io/blog/2012/11/16/sanitising-user-input-from-browser-part-2/</guid>
      <description>&lt;html&gt;
  &lt;head&gt;
    &lt;title&gt;Sanitising User Input from Browser. part 2&lt;/title&gt;
    &lt;link rel=&#34;canonical&#34; href=&#34;https://binarymist.wordpress.com/2012/11/16/sanitising-user-input-from-browser-part-2/&#34;/&gt;
    &lt;meta http-equiv=&#34;content-type&#34; content=&#34;text/html; charset=utf-8&#34;/&gt;
    &lt;meta http-equiv=&#34;refresh&#34; content=&#34;2; url=https://binarymist.wordpress.com/2012/11/16/sanitising-user-input-from-browser-part-2/&#34;/&gt;
  &lt;/head&gt;
&lt;/html&gt;
</description>
    </item>
    
    <item>
      <title>Sanitising User Input from Browser part 1</title>
      <link>https://binarymist.io/blog/2012/11/04/sanitising-user-input-from-browser-part-1/</link>
      <pubDate>Sun, 04 Nov 2012 00:00:00 +1300</pubDate>
      <guid>https://binarymist.io/blog/2012/11/04/sanitising-user-input-from-browser-part-1/</guid>
      <description>&lt;html&gt;
  &lt;head&gt;
    &lt;title&gt;Sanitising User Input from Browser. part 1&lt;/title&gt;
    &lt;link rel=&#34;canonical&#34; href=&#34;https://binarymist.wordpress.com/2012/11/04/sanitising-user-input-from-browser-part-1/&#34;/&gt;
    &lt;meta http-equiv=&#34;content-type&#34; content=&#34;text/html; charset=utf-8&#34;/&gt;
    &lt;meta http-equiv=&#34;refresh&#34; content=&#34;2; url=https://binarymist.wordpress.com/2012/11/04/sanitising-user-input-from-browser-part-1/&#34;/&gt;
  &lt;/head&gt;
&lt;/html&gt;
</description>
    </item>
    
    <item>
      <title>JavaScript Properties</title>
      <link>https://binarymist.io/blog/2012/10/02/javascript-properties/</link>
      <pubDate>Tue, 02 Oct 2012 00:00:00 +1300</pubDate>
      <guid>https://binarymist.io/blog/2012/10/02/javascript-properties/</guid>
      <description>&lt;html&gt;
  &lt;head&gt;
    &lt;title&gt;JavaScript Properties&lt;/title&gt;
    &lt;link rel=&#34;canonical&#34; href=&#34;https://binarymist.wordpress.com/2012/10/02/javascript-properties/&#34;/&gt;
    &lt;meta http-equiv=&#34;content-type&#34; content=&#34;text/html; charset=utf-8&#34;/&gt;
    &lt;meta http-equiv=&#34;refresh&#34; content=&#34;2; url=https://binarymist.wordpress.com/2012/10/02/javascript-properties/&#34;/&gt;
  &lt;/head&gt;
&lt;/html&gt;
</description>
    </item>
    
    <item>
      <title>Metadata Exchange options for WCF</title>
      <link>https://binarymist.io/blog/2010/09/05/metadata-exchange-options-for-wcf/</link>
      <pubDate>Sun, 05 Sep 2010 00:00:00 +1200</pubDate>
      <guid>https://binarymist.io/blog/2010/09/05/metadata-exchange-options-for-wcf/</guid>
      <description>&lt;html&gt;
  &lt;head&gt;
    &lt;title&gt;Metadata Exchange options for WCF&lt;/title&gt;
    &lt;link rel=&#34;canonical&#34; href=&#34;https://binarymist.wordpress.com/2010/09/05/metadata-exchange-options-for-wcf/&#34;/&gt;
    &lt;meta http-equiv=&#34;content-type&#34; content=&#34;text/html; charset=utf-8&#34;/&gt;
    &lt;meta http-equiv=&#34;refresh&#34; content=&#34;2; url=https://binarymist.wordpress.com/2010/09/05/metadata-exchange-options-for-wcf/&#34;/&gt;
  &lt;/head&gt;
&lt;/html&gt;
</description>
    </item>
    
  </channel>
</rss>
