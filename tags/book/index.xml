<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>book | BinaryMist</title>
    <link>https://binarymist.io/tags/book/</link>
      <atom:link href="https://binarymist.io/tags/book/index.xml" rel="self" type="application/rss+xml" />
    <description>book</description>
    <generator>Wowchemy (https://wowchemy.com)</generator><language>en-us</language><copyright>© 2018 BinaryMist Ltd</copyright><lastBuildDate>Fri, 22 Feb 2019 16:00:00 +1300</lastBuildDate>
    <image>
      <url>https://binarymist.io/media/sharing.png</url>
      <title>book</title>
      <link>https://binarymist.io/tags/book/</link>
    </image>
    
    <item>
      <title>Talk - Hardening Your Docker Infrastructure</title>
      <link>https://binarymist.io/event/owaspnzday-2019-talk-hardening-your-docker-infrastructure/</link>
      <pubDate>Fri, 22 Feb 2019 16:00:00 +1300</pubDate>
      <guid>https://binarymist.io/event/owaspnzday-2019-talk-hardening-your-docker-infrastructure/</guid>
      <description>&lt;p&gt;Reports state very high numbers of security vulnerabilities in official images on Docker Hub. Host kernels contain 20+ M LoC, reachable from untrusted applications via many kernel APIs, providing huge attack surface. Dockers default is to run containers and all commands/processes within a container as root.&lt;/p&gt;
&lt;p&gt;Kim will discuss:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Tooling options around significantly improving visibility of vulnerabilities in Docker components and containers&lt;/li&gt;
&lt;li&gt;Safe consumption of Docker images from public registries. Addressing origin, authorship with identification using digests and integrity with opt-in Docker Content Trust&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Based on Kim&amp;rsquo;s:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Experience building a full dynamically Dockerised &lt;a href=&#34;https://gitlab.com/purpleteam-labs&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;security regression testing SaaS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Writing and publishing the &lt;a href=&#34;https://binarymist.io/publication/docker-security/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Docker Security - Quick Reference&lt;/a&gt; book&lt;/li&gt;
&lt;li&gt;Interviews with experts such as &lt;a href=&#34;https://binarymist.io/publication/ser-podcast-docker-security/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Docker Security Team Lead Diogo Mónica&lt;/a&gt;, and Michael Hausenblas of Red Hat (author of the book Container Networking) on &lt;a href=&#34;https://binarymist.io/publication/ser-podcast-container-networking/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Container Networking&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Docker host, engine, container, networking and deployment security will be covered with many examples. We will cover:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Namespaces&lt;/li&gt;
&lt;li&gt;Controlling system resources accessible to containers with CGrouups&lt;/li&gt;
&lt;li&gt;LSMs&lt;/li&gt;
&lt;li&gt;Reducing default Capabilities of the Container root user&lt;/li&gt;
&lt;li&gt;Reducing default syscalls to only the essentials with Seccomp&lt;/li&gt;
&lt;li&gt;Filesystem Mounts&lt;/li&gt;
&lt;li&gt;Coverage of good security practises in Dockerfiles and docker-compose&lt;/li&gt;
&lt;/ul&gt;
&lt;br&gt;
</description>
    </item>
    
    <item>
      <title>Cloud Security</title>
      <link>https://binarymist.io/blog/2018/04/28/cloud-security/</link>
      <pubDate>Sat, 28 Apr 2018 00:00:00 +1200</pubDate>
      <guid>https://binarymist.io/blog/2018/04/28/cloud-security/</guid>
      <description>&lt;p&gt;Following on from last months news of my new &lt;a href=&#34;https://binarymist.io/blog/2018/03/31/docker-security/&#34;&gt;Docker Security - Quick Reference&lt;/a&gt; book, I bring you &lt;a href=&#34;https://binarymist.io/publication/cloud-security/&#34;&gt;Cloud Security - Quick Reference&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This book is purposed to help Software Developers/DevOps Engineers, and also the likes of Product Owner and Product Manager types gain a good understanding of the risks and countermeasures when dealing with Cloud Service Providers (CSPs) and your environments within.&lt;/p&gt;
&lt;p&gt;There are quite a few anecdotes based on my own experience consulting for organisations navigating the perils of the many Cloud environments available today, along with tips, tricks, tools, advice, and implementation details from many client lessons learnt the hard way.&lt;/p&gt;
&lt;p&gt;Also be sure to have a listen to the show on &lt;a href=&#34;https://binarymist.io/publication/ser-podcast-cloud-security/&#34;&gt;Cloud Security&lt;/a&gt; I recorded with Scott Piper (AWS Cloud Specialist) as guest for &lt;a href=&#34;http://www.se-radio.net/team/kim-carter/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Software Engineering Radio&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The following is a snapshot of what you can expect inside of the book, laid out in the Sensible Security Model (SSM) threat modelling approach:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Asset Identification&lt;/li&gt;
&lt;li&gt;Identify Risks&lt;/li&gt;
&lt;li&gt;Countermeasures&lt;/li&gt;
&lt;li&gt;Risks that Solution Causes&lt;/li&gt;
&lt;li&gt;Costs and Trade-offs&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;a href=&#34;https://binarymist.io/publication/cloud-security/&#34;&gt;













&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;
        &lt;img alt=&#34;Cloud Security - Quick Reference&#34; srcset=&#34;
               /media/publication/title_page_cloud-security_720_huc32bfe701ea70199af6b38d1cbbdcf7d_105403_2f08adb9cb7f0bbee2cd056c626babfe.jpg 400w,
               /media/publication/title_page_cloud-security_720_huc32bfe701ea70199af6b38d1cbbdcf7d_105403_150be87133747b2c237d233d07f02d8d.jpg 760w,
               /media/publication/title_page_cloud-security_720_huc32bfe701ea70199af6b38d1cbbdcf7d_105403_1200x1200_fit_q90_lanczos.jpg 1200w&#34;
               src=&#34;https://binarymist.io/media/publication/title_page_cloud-security_720_huc32bfe701ea70199af6b38d1cbbdcf7d_105403_2f08adb9cb7f0bbee2cd056c626babfe.jpg&#34;
               width=&#34;587&#34;
               height=&#34;760&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div style=&#34;display: table;&#34;&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;1&lt;/th&gt;
&lt;th&gt;Asset Identification&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Productivity&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Competitive Advantage&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Control&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Data&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;2&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;Identify Risks&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;&lt;a href=&#34;#cloud-identify-risks-shared-responsibility-model&#34;&gt;Shared Responsibility Model&lt;/a&gt; ⭐&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;mdash; &lt;strong&gt;&lt;a href=&#34;#cloud-identify-risks-shared-responsibility-model-csp-responsibility&#34;&gt;CSP Responsibility&lt;/a&gt; ⭐&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;mdash; &lt;strong&gt;&lt;a href=&#34;#cloud-identify-risks-shared-responsibility-model-csp-customer-responsibility&#34;&gt;CSP Customer Responsibility&lt;/a&gt; ⭐&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;&lt;a href=&#34;#cloud-identify-risks-csp-evaluation&#34;&gt;CSP Evaluation&lt;/a&gt; ⭐&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Cloud Service Provider vs In-house&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;mdash; Skills&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;mdash; EULA&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;mdash; Giving up Secrets&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;mdash; Location of Data&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;mdash; Vendor lock-in&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;mdash; Possible Single Points of Failure&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Review Other Chapters&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;People&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Application Security&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Network Security&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Violations of Least Privilege&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;mdash; Machine Instance Single User Root&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;mdash; CSP Account Single User Root&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Storage of Secrets&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;mdash; Private Key Abuse&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;mdash;&amp;mdash; &lt;strong&gt;&lt;a href=&#34;#cloud-identify-risks-storage-of-secrets-private-key-abuse-ssh&#34;&gt;SSH&lt;/a&gt; ⭐&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;mdash;&amp;mdash; &lt;strong&gt;&lt;a href=&#34;#cloud-identify-risks-storage-of-secrets-private-key-abuse-tls&#34;&gt;TLS&lt;/a&gt; ⭐&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;mdash; Credentials and Other Secrets&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;mdash;&amp;mdash; Entered by People (manually)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;mdash;&amp;mdash; Entered by Software (automatically)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Serverless&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;mdash; Third Party Services&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;mdash; Perimeterless&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;mdash; Functions&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;mdash; DoS of Lambda Functions&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Infrastructure and Configuration Management&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;AWS&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;mdash; Password-less sudo&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;3&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;Countermeasures&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Shared Responsibility Model&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;mdash; CSP Responsibility&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;mdash; CSP Customer Responsibility&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;CSP Evaluation (Includes Answers)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Cloud Service Provider vs In-house&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;mdash; Skills&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;mdash; EULA&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;mdash; Giving up Secrets&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;mdash; Location of Data&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;mdash; Vendor lock-in&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;mdash; Possible Single Points of Failure&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Review Other Chapters&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;People&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Application Security&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Network Security&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;&lt;a href=&#34;#cloud-countermeasures-violations-of-least-privilege&#34;&gt;Violations of Least Privilege&lt;/a&gt; ⭐&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;mdash; &lt;strong&gt;&lt;a href=&#34;#cloud-countermeasures-violations-of-least-privilege-machine-instance-single-user-root&#34;&gt;Machine Instance Single User Root&lt;/a&gt; ⭐&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;mdash; &lt;strong&gt;&lt;a href=&#34;#cloud-countermeasures-violations-of-least-privilege-csp-account-single-user-root&#34;&gt;CSP Account Single User Root&lt;/a&gt; ⭐&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Storage of Secrets&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;mdash; Private Key Abuse&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;mdash;&amp;mdash; &lt;strong&gt;&lt;a href=&#34;#cloud-countermeasures-storage-of-secrets-private-key-abuse-ssh&#34;&gt;SSH&lt;/a&gt; ⭐&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;mdash;&amp;mdash; &lt;strong&gt;&lt;a href=&#34;#cloud-countermeasures-storage-of-secrets-private-key-abuse-tls&#34;&gt;TLS&lt;/a&gt; ⭐&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;mdash; Credentials and Other Secrets&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;mdash;&amp;mdash; &lt;strong&gt;&lt;a href=&#34;#cloud-countermeasures-storage-of-secrets-credentials-and-other-secrets-entered-by-people-manually&#34;&gt;Entered by People (manually)&lt;/a&gt; ⭐&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;mdash;&amp;mdash; &lt;strong&gt;&lt;a href=&#34;#cloud-countermeasures-storage-of-secrets-credentials-and-other-secrets-entered-by-software&#34;&gt;Entered by Software (automatically)&lt;/a&gt; ⭐&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Serverless&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;mdash; Third Party Services&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;mdash; Perimeterless&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;mdash; Functions&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;mdash; DoS of Lambda Functions&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;mdash; Centralised logging of AWS Lambda Functions&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;mdash; Frameworks&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Infrastructure and Configuration Management&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;AWS&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;mdash; Password-less sudo&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;mdash; &lt;strong&gt;&lt;a href=&#34;#cloud-countermeasures-aws-additional-tooling&#34;&gt;Additional Tooling&lt;/a&gt; ⭐&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;4&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;Risks that Solution Causes&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Shared Responsibility Model&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;CSP Evaluation&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Cloud Service Provider vs In-house&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;People&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Application Security&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Network Security&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Violations of Least Privilege&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Storage of Secrets&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;mdash; Private Key Abuse&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;mdash;&amp;mdash; SSH&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;mdash;&amp;mdash; TLS&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;mdash; Credentials and Other Secrets&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;mdash;&amp;mdash; Entered by People (manually)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;mdash;&amp;mdash; Entered by Software (automatically)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Serverless&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;mdash; Functions&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;mdash; DoS of Lambda Functions&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;mdash; Frameworks&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Infrastructure and Configuration Management&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;AWS&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;mdash; Password-less sudo&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;5&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;Costs and Trade-offs&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Shared Responsibility Model&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;CSP Evaluation&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Cloud Service Provider vs In-house&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;People&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Application Security&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Network Security&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;&lt;a href=&#34;#cloud-costs-and-trade-offs-violations-of-least-privilege&#34;&gt;Violations of Least Privilege&lt;/a&gt; ⭐&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Storage of Secrets&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;mdash; Private Key Abuse&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;mdash;&amp;mdash; SSH&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;mdash;&amp;mdash; TLS&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;mdash; Credentials and Other Secrets&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;mdash;&amp;mdash; Entered by People (manually)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;mdash;&amp;mdash; Entered by Software (automatically)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Serverless&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;mdash; Functions&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;mdash; DoS of Lambda Functions&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;mdash; Frameworks&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Infrastructure and Configuration Management&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;AWS&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;mdash; Password-less sudo&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;br&gt;
&lt;p&gt;&lt;strong&gt;⭐&lt;/strong&gt; I&amp;rsquo;ve provided a few of the sections from the book below, and linked to from the book contents above. Enjoy 😃&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;em&gt;Oh, and for less than the cost of a lunch you can own the complete book&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;btn btn-outline-primary&#34; href=&#34;https://leanpub.com/cloudsecurity-quickreference&#34; target=&#34;_blank&#34;&gt;&lt;i class=&#34;fab fa-leanpub&#34;&gt;&lt;/i&gt; &lt;b&gt;Own The Book&lt;/b&gt;&lt;/a&gt;&lt;/p&gt;
&lt;br&gt;
&lt;hr&gt;
&lt;h1 id=&#34;cloud-identify-risks-shared-responsibility-model&#34;&gt;Shared Responsibility Model&lt;/h1&gt;
&lt;p&gt;The shared responsibility model is one that many have not grasped or understood well. Let&amp;rsquo;s look at the responsibilities of the parties involved.&lt;/p&gt;
&lt;h2 id=&#34;cloud-identify-risks-shared-responsibility-model-csp-responsibility&#34;&gt;CSP Responsibility&lt;/h2&gt;
&lt;p&gt;The CSP takes care of the infrastructure, not the customer specific configuration of it. Due to the sheer scale of what they are building, the CSP is often able to build in good security controls, in contrast to the average system administrator, who has limited resources or ability to focus on security to the same degree.&lt;/p&gt;
&lt;p&gt;Again, due to sheer scale, the average CSP has a concentrated group of good security professionals versus a business who&amp;rsquo;s core focus is often not security related. CSPs provide good security mechanisms, but the customer has to know and care enough to use them.&lt;/p&gt;
&lt;p&gt;CSPs who architect infrastructure, build components, frameworks, hardware, and platform software in most cases take security seriously and are doing a reasonable job.&lt;/p&gt;
&lt;h2 id=&#34;cloud-identify-risks-shared-responsibility-model-csp-customer-responsibility&#34;&gt;CSP Customer Responsibility&lt;/h2&gt;
&lt;p&gt;CSP customers are expected to be responsible for their own security as it pertains to:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Their people working with the technology&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://binarymist.io/tags/application-security/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Application security&lt;/a&gt;, specific to shortcomings in people: lack of skills, experience, engagement, etc.&lt;/li&gt;
&lt;li&gt;Configuring the infrastructure and/or platform components, again referencing people defects&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;All too often the customer&amp;rsquo;s responsibility is neglected, which renders the Cloud no better for the customer in terms of security.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The primary problem with the Cloud is this: customers have the misconception that someone else is taking care of all their security. That is not how the shared responsibility model works though. Yes, the CSP is probably taking care of infrastructure security, but other forms of security as listed above are even more important than before the shift to the Cloud. These items are now the lowest hanging fruit for the attacker.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The following are a set of questions (verbatim) I have been asked recently, and that I hear similar versions of frequently:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;As a software engineer, do I really care about physical network security and network logging?&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Surely &amp;ldquo;as a software engineer&amp;rdquo;, I can just use TLS and that is the end of it?&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;If the machine is compromised, do we give up on security because we aren&amp;rsquo;t responsible for the network?&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;What is the difference between application security and network security? Aren&amp;rsquo;t they just two aspects of the same thing?&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;If I have implemented TLS for communication, have I fixed all of the network security problems?&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;cloud-identify-risks-csp-evaluation&#34;&gt;CSP Evaluation&lt;/h1&gt;
&lt;p&gt;CSPs are constantly changing their terms and conditions, as well as many other components and aspects of what they offer. I have compiled a set of must-answer questions to quiz your CSP with as part of your threat modelling before (or even after) you sign their service agreement.&lt;br&gt;
Most of these questions were already part of my &lt;a href=&#34;https://binarymist.io/event/saturn-2015-talk-does-your-cloud-solution-look-like-a-mushroom/&#34;&gt;Cloud vs In-house talk&lt;/a&gt; at the Saturn Architects conference I spoke at. I recommend using these as a basis for identifying risks that are important for you to consider. This should make you well armed to come up with countermeasures and think of any additional risks.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Do you keep a signed audit log of what actions users performed, and when, via UIs and APIs?&lt;/p&gt;
&lt;p&gt;Both authorised and unauthorised users are more careful about the actions they take, or do not take, when they know their actions are being recorded and are potentially being watched&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;How do you enact the shared responsibility model between CSPs and their customers? Please explain your role and my role in the protection of my and my customers data.&lt;/p&gt;
&lt;p&gt;You will almost certainly not have complete control over the data you entrust to your CSP, but they will also not assume responsibility over the data you entrust to them, or how it is accessed. One example of this might be, how do you preserve secrecy for data at rest? For example, are you using the most suitable Key Derivation Function (KDF) as I discuss in depth in the &lt;a href=&#34;https://f1.holisticinfosecforwebdevelopers.com/chap06.html#web-applications-countermeasures-data-store-compromise-which-kdf-to-use&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Web Applications chapter&lt;/a&gt; of &lt;a href=&#34;http://f1.holisticinfosecforwebdevelopers.com&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Holistic Info-Sec for Web Developers, Fascicle 1&lt;/a&gt; and adjusting the number of iterations applied each year (as discussed in the &lt;a href=&#34;https://f1.holisticinfosecforwebdevelopers.com/chap06.html#web-applications-countermeasures-lack-of-authentication-authorisation-session-management-technology-and-design-decisions-membershipreboot&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;MembershipReboot&lt;/a&gt; subsection of the &lt;a href=&#34;https://f1.holisticinfosecforwebdevelopers.com/chap06.html#web-applications&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Web Applications chapter&lt;/a&gt; of Holistic Info-Sec for Web Developers Fascicle 1) to the secrets stored in your data stores? The data you hand over to your CSP is no more secure than I discuss in the Management of Application Secrets subsections of the Web Applications chapter of Holistic Info-Sec for Web Developers Fascicle 1, and in many cases has the potential to be less secure for some of the following reasons:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;An often encountered false assumption is that somehow the data you provide is safer by default on your CSP&amp;rsquo;s network&lt;/li&gt;
&lt;li&gt;Your CSP can be forced by governing authorities to give up the data you entrust to them, as we discuss in the &lt;a href=&#34;#cloud-identify-risks-cloud-service-provider-vs-in-house-giving-up-secrets&#34;&gt;Giving up Secrets&lt;/a&gt; subsection&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Do you encrypt all communications between servers within your data centres as well as your service providers?&lt;/p&gt;
&lt;p&gt;How is your data encrypted in transit (as discussed in the Management of Application Secrets subsections of the Web Applications chapter)? In reality, you have no idea what paths it will take once in your CSPs possession, and could very well be intercepted without your knowledge.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;You have little to no control over the network path that the data you provide will travel on&lt;/li&gt;
&lt;li&gt;There are more parties involved in your CSPs infrastructure than on your own network&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Do you provide access to logs, if so, what sort of access, and to what sort of logs?&lt;/p&gt;
&lt;p&gt;Hopefully you will have easy access to any and all logs, just as you would if it was your own network. That includes hosts, routing, firewall, and any other service logs&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;What is your process around terminating my contract with you and/or moving to another CSP?&lt;/p&gt;
&lt;p&gt;No CSP is going to last forever, termination or migration is inevitable, it is just a matter of when&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Where do your servers, processes and data reside physically?&lt;/p&gt;
&lt;p&gt;As we discuss a little later in the Cloud Services Provider vs In-house subsection of Countermeasures, your data is governed by different people and jurisdictions depending on where it physically resides. CSPs have data centres in different countries and jurisdictions, each having different data security laws&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Who can view the data I store in the Cloud?&lt;/p&gt;
&lt;p&gt;Who has access to view this data? What checks and controls are in place to make sure that this data cannot be exfiltrated?&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;What is your Service Level Agreement (SLA) for uptime?&lt;/p&gt;
&lt;p&gt;Make sure you are aware of what the uptime promises mean in terms of real time. Some CSPs will allow 99.95% uptime if you are running on a single availability zone, but closer to 100% if you run on multiple availability zones. Some CSPs do not have a SLA at all.&lt;/p&gt;
&lt;p&gt;CSPs will often provide credits for the downtime, but these credits in many cases may not cover the losses you encounter during high traffic events&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Are you ISO/IEC 27001:2013 Certified? If so, what is within its scope?&lt;/p&gt;
&lt;p&gt;If the CSP can answer this with a &amp;ldquo;everything&amp;rdquo; and prove it, they have done a lot of work to make this possible. This shows a certain level of commitment to their security posture. Just be aware, as with any certification, it is just that, it doesn&amp;rsquo;t necessarily prove sound security&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Do you allow your customers to carry out regular penetration testing of production and/or test environments, and allow the network to be in-scope?&lt;/p&gt;
&lt;p&gt;CSPs that allow penetration testing of their environments demonstrate that they embrace transparency and openness. If their networks stand up to penetration tests they obviously take security seriously. Ideally, this is what you are looking for. CSPs that do not permit penetration testing of their environments are usually trying to hide something. It may be that they know they have major insecurities, or a skills shortage in terms of security professionals. Worse, they may be unaware of where their security stature lies and are not willing to have their faults demonstrated&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Do you have bug bounty programmes running, if so, what do they look like?&lt;/p&gt;
&lt;p&gt;This is another example if their programme is run well, it conveys that the CSP is open and transparent about their security faults and are willing to mitigate them as soon as possible&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt; &lt;/p&gt;
&lt;h3 id=&#34;cloud-identify-risks-storage-of-secrets-private-key-abuse-ssh&#34;&gt;SSH&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://f1.holisticinfosecforwebdevelopers.com/chap03.html#vps-countermeasures-disable-remove-services-harden-what-is-left-ssh&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;SSH&lt;/a&gt; key-pair auth is no better than password auth if it is abused in the following way, in-fact it may even be worse. I have seen some organisations who store a single private key with no pass-phrase for all of their EC2 instances in their developer wiki. All or many of the developers have access to this, with the idea being that they just copy the key from the wiki to their local &lt;code&gt;~/.ssh/&lt;/code&gt;. There are a number of things wrong with this.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Private key is not private if it is shared amongst the team&lt;/li&gt;
&lt;li&gt;No pass-phrase, means no second factor of authentication&lt;/li&gt;
&lt;li&gt;Because there is only one user (single key-pair) being used on the VPSs, there is also no audit trail&lt;/li&gt;
&lt;li&gt;The weakest link is the weakest wiki password of all the developers, and we all know how weak that is likely to be, with a bit of reconnaissance, probably guessable in a few attempts without any password profiling tools. I have discussed this and demonstrated a collection of password profiling tools in the &amp;ldquo;Weak Password Strategies&amp;rdquo; subsection of the People chapter of &lt;a href=&#34;https://f0.holisticinfosecforwebdevelopers.com&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Fascicle 0&lt;/a&gt;. Once the attacker has the weakest password, then they own all of the EC2 (if on AWS) instances, or any resource that is using key-pair authentication. If the organisation is failing this badly, then they almost certainly will not have any password complexity constraints on their wiki either&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Most developers will also blindly accept what they think are the server key fingerprints without verifying them, which opens them up to a MItM attack, as discussed in the VPS chapter under the &lt;a href=&#34;https://f1.holisticinfosecforwebdevelopers.com/chap03.html#vps-countermeasures-disable-remove-services-harden-what-is-left-ssh-establishing-your-ssh-servers-key-fingerprint&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;SSH subsection&lt;/a&gt;. This quickly moves from just being a technical issue to a cultural one, where people are trained to accept that the server is who it says it is. The fact that they have to verify the fingerprint is essentially a step that gets in their way.&lt;/p&gt;
&lt;h3 id=&#34;cloud-identify-risks-storage-of-secrets-private-key-abuse-tls&#34;&gt;TLS&lt;/h3&gt;
&lt;p&gt;When Docker reads the instructions in the following &lt;code&gt;Dockerfile&lt;/code&gt;, an image is created that copies your certificate, private key, and any other secrets you have declared, and adds them to an additional layer and forms the resulting image. Both &lt;code&gt;COPY&lt;/code&gt; and &lt;code&gt;ADD&lt;/code&gt; will bake what ever you are copying or adding into an additional layer or delta, as discussed in the Consumption from Registries subsection in my &lt;a href=&#34;https://binarymist.io/publication/docker-security/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Docker Security book&lt;/a&gt;. Whoever can access this image from a public or less public registry now has access to your certificate and even worse your private key.&lt;/p&gt;
&lt;p&gt;Anyone can see how these images were built using the following tools:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/CenturyLinkLabs/dockerfile-from-image&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;dockerfile-from-image&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://imagelayers.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;ImageLayers&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The &lt;code&gt;ENV&lt;/code&gt; command similarly adds the &lt;code&gt;dirty little secret&lt;/code&gt; value as the &lt;code&gt;mySecret&lt;/code&gt; key into the image layer.&lt;/p&gt;
&lt;h6 id=&#34;private-key-abuse-with-dockerfile&#34;&gt;Private key abuse with Dockerfile&lt;/h6&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;FROM nginx

&lt;span style=&#34;color:#75715e&#34;&gt;# ...&lt;/span&gt;
COPY /host-path/star.mydomain.com.cert /etc/nginx/certs/my.cert
COPY /host-path/star.mydomain.com.key /etc/nginx/certs/my.key
ENV mySecret&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;dirty little secret&amp;#34;&lt;/span&gt;
COPY /host-path/nginx.conf /etc/nginx/nginx.conf 
&lt;span style=&#34;color:#75715e&#34;&gt;# ...&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt; &lt;/p&gt;
&lt;h1 id=&#34;cloud-countermeasures-violations-of-least-privilege&#34;&gt;Violations of &lt;a href=&#34;https://f1.holisticinfosecforwebdevelopers.com/chap06.html#web-applications-countermeasures-management-of-application-secrets-least-privilege&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Least Privilege&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;When you create IAM policies, grant only the permissions required to perform the task(s) necessary for given users. If the user needs additional permissions, then they can be added, rather than adding everything up front and potentially having to remove again at some stage. Adding as required, rather than removing as required, will cause much less friction technically and socially.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;For example, &lt;a href=&#34;https://docs.aws.amazon.com/IAM/latest/UserGuide/best-practices.html#grant-least-privilege&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;in AWS&lt;/a&gt;&lt;/strong&gt;, you need to keep a close watch on which &lt;a href=&#34;https://docs.aws.amazon.com/IAM/latest/UserGuide/access_permissions.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;permissions&lt;/a&gt; are assigned to &lt;a href=&#34;https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;policies&lt;/a&gt; that your groups and roles have applied, and subsequently, which groups and roles your users are in or part of.&lt;/p&gt;
&lt;p&gt;This is the recommended sequence for granting least privilege in AWS, other CSPs will be similar:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;First, work out which permissions a given user requires&lt;/li&gt;
&lt;li&gt;Create or select an existing group or role&lt;/li&gt;
&lt;li&gt;Attach policy to the group or role that has the permissions that your given user requires. You can select existing policies or create new ones&lt;/li&gt;
&lt;li&gt;Add the given user to the group or role&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Regularly review all of the IAM policies you are using, making sure only the required permissions (Services, Access Levels, and Resources) are available to the users and/or groups attached to the specific policies.&lt;/p&gt;
&lt;p&gt;Enable &lt;a href=&#34;https://docs.aws.amazon.com/IAM/latest/UserGuide/best-practices.html#enable-mfa-for-privileged-users&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Multi Factor Authentication&lt;/a&gt; (MFA) on the root user, and all IAM users with console access, especially privileged users at a minimum. AWS provides the ability to mandate that users use MFA, you can do this by creating a new managed policy based on the AWS guidance to &lt;a href=&#34;https://docs.aws.amazon.com/IAM/latest/UserGuide/tutorial_users-self-manage-mfa-and-creds.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Enable Your Users to Configure Their Own Credentials and MFA Settings&lt;/a&gt;. Attach the new policy to a group that you have created and add users that must use MFA to that group.&lt;br&gt;
This process was pointed out to me by Scott Piper during our &lt;a href=&#34;https://binarymist.io/publication/ser-podcast-cloud-security/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Cloud Security interview&lt;/a&gt; by way of his &lt;a href=&#34;https://duo.com/blog/potential-gaps-in-suggested-amazon-web-services-security-policies-for-mfa&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;blog post&lt;/a&gt; and generous Github pull request.&lt;/p&gt;
&lt;p&gt;The &lt;a href=&#34;https://aws.amazon.com/blogs/security/remove-unnecessary-permissions-in-your-iam-policies-by-using-service-last-accessed-data/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Access Advisor&lt;/a&gt; tab, is visible on the IAM console details page for Users, Groups, Roles, or Policies after you select a list item. This provides information about which services are accessible for any of your users, groups, or roles. This can also be helpful for auditing permissions that should not be available to any of your users who are part of the group, role or policy you selected.&lt;/p&gt;
&lt;p&gt;The &lt;a href=&#34;https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_testing-policies.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;IAM Policy Simulator&lt;/a&gt; is accessible from the IAM console. This is good for granular reporting on the permissions of your specific Users, Groups and Roles, filtered by service and actions.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://aws.amazon.com/premiumsupport/trustedadvisor/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;AWS Trusted Advisor&lt;/a&gt; should be run periodically to check for security issues. It is accessible from the &lt;a href=&#34;https://console.aws.amazon.com/trustedadvisor/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Console&lt;/a&gt;, CLI and API. Trusted Advisor has a collection of core checks and recommendations which are free to use. These include security groups, specific ports unrestricted, IAM use, MFA on root user, EBS and RDS public snapshots.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Running services as root&lt;/strong&gt;: Make sure that Docker containers are not running under the root account. There are full details in my &lt;a href=&#34;https://binarymist.io/publication/docker-security/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Docker Security book&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Configuration Settings Changed Ad Hoc&lt;/strong&gt;: One option is to have solid change control in place. &lt;a href=&#34;https://aws.amazon.com/config/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;AWS Config&lt;/a&gt; can assist with this. &lt;a href=&#34;https://docs.aws.amazon.com/config/latest/developerguide/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;AWS Config&lt;/a&gt; continuously monitors and records how the AWS resources were configured and how they have changed, including how they are related to each other. This enables you to assess, audit, and evaluate the configurations of your AWS resources, and have notifications sent to you when AWS Config detects a violation, including created, modified or deleted rules changes.&lt;/p&gt;
&lt;p&gt;AWS Config records IAM policies assigned to users, groups, or roles, and EC2 security groups, including port rules. Changes to your configuration settings can trigger Amazon Simple Notification Service (SNS) notifications, which you can have sent to your personnel tasked with controlling changes to your configurations.&lt;/p&gt;
&lt;p&gt;Your custom rules can be codified and therefore source controlled. AWS calls this Compliance as Code. I discussed AWS CloudTrail briefly in item 1 of the &lt;a href=&#34;#cloud-countermeasures-csp-evaluation&#34;&gt;CSP Evaluation&lt;/a&gt; countermeasures subsection. AWS Config is integrated with CloudTrail, which captures all API calls from AWS Config console or API, SDKs, CLI tools, and other AWS services. The information collected by CloudTrail provides insight on what request was made, from which IP address, by who, and when&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Machine Instance Access To Open&lt;/strong&gt;: Reduce your attack surface by disabling access to your machine instances from &lt;em&gt;any&lt;/em&gt; source IP address&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;There are also a collection of IAM specific items that you should review in the Identity and Access Management subsection of the &lt;a href=&#34;https://d0.awsstatic.com/whitepapers/compliance/AWS_CIS_Foundations_Benchmark.pdf&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CIS AWS Foundations document&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;cloud-countermeasures-violations-of-least-privilege-machine-instance-single-user-root&#34;&gt;Machine Instance Single User Root&lt;/h2&gt;
&lt;p&gt;As part of the VPS and container builds, there should be &lt;a href=&#34;https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/managing-users.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;specific users created&lt;/a&gt; for specific jobs, every user within your organisation that needs VPS access should have their own user account on every VPS, including &lt;a href=&#34;#cloud-countermeasures-storage-of-secrets-private-key-abuse-ssh&#34;&gt;SSH access&lt;/a&gt; if required (ideally this should be automated). With Docker, I discussed how this is done in the &lt;code&gt;Dockerfile&lt;/code&gt; in my &lt;a href=&#34;https://binarymist.io/publication/docker-security/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Docker Security book&lt;/a&gt; and &lt;a href=&#34;https://binarymist.io/blog/2018/03/31/docker-security/#the-default-user-is-root&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;blog post&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Drive a &lt;a href=&#34;https://docs.aws.amazon.com/IAM/latest/UserGuide/best-practices.html#grant-least-privilege&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;least privilege policy&lt;/a&gt; around this, configuring a strong &lt;a href=&#34;https://docs.aws.amazon.com/IAM/latest/UserGuide/best-practices.html#configure-strong-password-policy&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;password policy&lt;/a&gt; for your users, and implement &lt;a href=&#34;https://aws.amazon.com/iam/details/mfa/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;multi-factor authentication&lt;/a&gt;, which will help with poor password selection. I discuss this in more depth in the &lt;a href=&#34;#cloud-countermeasures-storage-of-secrets&#34;&gt;Storage of Secrets&lt;/a&gt; subsection.&lt;/p&gt;
&lt;h2 id=&#34;cloud-countermeasures-violations-of-least-privilege-csp-account-single-user-root&#34;&gt;CSP Account Single User Root&lt;/h2&gt;
&lt;p&gt;As I discuss in the &lt;a href=&#34;#cloud-countermeasures-storage-of-secrets-credentials-and-other-secrets&#34;&gt;Credentials and Other Secrets&lt;/a&gt; Countermeasures subsection of this chapter, create multiple accounts with least privileges required for each; the root user should hardly ever be used. Create groups and attach restricted policies to them, then add the specific users to them.&lt;/p&gt;
&lt;p&gt;Also as discussed in the &lt;a href=&#34;#cloud-countermeasures-storage-of-secrets-credentials-and-other-secrets-entered-by-people-manually&#34;&gt;Credentials and Other Secrets&lt;/a&gt; countermeasures subsection, there should be almost no reason to generate key(s) for the AWS Command Line Tools for the AWS account root user. But if you do, consider setting up notifications for when they are used. As usual, AWS has plenty of &lt;a href=&#34;https://aws.amazon.com/blogs/security/how-to-receive-notifications-when-your-aws-accounts-root-access-keys-are-used/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;documentation&lt;/a&gt;
on the topic.&lt;/p&gt;
&lt;p&gt;Another idea is to set-up monitoring and notifications on activity of your AWS account root user. AWS &lt;a href=&#34;https://aws.amazon.com/blogs/mt/monitor-and-notify-on-aws-account-root-user-activity/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;documentation&lt;/a&gt; explains how to do this.&lt;/p&gt;
&lt;p&gt;There are also a collection of monitoring specific items that you should review in the Monitoring subsection of the &lt;a href=&#34;https://d0.awsstatic.com/whitepapers/compliance/AWS_CIS_Foundations_Benchmark.pdf&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CIS AWS Foundations document&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Another great idea is to generate an AWS key &lt;a href=&#34;https://canarytokens.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Canarytoken&lt;/a&gt; from canarytokens.org, and put it somewhere more obvious than your real AWS key(s). When someone uses it, you will be automatically notified. I discussed these with Haroon Meer on the Software Engineering Radio &lt;a href=&#34;https://binarymist.io/publication/ser-podcast-network-security/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Network Security&lt;/a&gt; podcast. &lt;a href=&#34;https://twitter.com/HeyJayza&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Jay&lt;/a&gt; also wrote a &lt;a href=&#34;http://blog.thinkst.com/2017/09/canarytokens-new-member-aws-api-key.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;blog post&lt;/a&gt; on the thinkst blog on how you can set this up, and what the inner workings look like.&lt;/p&gt;
&lt;p&gt;Also consider rotating your IAM access keys for your CSP services. AWS EC2, for example, provides &lt;a href=&#34;https://aws.amazon.com/blogs/security/how-to-rotate-access-keys-for-iam-users/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;auto-expire, auto-renew&lt;/a&gt; access keys when using roles.&lt;/p&gt;
&lt;p&gt; &lt;/p&gt;
&lt;h3 id=&#34;cloud-countermeasures-storage-of-secrets-private-key-abuse-ssh&#34;&gt;SSH&lt;/h3&gt;
&lt;p&gt;There are many ways to harden SSH as we discussed in the &lt;a href=&#34;https://f1.holisticinfosecforwebdevelopers.com/chap03.html#vps-countermeasures-disable-remove-services-harden-what-is-left-ssh&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;SSH&lt;/a&gt; subsection of the VPS chapter of Holistic Info-Sec for Web Developers, Fascicle 1. Usually the issue will be specific to lack of knowledge, desire and a dysfunctional &lt;a href=&#34;https://blog.binarymist.net/2014/04/26/culture-in-the-work-place/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;culture&lt;/a&gt; in the work place. You will need to address the people issues before looking at basic SSH hardening techniques.&lt;/p&gt;
&lt;p&gt;Ideally, SSH access should be reduced to a selected few. Most of the work we do now by SSHing should be automated. If you review the commands in history on most VPSs, the majority of the commands are either deployment or monitoring which should all be &lt;a href=&#34;https://github.com/binarymist/aws-docker-host&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;automated&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;When you create an AWS EC2 instance you can create a key pair &lt;a href=&#34;https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-key-pairs.html#having-ec2-create-your-key-pair&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;using EC2&lt;/a&gt; or you can &lt;a href=&#34;https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-key-pairs.html#how-to-generate-your-own-key-and-import-it-to-aws&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;provide your own&lt;/a&gt;. Either way, to be able to log-in to your instance, you need to have provided EC2 with the public key of your key pair and specified it by name.&lt;/p&gt;
&lt;p&gt;Every user should have their &lt;a href=&#34;https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-key-pairs.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;own key-pair&lt;/a&gt;, the private part should always be private, kept in the users local &lt;code&gt;~/.ssh/&lt;/code&gt; directory (not the server) with permissions &lt;code&gt;600&lt;/code&gt; or more restrictive, and not shared on your developer wiki, or anywhere else for that matter. The public part can be put on every server that the user needs access to. There is no excuse for users not to have their own key pair, you can have up to five thousand key pairs per AWS region. AWS has &lt;a href=&#34;https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-key-pairs.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;clear directions&lt;/a&gt; on how to create additional users and provide SSH access with their own key pairs.&lt;/p&gt;
&lt;p&gt;For generic confirmation of the host&amp;rsquo;s SSH key fingerprint when prompted before establishing the SSH connection, follow the procedure I laid out for &lt;a href=&#34;https://f1.holisticinfosecforwebdevelopers.com/chap03.html#vps-countermeasures-disable-remove-services-harden-what-is-left-ssh-establishing-your-ssh-servers-key-fingerprint&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Establishing your SSH Servers Key Fingerprint&lt;/a&gt; in the VPS chapter of Holistic Info-Sec for Web Developers, Fascicle 1, and make it organisational policy. We should never blindly accept key fingerprints. The key fingerprints should be stored in a relatively secure place, so that only trusted parties can modify them. I would like to see, as part of the server creation process, the entity (probably the wiki) that specifies the key fingerprints is automatically updated by something on the VPS that keeps watch of the key fingerprints. Something like &lt;a href=&#34;https://f1.holisticinfosecforwebdevelopers.com/chap03.html#vps-countermeasures-lack-of-visibility-proactive-monitoring-getting-started-with-monit&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Monit&lt;/a&gt;, would be capable of the monitoring and executing a script to do this.&lt;/p&gt;
&lt;p&gt;To SSH to an EC2 instance, you will have to view the console output of the keys being generated. You can see this &lt;strong&gt;only for the first run&lt;/strong&gt; of the instance when it is being created, this can be seen by first fetching &lt;a href=&#34;https://console.aws.amazon.com&#34;&gt;https://console.aws.amazon.com&lt;/a&gt;, then:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Click the &amp;ldquo;EC2&amp;rdquo; link&lt;/li&gt;
&lt;li&gt;Click &amp;ldquo;Instances&amp;rdquo; in the left column&lt;/li&gt;
&lt;li&gt;Click the instance name you want&lt;/li&gt;
&lt;li&gt;Click the select button &amp;ldquo;Actions&amp;rdquo; and choose &amp;ldquo;Get System Log&amp;rdquo; (a.k.a. &amp;ldquo;Console Output&amp;rdquo;)&lt;/li&gt;
&lt;li&gt;In the console output, you should see the keys being generated. Record them&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Then, to SSH to your EC2 instance, the command to use can be seen by fetching&lt;br&gt;
&lt;a href=&#34;https://console.aws.amazon.com&#34;&gt;https://console.aws.amazon.com&lt;/a&gt;, then:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;EC2&lt;/li&gt;
&lt;li&gt;Instances&lt;/li&gt;
&lt;li&gt;Select your instance&lt;/li&gt;
&lt;li&gt;Click the Connect button for details&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;cloud-countermeasures-storage-of-secrets-private-key-abuse-tls&#34;&gt;TLS&lt;/h3&gt;
&lt;p&gt;So, how do we stop baking secrets into our Docker images?&lt;/p&gt;
&lt;p&gt;The easiest way is to avoid adding secrets to the process of building your images. You can add them at run time in several ways. If you have a look at Namespaces in my &lt;a href=&#34;https://binarymist.io/publication/docker-security/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Docker Security book&lt;/a&gt;, also discussed in my &lt;a href=&#34;https://binarymist.io/blog/2018/03/31/docker-security/#namespaces-risks&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Docker Security blog post&lt;/a&gt;, we used volumes. This allows us to keep the secrets entirely out of the image and only include in the container as mounted host directories, rather than adding those secrets to the &lt;code&gt;Dockerfile&lt;/code&gt;:&lt;/p&gt;
&lt;h6 id=&#34;mitigate-private-key-abuse-via-terminal&#34;&gt;Mitigate private key abuse via terminal&lt;/h6&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;docker run -d -p 443:443 -v /host-path/star.mydomain.com.cert:/etc/nginx/certs/my.cert -v /host-path/star.mydomain.com.key:/etc/nginx/certs/my.key -e &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;mySecret=dirty little secret&amp;#34;&lt;/span&gt; nginx&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;An even easier technique is to just implement adding of secrets in the &lt;code&gt;docker-compose.yml&lt;/code&gt; file, thus saving time when you run the container:&lt;/p&gt;
&lt;h6 id=&#34;mitigate-private-key-abuse-using-docker-composeyml&#34;&gt;Mitigate private key abuse using docker-compose.yml&lt;/h6&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;nginx:
    build: .
    ports:
        - &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;443:443&amp;#34;&lt;/span&gt;
    volumes:
        - /host-path/star.mydomain.com.key:/etc/nginx/ssl/nginx.key
        - /host-path/star.mydomain.com.cert:/etc/nginx/ssl/nginx.crt
        - /host-path/nginx.conf:/etc/nginx/nginx.conf
    env_file:
        - /host-path/secrets.env&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Using the &lt;code&gt;env_file&lt;/code&gt; we can hide our environment variables in the &lt;code&gt;.env&lt;/code&gt; file.&lt;br&gt;
Our &lt;code&gt;Dockerfile&lt;/code&gt; would now look like the following, even our config is volume mounted and will no longer reside in our image:&lt;/p&gt;
&lt;h6 id=&#34;mitigate-private-key-abuse-using-dockerfile&#34;&gt;Mitigate private key abuse using Dockerfile&lt;/h6&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;FROM nginx

&lt;span style=&#34;color:#75715e&#34;&gt;# ...&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# ...&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt; &lt;/p&gt;
&lt;h3 id=&#34;cloud-countermeasures-storage-of-secrets-credentials-and-other-secrets-entered-by-people-manually&#34;&gt;Entered by People (manually)&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Protecting against outsiders&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The most effective alternative to storing user-names and passwords in an insecure manner is to use a group or team password manager. There are quite a few offerings available with all sorts of different attributes. The following are some of the points you will need to consider as part of your selection process:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Cost in terms of money&lt;/li&gt;
&lt;li&gt;Cost in terms of set-up and maintenance&lt;/li&gt;
&lt;li&gt;Closed or open source. If you care about security, which you must if you are considering a team password manager, it is important to see how secrets are handled. I need to be able to see how the code is written, and which &lt;a href=&#34;https://f1.holisticinfosecforwebdevelopers.com/chap06.html#web-applications-countermeasures-data-store-compromise-which-kdf-to-use&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Key Derivation Functions&lt;/a&gt; (KDFs) and &lt;a href=&#34;https://f1.holisticinfosecforwebdevelopers.com/chap06.html#web-applications-identify-risks-cryptography-on-the-client&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;cyphers&lt;/a&gt; are used. If it is of high quality, we can have more confidence that our precious sensitive pieces of information are, in fact, going to be private&lt;/li&gt;
&lt;li&gt;Do you need a web client?&lt;/li&gt;
&lt;li&gt;Do you need a mobile client (iOS, Android)?&lt;/li&gt;
&lt;li&gt;What platforms does it need to support?&lt;/li&gt;
&lt;li&gt;Does it need to be able to manage secrets of multiple customers?&lt;/li&gt;
&lt;li&gt;Auditing of user actions? Who is accessing and changing what?&lt;/li&gt;
&lt;li&gt;Ability to be able to lock out users, when they leave the organisation, for example?&lt;/li&gt;
&lt;li&gt;Multi-factor authentication&lt;/li&gt;
&lt;li&gt;Options: Does it have all the features you need?&lt;/li&gt;
&lt;li&gt;Who is behind the offering? Are they well known for creating solid, reliable, secure solutions?&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The following are my personal top three, with the first being my preference, based on research I performed for one of my customers recently. All the points above were considered for a collection of about ten team password managers that I reviewed:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;http://pleasantsolutions.com/PasswordServer/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Pleasant Password Server&lt;/a&gt; (KeePass backed)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.manageengine.com/products/passwordmanagerpro/msp/features.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Password Manager Pro&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.lastpass.com/teams&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;LastPass&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;Protecting against insiders&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The above alone is not going to stop an account take over if you are sharing the likes of the AWS account root user email and password, even if it is in a group password manager. As AWS has &lt;a href=&#34;https://docs.aws.amazon.com/IAM/latest/UserGuide/getting-started_create-admin-group.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;already stated&lt;/a&gt;, only use the root user for what is absolutely essential (remember: least privilege). This is usually just to create an Administrators group to which you attach the &lt;code&gt;AdministratorAccess&lt;/code&gt; managed policy, then add any new IAM users to that group who require administrative access.&lt;/p&gt;
&lt;p&gt;Once you have created IAM users within an Administrators group as mentioned above, these users should set up groups to which you attach further restricted managed policies such as a group for &lt;code&gt;PowerUserAccess&lt;/code&gt;, a group for &lt;code&gt;ReadOnlyAccess&lt;/code&gt;, a group for &lt;code&gt;IAMFullAccess&lt;/code&gt;, progressively becoming more restrictive. Use the most restrictive group possible in order to achieve specific tasks, simply assigning users to the groups you have created.&lt;/p&gt;
&lt;p&gt;Be sure to use multi-factor authentication.&lt;/p&gt;
&lt;p&gt; &lt;/p&gt;
&lt;p&gt;Your AWS users are not assigned access keys to use for programmatic access by default, do not create these unless you actually need them, and again consider least privilege. There should be almost no reason to create an &lt;a href=&#34;https://docs.aws.amazon.com/IAM/latest/UserGuide/best-practices.html#lock-away-credentials&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;access key&lt;/a&gt; for the root user.&lt;/p&gt;
&lt;p&gt;Configure &lt;a href=&#34;https://docs.aws.amazon.com/IAM/latest/UserGuide/best-practices.html#configure-strong-password-policy&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;strong password policies&lt;/a&gt; for your users, make sure they are using personal password managers and know how to generate long complex passwords.&lt;/p&gt;
&lt;h3 id=&#34;cloud-countermeasures-storage-of-secrets-credentials-and-other-secrets-entered-by-software&#34;&gt;Entered by Software (automatically)&lt;/h3&gt;
&lt;p&gt;There are many places in software that require access to secrets, to communicate with services, APIs, datastores. Configuration and infrastructure management systems have a problem storing and accessing these secrets in a secure manner.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;HashiCorp &lt;a href=&#34;https://www.vaultproject.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Vault&lt;/a&gt;&lt;/strong&gt;. The most fully featured of these tools, has the following attributes/features:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/hashicorp/vault&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Open Source&lt;/a&gt; written in Go-Lang&lt;/li&gt;
&lt;li&gt;Deployable to any environment, including development machines&lt;/li&gt;
&lt;li&gt;Arbitrary key/value secrets can be stored of any type of data&lt;/li&gt;
&lt;li&gt;Supports cryptographic operations of the secrets&lt;/li&gt;
&lt;li&gt;Supports dynamic secrets, generating credentials on-demand for fine-grained security controls&lt;/li&gt;
&lt;li&gt;Auditing: Vault forces a mandatory lease contract with clients, which allows the rolling of keys, automatic revocation, along with multiple revocation mechanisms providing operators a break-glass for security incidents&lt;/li&gt;
&lt;li&gt;Non-repudiation&lt;/li&gt;
&lt;li&gt;Secrets protected in transit and at rest&lt;/li&gt;
&lt;li&gt;Not coupled to any specific configuration or infrastructure management system&lt;/li&gt;
&lt;li&gt;Can read secrets from configuration, infrastructure management systems and applications via its API&lt;/li&gt;
&lt;li&gt;Applications can query Vault for secrets to connect to services such as datastores, thus removing the need for these secrets to reside in configuration files (See the &lt;a href=&#34;#cloud-risks-that-solution-causes-storage-of-secrets-credentials-and-other-secrets-entered-by-software&#34;&gt;Risks that Solution Causes&lt;/a&gt; for the caveat)&lt;/li&gt;
&lt;li&gt;Requires multiple keys generally distributed to multiple individuals to read its encrypted secrets&lt;/li&gt;
&lt;li&gt;Check the &lt;a href=&#34;https://www.vaultproject.io/docs/secrets/index.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Secret Backends&lt;/a&gt; for integrations&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://docs.docker.com/engine/swarm/secrets/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Docker secrets&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Manages any sensitive data (including generic string or binary content up to 500 kb in size) that a &lt;a href=&#34;#cloud-countermeasures-storage-of-secrets-private-key-abuse-tls&#34;&gt;container needs at runtime&lt;/a&gt;, but you do not want to &lt;a href=&#34;#cloud-identify-risks-storage-of-secrets-private-key-abuse-tls&#34;&gt;store in the image&lt;/a&gt;, source control, or the host systems file-system as we did in the TLS section above&lt;/li&gt;
&lt;li&gt;Only available to Docker containers managed by Swarm (services). Swarm manages the secrets&lt;/li&gt;
&lt;li&gt;Secrets are stored in the Raft log, which is encrypted if using Docker 1.13 and higher&lt;/li&gt;
&lt;li&gt;Any given secret is only accessibly to services (Swarm managed container) that have been granted explicit access to the secret&lt;/li&gt;
&lt;li&gt;Secrets are decrypted and mounted into the container in an in-memory filesystem which defaults to &lt;code&gt;/run/secrets/&amp;lt;secret_name&amp;gt;&lt;/code&gt; in Linux, &lt;code&gt;C:\ProgramData\Docker\secrets&lt;/code&gt; in Windows&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://docs.ansible.com/ansible/latest/playbooks_vault.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Ansible Vault&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Ansible is an &lt;a href=&#34;https://github.com/ansible/ansible/blob/devel/docs/docsite/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Open Source&lt;/a&gt; configuration management tool, and has a simple secrets management feature.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Ansible tasks and handlers can be encrypted&lt;/li&gt;
&lt;li&gt;Arbitrary files, including binary data can be encrypted&lt;/li&gt;
&lt;li&gt;From version 2.3 can encrypt single values inside YAML files&lt;/li&gt;
&lt;li&gt;Suggested workflow is to check the encrypted files into source control for auditing purposes&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;AWS &lt;strong&gt;&lt;a href=&#34;https://aws.amazon.com/kms/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Key Management Service&lt;/a&gt;&lt;/strong&gt; (KMS)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Encrypt up to 4 KB of arbitrary data (passwords, keys)&lt;/li&gt;
&lt;li&gt;Supports cryptographic operations of the secrets: encrypt and decrypt&lt;/li&gt;
&lt;li&gt;Uses Hardware Security Modules (HSM)&lt;/li&gt;
&lt;li&gt;Integrated with AWS CloudTrail to provide auditing of all key usage&lt;/li&gt;
&lt;li&gt;AWS managed service&lt;/li&gt;
&lt;li&gt;Create, import and rotate keys&lt;/li&gt;
&lt;li&gt;Usage via AWS Management Console, SDK and CLI&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;AWS offers &lt;strong&gt;&lt;a href=&#34;https://aws.amazon.com/ec2/systems-manager/parameter-store/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Parameter Store&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Centralised store on AWS to manage configuration data, plain text, or encrypted secrets via AWS KMS&lt;/li&gt;
&lt;li&gt;All calls to the parameter store are recorded with AWS CloudTrail, supports access controls.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Also see the &lt;a href=&#34;#additional-resources&#34;&gt;Additional Resources&lt;/a&gt; section for other similar tools and resources.&lt;/p&gt;
&lt;p&gt; &lt;/p&gt;
&lt;h2 id=&#34;cloud-countermeasures-aws-additional-tooling&#34;&gt;Additional Tooling&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/Netflix/security_monkey/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Security Monkey&lt;/a&gt;: Monitors AWS and GCP accounts for policy changes, and alerts on insecure configurations, conceptually similar to AWS Config, as discussed in the &lt;a href=&#34;#cloud-countermeasures-violations-of-least-privilege&#34;&gt;Violations of Least Privilege&lt;/a&gt; countermeasures subsection. Security Monkey is free and open source. Although not strictly security related, the &lt;a href=&#34;https://github.com/Netflix/SimianArmy/wiki&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Simian Army&lt;/a&gt; tools from Netflix are also well worth mentioning if you are serious about doing things the right way in AWS. They include:
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/Netflix/SimianArmy/wiki/Chaos-Monkey&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Chaos Monkey&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/Netflix/SimianArmy/wiki/Janitor-Home&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Janitor Monkey&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/Netflix/SimianArmy/wiki/Conformity-Home&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Conformity Monkey&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://cloudsploit.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CloudSploit&lt;/a&gt;: Aims to solve the problem of misconfigured AWS accounts with background scanning through hundreds of resources, settings, and activity logs looking for potential issues. Their blog also has some good resources on it. Scan reports include in-depth remediation steps. Has a free and paid hosted tiers. Auto scanning scheduling for the paid plans. Is open source on &lt;a href=&#34;https://github.com/cloudsploit/scans&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;github&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://console.aws.amazon.com/inspector/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Amazon Inspector&lt;/a&gt;: At this time only targets EC2 instances. Inspector agent needs to be installed on all target EC2 instances&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/duo-labs/cloudmapper&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CloudMapper&lt;/a&gt; by Scott Piper for visualising your AWS environments. Along with his blog post at &lt;a href=&#34;https://duo.com/blog/introducing-cloudmapper-an-aws-visualization-tool&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;duo.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/donnemartin/awesome-aws&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Awesome AWS&lt;/a&gt; has many useful resources&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt; &lt;/p&gt;
&lt;h1 id=&#34;cloud-costs-and-trade-offs-violations-of-least-privilege&#34;&gt;Violations of Least Privilege&lt;/h1&gt;
&lt;p&gt;It is worth investing the effort to make sure only the required user permissions are granted. As discussed, there are tools you can use to help speed this process up and make it more accurate.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Running services as root&lt;/strong&gt;: Always start with the minimum permissions possible and add if necessary, it is far easier to add than to remove&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Configuration Settings Changed Ad Hoc&lt;/strong&gt;: Remember detection works where prevention fails. Where your change control fails, because it is decided not to use it, you need something to detect changes and notify someone who cares. For this, there are also other options specifically designed to perform this function. For a collection of such tools, review the &lt;a href=&#34;#cloud-countermeasures-aws-additional-tooling&#34;&gt;Tooling&lt;/a&gt; sections.&lt;/p&gt;
&lt;p&gt;You need to have these tools set up so that they are &lt;a href=&#34;https://blog.cloudsploit.com/the-importance-of-continual-auditing-in-the-cloud-8d22e0554639&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;continually auditing&lt;/a&gt; your infrastructure and notifying the person(s) responsible for issues resolution, rather than having people continually manually reviewing settings, permissions, and so forth&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Machine Instance Access To Open&lt;/strong&gt;: Set-up a bastion host and lock the source IP address down to the public facing IP address of your bastion host required to access your machine instances. I discussed locking the source IP address down in the &lt;a href=&#34;https://f1.holisticinfosecforwebdevelopers.com/chap03.html#vps-countermeasures-disable-remove-services-harden-what-is-left-ssh&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Hardening SSH subsection&lt;/a&gt; of the VPS chapter of Holistic Info-Sec for Web Developers, Fascicle 1.&lt;/p&gt;
&lt;p&gt;Your bastion host will be hardened as discussed throughout the VPS chapter. All authorised workers can VPN to the bastion host and SSH from there, or just SSH tunnel from wherever they are through the bastion host via port forwarding to any given machine instances.&lt;/p&gt;
&lt;p&gt;If you have Windows boxes you need to reach, you can tunnel RDP through your SSH tunnel, see my &lt;a href=&#34;https://binarymist.io/blog/2010/08/26/installation-of-ssh-on-64bit-windows-7-to-tunnel-rdp/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;blog post about this&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Rather than tunnelling, another option SSH gives us (using the &lt;code&gt;-A&lt;/code&gt; option) is to hop from the bastion host to your machine instances by forwarding the private key. This does include the risk that someone could gain access to your forwarded SSH agent connection, thus being able to use your private key while you have an SSH connection established. &lt;code&gt;ssh-add -c&lt;/code&gt; can provide some protection with this.&lt;/p&gt;
&lt;p&gt;If you do decide to use the &lt;code&gt;-A&lt;/code&gt; option, then you are essentially considering your bastion host as a trusted machine. I commented on the &lt;code&gt;-A&lt;/code&gt; option in the &lt;a href=&#34;https://f1.holisticinfosecforwebdevelopers.com/chap03.html#vps-countermeasures-disable-remove-services-harden-what-is-left-ssh-tunneling-ssh&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Tunnelling SSH&lt;/a&gt; subsection of the VPS chapter of Holistic Info-Sec for Web Developers, Fascicle 1. There is plenty of good &lt;a href=&#34;https://cloudacademy.com/blog/aws-bastion-host-nat-instances-vpc-peering-security/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;documentation&lt;/a&gt; on setting up the bastion host in AWS. AWS provides some &lt;a href=&#34;https://docs.aws.amazon.com/quickstart/latest/linux-bastion/architecture.html#best-practices&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Best Practices&lt;/a&gt; for security on bastion hosts, and also &lt;a href=&#34;https://aws.amazon.com/blogs/security/how-to-record-ssh-sessions-established-through-a-bastion-host/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;discusses&lt;/a&gt; recording the SSH sessions that your users establish through a bastion host for auditing purposes&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;&lt;em&gt;If you&amp;rsquo;re invested in the Cloud, and let&amp;rsquo;s face it, who isn&amp;rsquo;t now days, this book will provide visibility into what you may currently be doing wrong and how to secure your Cloud environments.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;btn btn-outline-primary&#34; href=&#34;https://leanpub.com/cloudsecurity-quickreference&#34; target=&#34;_blank&#34;&gt;&lt;i class=&#34;fab fa-leanpub&#34;&gt;&lt;/i&gt; &lt;b&gt;Get The Full Book&lt;/b&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;At this stage, it&amp;rsquo;s only $12 NZ, do not procrastinate with your organisations assets at risk, get your self a copy now.&lt;/p&gt;
&lt;br&gt;
&lt;p&gt;As always, &lt;a href=&#34;#comments&#34;&gt;let me know&lt;/a&gt; if there&amp;rsquo;s anything you don&amp;rsquo;t understand, or submit a &lt;a href=&#34;https://github.com/binarymist/BinaryMistBlog/pulls&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;pull request&lt;/a&gt; or open an &lt;a href=&#34;https://github.com/binarymist/BinaryMistBlog/issues&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;issue&lt;/a&gt; if you find any errors. 😃&lt;/p&gt;
&lt;h1 id=&#34;additional-resources&#34;&gt;Additional Resources&lt;/h1&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    &lt;p&gt;My latest podcast for Software Engineering Radio was with guest &amp;ldquo;Head of Cryptography Engineering at Tresorit, Péter Budai&amp;rdquo; on &lt;a href=&#34;https://binarymist.io/publication/ser-podcast-end-to-end-encryption/&#34;&gt;End to End Encryption&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Next up for guests on my interview schedule is &lt;a href=&#34;https://twitter.com/natashenka&#34;&gt;Natalie Silvanovich&lt;/a&gt; of the Google &lt;a href=&#34;https://googleprojectzero.blogspot.co.nz/2015/08/attacking-ecmascript-engines-with.html&#34;&gt;Project Zero&lt;/a&gt; team on the topic of Attack Surface Reduction. This should be released in a couple of months. Keep your eye on my &lt;a href=&#34;https://binarymist.io/publication/#8&#34;&gt;Publications&lt;/a&gt; if this interests you, or even leave a comment &lt;a href=&#34;#comments&#34;&gt;below&lt;/a&gt; and I&amp;rsquo;ll let you know when it&amp;rsquo;s available.&lt;/p&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;The following are the additional resources in the &lt;a href=&#34;https://binarymist.io/publication/cloud-security/&#34;&gt;Cloud Security&lt;/a&gt; book.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Interview I hosted with Scott Piper on Cloud Security&lt;/strong&gt;&lt;br&gt;
&lt;a href=&#34;https://binarymist.io/publication/ser-podcast-cloud-security/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://binarymist.io/publication/ser-podcast-cloud-security/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Secrets out of Docker images&lt;/strong&gt;&lt;br&gt;
&lt;a href=&#34;https://www.ctl.io/developers/blog/post/tutorial-protecting-sensitive-info-docker&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://www.ctl.io/developers/blog/post/tutorial-protecting-sensitive-info-docker&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Darkreading: 10 Password Managers For Business Use&lt;/strong&gt;&lt;br&gt;
&lt;a href=&#34;https://www.darkreading.com/endpoint/10-password-managers-for-business-use/d/d-id/1322326&#34;&gt;https://www.darkreading.com/endpoint/10-password-managers-for-business-use/d/d-id/1322326&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Using Vault with MySQL&lt;/strong&gt;&lt;br&gt;
&lt;a href=&#34;https://dzone.com/articles/using-vault-with-mysql&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://dzone.com/articles/using-vault-with-mysql&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Infrastructure Secret Management Overview&lt;/strong&gt;&lt;br&gt;
&lt;a href=&#34;https://gist.github.com/binarymist/66206419df712bd738c3d664542157d8&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://gist.github.com/binarymist/66206419df712bd738c3d664542157d8&lt;/a&gt;&lt;br&gt;
Forked from maxvt.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Secrets Management&lt;/strong&gt; show on Software Engineering Radio&lt;br&gt;
&lt;a href=&#34;http://www.se-radio.net/2017/12/se-radio-episode-311-armon-dadgar-on-secrets-management/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://www.se-radio.net/2017/12/se-radio-episode-311-armon-dadgar-on-secrets-management/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;flaws.cloud&lt;/strong&gt; AWS CTF by Scott Piper&lt;br&gt;
&lt;a href=&#34;http://flaws.cloud/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://flaws.cloud/&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Cloud Security - Quick Reference</title>
      <link>https://binarymist.io/publication/cloud-security/</link>
      <pubDate>Mon, 02 Apr 2018 00:00:00 +0000</pubDate>
      <guid>https://binarymist.io/publication/cloud-security/</guid>
      <description>&lt;p&gt;The book also covers:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Techniques and tools for storing and accessing secrets in the Cloud securely&lt;/li&gt;
&lt;li&gt;Risks and countermeasures of serverless offerings&lt;/li&gt;
&lt;li&gt;Infrastructure and configuration management techniques and tools&lt;/li&gt;
&lt;li&gt;An interview with Scott Piper (AWS security specialist)&lt;/li&gt;
&lt;li&gt;Many other tips, tricks and tools&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&#34;https://leanpub.com/cloudsecurity-quickreference&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;













&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;
        &lt;img alt=&#34;Cloud Security - Quick Reference&#34; srcset=&#34;
               /media/publication/title_page_cloud-security_720_huc32bfe701ea70199af6b38d1cbbdcf7d_105403_2f08adb9cb7f0bbee2cd056c626babfe.jpg 400w,
               /media/publication/title_page_cloud-security_720_huc32bfe701ea70199af6b38d1cbbdcf7d_105403_150be87133747b2c237d233d07f02d8d.jpg 760w,
               /media/publication/title_page_cloud-security_720_huc32bfe701ea70199af6b38d1cbbdcf7d_105403_1200x1200_fit_q90_lanczos.jpg 1200w&#34;
               src=&#34;https://binarymist.io/media/publication/title_page_cloud-security_720_huc32bfe701ea70199af6b38d1cbbdcf7d_105403_2f08adb9cb7f0bbee2cd056c626babfe.jpg&#34;
               width=&#34;587&#34;
               height=&#34;760&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Please note that the entire content of this book is included in The Cloud chapter of &lt;a href=&#34;https://f1.holisticinfosecforwebdevelopers.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Holistic InfoSec for Web Developers F1&lt;/a&gt;.&lt;/p&gt;
&lt;br&gt;
&lt;h5 id=&#34;errata-errors-typos-etc&#34;&gt;Errata (errors, typos, etc.)&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;Submit an &lt;a href=&#34;https://github.com/binarymist/cloudsecurity-quickreference/issues&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;issue&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Open &lt;a href=&#34;https://github.com/binarymist/cloudsecurity-quickreference/issues?q=is%3Aopen&amp;#43;is%3Aissue&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;issues&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Closed &lt;a href=&#34;https://github.com/binarymist/cloudsecurity-quickreference/issues?q=is%3Aissue&amp;#43;is%3Aclosed&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;issues&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Docker Security</title>
      <link>https://binarymist.io/blog/2018/03/31/docker-security/</link>
      <pubDate>Sat, 31 Mar 2018 00:00:00 +1300</pubDate>
      <guid>https://binarymist.io/blog/2018/03/31/docker-security/</guid>
      <description>&lt;p&gt;If you are a Software Developer/DevOps Engineer working with Docker, and are one of those types that take their profession seriously (hint: most people that call themselves Engineers do), believe that if a job is worth doing, it&amp;rsquo;s worth doing well, take quality, good design, and security seriously, then I may have just the book you&amp;rsquo;ve been looking for. 😌&lt;/p&gt;
&lt;p&gt;I recently released a book on &lt;a href=&#34;https://binarymist.io/tags/docker/&#34;&gt;Docker&lt;/a&gt; Security, which addresses many of the concerns with the default level of security around Docker and Docker deployments. The book is purposed to help Software Developers/DevOps Engineers address these concerns quickly. The following is a snapshot of what&amp;rsquo;s included in the book:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://binarymist.io/publication/docker-security/&#34;&gt;













&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;
        &lt;img alt=&#34;Docker Security Quick Reference&#34; srcset=&#34;
               /media/publication/title_page_docker-security_720_hufbfdc40a69121df1e8e12d60d596ff18_33085_fba40a7757c13a9d5aaf89f5d2b9a6a3.png 400w,
               /media/publication/title_page_docker-security_720_hufbfdc40a69121df1e8e12d60d596ff18_33085_08eda1ab82e35a5e1d438d2d93a4e431.png 760w,
               /media/publication/title_page_docker-security_720_hufbfdc40a69121df1e8e12d60d596ff18_33085_1200x1200_fit_lanczos_2.png 1200w&#34;
               src=&#34;https://binarymist.io/media/publication/title_page_docker-security_720_hufbfdc40a69121df1e8e12d60d596ff18_33085_fba40a7757c13a9d5aaf89f5d2b9a6a3.png&#34;
               width=&#34;587&#34;
               height=&#34;760&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div style=&#34;display: table;&#34;&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;1&lt;/th&gt;
&lt;th&gt;Habitat&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;Consumption from Registries&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;Doppelganger images&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;#the-default-user-is-root&#34;&gt;The Default User is Root ⭐&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;2&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;&lt;a href=&#34;#hardening-docker-host-engine-and-containers&#34;&gt;Hardening Docker Host, Engine and Containers&lt;/a&gt; ⭐&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;Haskell Dockerfile Linter&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;Lynis&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;Docker Bench&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;CoreOS Clair&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;Banyanops collector&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;Anchore&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;#twistLock&#34;&gt;TwistLock ⭐&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;Possible contenders to watch&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;#namespaces-risks&#34;&gt;Namespaces (Risks) ⭐&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;#namespaces-countermeasures&#34;&gt;Namespaces (Countermeasures ⭐)&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;Control Groups (Risks)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;Control Groups (Countermeasures)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;Capabilities (Risks)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;Capabilities (Countermeasures)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;Linux Security Modules (Risks)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;Linux Security Modules (Countermeasures)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;SecComp (Risks)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;SecComp (Countermeasures)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;#read-only-containers&#34;&gt;Read-only Containers ⭐&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;3&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;&lt;a href=&#34;#runc-and-where-it-fits-in&#34;&gt;runC and Where it Fits in &lt;/a&gt; ⭐&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;Using runC Standalone&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;4&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;Application Security&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;&lt;a href=&#34;#additional-resources&#34;&gt;Additional Resources&lt;/a&gt; ⭐&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;br&gt;
&lt;p&gt;&lt;strong&gt;⭐&lt;/strong&gt; I&amp;rsquo;ve provided a few of the sections from the book below, and linked to from the book contents above. Enjoy 😃&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;em&gt;Oh, and for less than the cost of a lunch you can own the complete book&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;btn btn-outline-primary&#34; href=&#34;https://leanpub.com/dockersecurity-quickreference&#34; target=&#34;_blank&#34;&gt;&lt;i class=&#34;fab fa-leanpub&#34;&gt;&lt;/i&gt; &lt;b&gt;Own The Book&lt;/b&gt;&lt;/a&gt;&lt;/p&gt;
&lt;br&gt;
&lt;hr&gt;
&lt;h1 id=&#34;the-default-user-is-root&#34;&gt;The Default User is Root&lt;/h1&gt;














&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;
        &lt;img alt=&#34;&#34; srcset=&#34;
               /media/post/2018/04/easy-common-veryeasy-moderate_hu70d63e5cf1c9df062ea1d2ca18c50de6_10063_95ab6a967b5c64744f00875ca16b5cec.png 400w,
               /media/post/2018/04/easy-common-veryeasy-moderate_hu70d63e5cf1c9df062ea1d2ca18c50de6_10063_772b271457e2639000f9ed5bc3c1af3b.png 760w,
               /media/post/2018/04/easy-common-veryeasy-moderate_hu70d63e5cf1c9df062ea1d2ca18c50de6_10063_1200x1200_fit_lanczos_2.png 1200w&#34;
               src=&#34;https://binarymist.io/media/post/2018/04/easy-common-veryeasy-moderate_hu70d63e5cf1c9df062ea1d2ca18c50de6_10063_95ab6a967b5c64744f00875ca16b5cec.png&#34;
               width=&#34;760&#34;
               height=&#34;17&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;p&gt;What is worse, Docker&amp;rsquo;s default is to run containers, and all commands / processes within a container as root. This can be seen by running the following command from the &lt;a href=&#34;https://benchmarks.cisecurity.org/tools2/docker/CIS_Docker_1.13.0_Benchmark_v1.0.0.pdf&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CIS_Docker_1.13.0_Benchmark&lt;/a&gt;:&lt;/p&gt;
&lt;h6 id=&#34;query-user-running-containers&#34;&gt;Query User running containers&lt;/h6&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;docker ps --quiet | xargs docker inspect --format &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;{{ .Id }}: User={{ .Config.User }}&amp;#39;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you have two containers running, and the user has not been specified, you will see something like the below, which means your two containers are running as root.&lt;/p&gt;
&lt;h6 id=&#34;result-of-user-running-containers-output&#34;&gt;Result of user running containers output&lt;/h6&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&amp;lt;container n Id&amp;gt;: User&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;
&amp;lt;container n+1 Id&amp;gt;: User&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Images derived from other images inherit the same user defined in the parent image explicitly or implicitly, so unless the image creator has specifically defined a non-root user, the user will default to root. That means all processes within the container will run as root.&lt;/p&gt;














&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;
        &lt;img alt=&#34;&#34; srcset=&#34;
               /media/post/2018/04/PreventionVERYEASY_hud825f5ad7266669b028309f9f5802c82_2587_68d9ea43367621c1bf6ba8ce3dc26de0.png 400w,
               /media/post/2018/04/PreventionVERYEASY_hud825f5ad7266669b028309f9f5802c82_2587_31c1826f3b20381b266d0f605bde2403.png 760w,
               /media/post/2018/04/PreventionVERYEASY_hud825f5ad7266669b028309f9f5802c82_2587_1200x1200_fit_lanczos_2.png 1200w&#34;
               src=&#34;https://binarymist.io/media/post/2018/04/PreventionVERYEASY_hud825f5ad7266669b028309f9f5802c82_2587_68d9ea43367621c1bf6ba8ce3dc26de0.png&#34;
               width=&#34;760&#34;
               height=&#34;18&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;p&gt;In order to run containers as a non-root user, the user needs to be added in the base image (&lt;code&gt;Dockerfile&lt;/code&gt;) if it is under your control, and set before any commands you want run as a non-root user. Here is an example of the &lt;a href=&#34;https://github.com/owasp/nodegoat&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;NodeGoat&lt;/a&gt; image:&lt;/p&gt;
&lt;h6 id=&#34;nodegoat-dockerfile&#34;&gt;NodeGoat Dockerfile&lt;/h6&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 1&lt;/span&gt;FROM node:4.4
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 2&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 3&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Create an environment variable in our image for the non-root user we want to use.&lt;/span&gt;
&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 4&lt;/span&gt;ENV user nodegoat_docker
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 5&lt;/span&gt;ENV workdir /usr/src/app/
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 6&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 7&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Home is required for npm install. System account with no ability to login to shell&lt;/span&gt;
&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 8&lt;/span&gt;RUN useradd --create-home --system --shell /bin/false $user
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 9&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;10&lt;/span&gt;RUN mkdir --parents $workdir
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;11&lt;/span&gt;WORKDIR $workdir
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;12&lt;/span&gt;COPY package.json $workdir
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;13&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;14&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# chown is required by npm install as a non-root user.&lt;/span&gt;
&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;15&lt;/span&gt;RUN chown $user:$user --recursive $workdir
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;16&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Then all further actions including running the containers should&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;17&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# be done under non-root user, unless root is actually required.&lt;/span&gt;
&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;18&lt;/span&gt;USER $user
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;19&lt;/span&gt;
&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;20&lt;/span&gt;RUN npm install
&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;21&lt;/span&gt;COPY . $workdir
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;22&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;23&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Permissions need to be reapplied, due to how docker applies root to new files.&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;24&lt;/span&gt;USER root
&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;25&lt;/span&gt;RUN chown $user:$user --recursive $workdir
&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;26&lt;/span&gt;RUN chmod --recursive o-wrx $workdir
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;27&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;28&lt;/span&gt;RUN ls -liah
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;29&lt;/span&gt;RUN ls ../ -liah
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;30&lt;/span&gt;USER $user&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;As you can see on line 4 we create our &lt;code&gt;nodegoat_docker&lt;/code&gt; user.&lt;br&gt;
On line 8 we add our non-root user to the image with no ability to login.&lt;br&gt;
On line 15 we change the ownership of the &lt;code&gt;$workdir&lt;/code&gt; so our non-root user has access to do the things that we normally have permissions to do without root, such as installing npm packages and copying files, as we see on line 20 and 21. But first we need to switch to our non-root user on line 18. On lines 25 and 26 we need to reapply ownership and permissions due to the fact that docker does not &lt;code&gt;COPY&lt;/code&gt; according to the user you are set to run commands as.&lt;/p&gt;
&lt;p&gt;Without reapplying the ownership and permissions of the non-root user as seen above on lines 25 and 26, the container directory listings would look like this:&lt;/p&gt;
&lt;h6 id=&#34;no-reapplication-of-ownership-and-permissions&#34;&gt;No reapplication of ownership and permissions&lt;/h6&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;Step &lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt; : RUN ls -liah
 ---&amp;gt; Running in f8692fc32cc7
total 116K
&lt;span style=&#34;color:#ae81ff&#34;&gt;13&lt;/span&gt; drwxr-xr-x   &lt;span style=&#34;color:#ae81ff&#34;&gt;9&lt;/span&gt; nodegoat_docker nodegoat_docker 4.0K Sep &lt;span style=&#34;color:#ae81ff&#34;&gt;13&lt;/span&gt; 09:00 .
&lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt; drwxr-xr-x   &lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt; root            root            4.0K Sep &lt;span style=&#34;color:#ae81ff&#34;&gt;13&lt;/span&gt; 09:00 ..
&lt;span style=&#34;color:#ae81ff&#34;&gt;65&lt;/span&gt; drwxr-xr-x   &lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt; root            root            4.0K Sep &lt;span style=&#34;color:#ae81ff&#34;&gt;13&lt;/span&gt; 08:59 .git
&lt;span style=&#34;color:#ae81ff&#34;&gt;53&lt;/span&gt; -rw-r--r--   &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; root            root             &lt;span style=&#34;color:#ae81ff&#34;&gt;178&lt;/span&gt; Sep &lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt; 04:22 .gitignore
&lt;span style=&#34;color:#ae81ff&#34;&gt;69&lt;/span&gt; -rw-r--r--   &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; root            root            1.9K Nov &lt;span style=&#34;color:#ae81ff&#34;&gt;21&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;2015&lt;/span&gt; .jshintrc
&lt;span style=&#34;color:#ae81ff&#34;&gt;61&lt;/span&gt; -rw-r--r--   &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; root            root              &lt;span style=&#34;color:#ae81ff&#34;&gt;55&lt;/span&gt; Nov &lt;span style=&#34;color:#ae81ff&#34;&gt;21&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;2015&lt;/span&gt; .nodemonignore
&lt;span style=&#34;color:#ae81ff&#34;&gt;58&lt;/span&gt; -rw-r--r--   &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; root            root             &lt;span style=&#34;color:#ae81ff&#34;&gt;715&lt;/span&gt; Sep &lt;span style=&#34;color:#ae81ff&#34;&gt;13&lt;/span&gt; 08:59 Dockerfile
&lt;span style=&#34;color:#ae81ff&#34;&gt;55&lt;/span&gt; -rw-r--r--   &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; root            root            6.6K Sep &lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt; 04:16 Gruntfile.js
&lt;span style=&#34;color:#ae81ff&#34;&gt;60&lt;/span&gt; -rw-r--r--   &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; root            root             11K Nov &lt;span style=&#34;color:#ae81ff&#34;&gt;21&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;2015&lt;/span&gt; LICENSE
&lt;span style=&#34;color:#ae81ff&#34;&gt;68&lt;/span&gt; -rw-r--r--   &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; root            root              &lt;span style=&#34;color:#ae81ff&#34;&gt;48&lt;/span&gt; Nov &lt;span style=&#34;color:#ae81ff&#34;&gt;21&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;2015&lt;/span&gt; Procfile
&lt;span style=&#34;color:#ae81ff&#34;&gt;64&lt;/span&gt; -rw-r--r--   &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; root            root            5.6K Sep &lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt; 04:22 README.md
&lt;span style=&#34;color:#ae81ff&#34;&gt;56&lt;/span&gt; drwxr-xr-x   &lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt; root            root            4.0K Nov &lt;span style=&#34;color:#ae81ff&#34;&gt;21&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;2015&lt;/span&gt; app
&lt;span style=&#34;color:#ae81ff&#34;&gt;66&lt;/span&gt; -rw-r--r--   &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; root            root             &lt;span style=&#34;color:#ae81ff&#34;&gt;527&lt;/span&gt; Nov &lt;span style=&#34;color:#ae81ff&#34;&gt;15&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;2015&lt;/span&gt; app.json
&lt;span style=&#34;color:#ae81ff&#34;&gt;54&lt;/span&gt; drwxr-xr-x   &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt; root            root            4.0K May &lt;span style=&#34;color:#ae81ff&#34;&gt;16&lt;/span&gt; 11:41 artifacts
&lt;span style=&#34;color:#ae81ff&#34;&gt;62&lt;/span&gt; drwxr-xr-x   &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt; root            root            4.0K Nov &lt;span style=&#34;color:#ae81ff&#34;&gt;21&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;2015&lt;/span&gt; config
&lt;span style=&#34;color:#ae81ff&#34;&gt;57&lt;/span&gt; -rw-r--r--   &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; root            root             &lt;span style=&#34;color:#ae81ff&#34;&gt;244&lt;/span&gt; Sep &lt;span style=&#34;color:#ae81ff&#34;&gt;13&lt;/span&gt; 04:51 docker-compose.yml
&lt;span style=&#34;color:#ae81ff&#34;&gt;67&lt;/span&gt; drwxr-xr-x &lt;span style=&#34;color:#ae81ff&#34;&gt;498&lt;/span&gt; root            root             20K Sep &lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt; 03:50 node_modules
&lt;span style=&#34;color:#ae81ff&#34;&gt;63&lt;/span&gt; -rw-r--r--   &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; root            root            1.4K Sep &lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt; 04:22 package.json
&lt;span style=&#34;color:#ae81ff&#34;&gt;52&lt;/span&gt; -rw-r--r--   &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; root            root            4.6K Sep &lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt; 04:01 server.js
&lt;span style=&#34;color:#ae81ff&#34;&gt;59&lt;/span&gt; drwxr-xr-x   &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt; root            root            4.0K Nov &lt;span style=&#34;color:#ae81ff&#34;&gt;21&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;2015&lt;/span&gt; test
 ---&amp;gt; ad42366b24d7
Removing intermediate container f8692fc32cc7
Step &lt;span style=&#34;color:#ae81ff&#34;&gt;13&lt;/span&gt; : RUN ls ../ -liah
 ---&amp;gt; Running in 4074cc02dd1d
total 12K
&lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt; drwxr-xr-x  &lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt; root            root            4.0K Sep &lt;span style=&#34;color:#ae81ff&#34;&gt;13&lt;/span&gt; 09:00 .
&lt;span style=&#34;color:#ae81ff&#34;&gt;11&lt;/span&gt; drwxr-xr-x &lt;span style=&#34;color:#ae81ff&#34;&gt;32&lt;/span&gt; root            root            4.0K Sep &lt;span style=&#34;color:#ae81ff&#34;&gt;13&lt;/span&gt; 09:00 ..
&lt;span style=&#34;color:#ae81ff&#34;&gt;13&lt;/span&gt; drwxr-xr-x  &lt;span style=&#34;color:#ae81ff&#34;&gt;9&lt;/span&gt; nodegoat_docker nodegoat_docker 4.0K Sep &lt;span style=&#34;color:#ae81ff&#34;&gt;13&lt;/span&gt; 09:00 app&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;With reapplication of the ownership and permissions of the non-root user, as the &lt;code&gt;Dockerfile&lt;/code&gt; is currently above, the container directory listings look like the following:&lt;/p&gt;
&lt;h6 id=&#34;with-reapplication-of-ownership-and-permissions&#34;&gt;With reapplication of ownership and permissions&lt;/h6&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;Step &lt;span style=&#34;color:#ae81ff&#34;&gt;15&lt;/span&gt; : RUN ls -liah
 ---&amp;gt; Running in 8662e1657d0f
total 116K
&lt;span style=&#34;color:#ae81ff&#34;&gt;13&lt;/span&gt; drwxr-x---   &lt;span style=&#34;color:#ae81ff&#34;&gt;21&lt;/span&gt; nodegoat_docker nodegoat_docker 4.0K Sep &lt;span style=&#34;color:#ae81ff&#34;&gt;13&lt;/span&gt; 08:51 .
&lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt; drwxr-xr-x    &lt;span style=&#34;color:#ae81ff&#34;&gt;9&lt;/span&gt; root            root            4.0K Sep &lt;span style=&#34;color:#ae81ff&#34;&gt;13&lt;/span&gt; 08:51 ..
&lt;span style=&#34;color:#ae81ff&#34;&gt;65&lt;/span&gt; drwxr-x---   &lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt; nodegoat_docker nodegoat_docker 4.0K Sep &lt;span style=&#34;color:#ae81ff&#34;&gt;13&lt;/span&gt; 08:51 .git
&lt;span style=&#34;color:#ae81ff&#34;&gt;53&lt;/span&gt; -rw-r-----    &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; nodegoat_docker nodegoat_docker  &lt;span style=&#34;color:#ae81ff&#34;&gt;178&lt;/span&gt; Sep &lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt; 04:22 .gitignore
&lt;span style=&#34;color:#ae81ff&#34;&gt;69&lt;/span&gt; -rw-r-----    &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; nodegoat_docker nodegoat_docker 1.9K Nov &lt;span style=&#34;color:#ae81ff&#34;&gt;21&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;2015&lt;/span&gt; .jshintrc
&lt;span style=&#34;color:#ae81ff&#34;&gt;61&lt;/span&gt; -rw-r-----    &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; nodegoat_docker nodegoat_docker   &lt;span style=&#34;color:#ae81ff&#34;&gt;55&lt;/span&gt; Nov &lt;span style=&#34;color:#ae81ff&#34;&gt;21&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;2015&lt;/span&gt; .nodemonignore
&lt;span style=&#34;color:#ae81ff&#34;&gt;58&lt;/span&gt; -rw-r-----    &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; nodegoat_docker nodegoat_docker  &lt;span style=&#34;color:#ae81ff&#34;&gt;884&lt;/span&gt; Sep &lt;span style=&#34;color:#ae81ff&#34;&gt;13&lt;/span&gt; 08:46 Dockerfile
&lt;span style=&#34;color:#ae81ff&#34;&gt;55&lt;/span&gt; -rw-r-----    &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; nodegoat_docker nodegoat_docker 6.6K Sep &lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt; 04:16 Gruntfile.js
&lt;span style=&#34;color:#ae81ff&#34;&gt;60&lt;/span&gt; -rw-r-----    &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; nodegoat_docker nodegoat_docker  11K Nov &lt;span style=&#34;color:#ae81ff&#34;&gt;21&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;2015&lt;/span&gt; LICENSE
&lt;span style=&#34;color:#ae81ff&#34;&gt;68&lt;/span&gt; -rw-r-----    &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; nodegoat_docker nodegoat_docker   &lt;span style=&#34;color:#ae81ff&#34;&gt;48&lt;/span&gt; Nov &lt;span style=&#34;color:#ae81ff&#34;&gt;21&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;2015&lt;/span&gt; Procfile
&lt;span style=&#34;color:#ae81ff&#34;&gt;64&lt;/span&gt; -rw-r-----    &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; nodegoat_docker nodegoat_docker 5.6K Sep &lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt; 04:22 README.md
&lt;span style=&#34;color:#ae81ff&#34;&gt;56&lt;/span&gt; drwxr-x---   &lt;span style=&#34;color:#ae81ff&#34;&gt;14&lt;/span&gt; nodegoat_docker nodegoat_docker 4.0K Sep &lt;span style=&#34;color:#ae81ff&#34;&gt;13&lt;/span&gt; 08:51 app
&lt;span style=&#34;color:#ae81ff&#34;&gt;66&lt;/span&gt; -rw-r-----    &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; nodegoat_docker nodegoat_docker  &lt;span style=&#34;color:#ae81ff&#34;&gt;527&lt;/span&gt; Nov &lt;span style=&#34;color:#ae81ff&#34;&gt;15&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;2015&lt;/span&gt; app.json
&lt;span style=&#34;color:#ae81ff&#34;&gt;54&lt;/span&gt; drwxr-x---    &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt; nodegoat_docker nodegoat_docker 4.0K Sep &lt;span style=&#34;color:#ae81ff&#34;&gt;13&lt;/span&gt; 08:51 artifacts
&lt;span style=&#34;color:#ae81ff&#34;&gt;62&lt;/span&gt; drwxr-x---    &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt; nodegoat_docker nodegoat_docker 4.0K Sep &lt;span style=&#34;color:#ae81ff&#34;&gt;13&lt;/span&gt; 08:51 config
&lt;span style=&#34;color:#ae81ff&#34;&gt;57&lt;/span&gt; -rw-r-----    &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; nodegoat_docker nodegoat_docker  &lt;span style=&#34;color:#ae81ff&#34;&gt;244&lt;/span&gt; Sep &lt;span style=&#34;color:#ae81ff&#34;&gt;13&lt;/span&gt; 04:51 docker-compose.yml
&lt;span style=&#34;color:#ae81ff&#34;&gt;67&lt;/span&gt; drwxr-x--- &lt;span style=&#34;color:#ae81ff&#34;&gt;1428&lt;/span&gt; nodegoat_docker nodegoat_docker  20K Sep &lt;span style=&#34;color:#ae81ff&#34;&gt;13&lt;/span&gt; 08:51 node_modules
&lt;span style=&#34;color:#ae81ff&#34;&gt;63&lt;/span&gt; -rw-r-----    &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; nodegoat_docker nodegoat_docker 1.4K Sep &lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt; 04:22 package.json
&lt;span style=&#34;color:#ae81ff&#34;&gt;52&lt;/span&gt; -rw-r-----    &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; nodegoat_docker nodegoat_docker 4.6K Sep &lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt; 04:01 server.js
&lt;span style=&#34;color:#ae81ff&#34;&gt;59&lt;/span&gt; drwxr-x---    &lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt; nodegoat_docker nodegoat_docker 4.0K Sep &lt;span style=&#34;color:#ae81ff&#34;&gt;13&lt;/span&gt; 08:51 test
 ---&amp;gt; b88d816315b1
Removing intermediate container 8662e1657d0f
Step &lt;span style=&#34;color:#ae81ff&#34;&gt;16&lt;/span&gt; : RUN ls ../ -liah
 ---&amp;gt; Running in 0ee2dcc889a6
total 12K
&lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt; drwxr-xr-x  &lt;span style=&#34;color:#ae81ff&#34;&gt;9&lt;/span&gt; root            root            4.0K Sep &lt;span style=&#34;color:#ae81ff&#34;&gt;13&lt;/span&gt; 08:51 .
&lt;span style=&#34;color:#ae81ff&#34;&gt;11&lt;/span&gt; drwxr-xr-x &lt;span style=&#34;color:#ae81ff&#34;&gt;34&lt;/span&gt; root            root            4.0K Sep &lt;span style=&#34;color:#ae81ff&#34;&gt;13&lt;/span&gt; 08:51 ..
&lt;span style=&#34;color:#ae81ff&#34;&gt;13&lt;/span&gt; drwxr-x--- &lt;span style=&#34;color:#ae81ff&#34;&gt;21&lt;/span&gt; nodegoat_docker nodegoat_docker 4.0K Sep &lt;span style=&#34;color:#ae81ff&#34;&gt;13&lt;/span&gt; 08:51 app&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;An alternative to setting the non-root user in the &lt;code&gt;Dockerfile&lt;/code&gt; is to set it in the &lt;code&gt;docker-compose.yml&lt;/code&gt;, provided that the non-root user has been added to the image in the &lt;code&gt;Dockerfile&lt;/code&gt;. In the case of NodeGoat, the mongo &lt;code&gt;Dockerfile&lt;/code&gt; is maintained by DockerHub, and it adds a user called &lt;code&gt;mongodb&lt;/code&gt;. In the NodeGoat projects &lt;code&gt;docker-compose.yml&lt;/code&gt;, we just need to set the user, as seen on line 13 below:&lt;/p&gt;
&lt;h6 id=&#34;nodegoat-docker-compose&#34; class=&#34;yml&#34;&gt;NodeGoat docker-compose.yml&lt;/h6&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 1&lt;/span&gt;    version: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;2.0&amp;#34;&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 2&lt;/span&gt;    
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 3&lt;/span&gt;    services:
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 4&lt;/span&gt;      web:
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 5&lt;/span&gt;        build: .
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 6&lt;/span&gt;        command: bash -c &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;node artifacts/db-reset.js &amp;amp;&amp;amp; npm start&amp;#34;&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 7&lt;/span&gt;        ports:
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 8&lt;/span&gt;          - &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;4000:4000&amp;#34;&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 9&lt;/span&gt;        links:
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;10&lt;/span&gt;          - mongo
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;11&lt;/span&gt;      mongo:
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;12&lt;/span&gt;        image: mongo:latest
&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;13&lt;/span&gt;        user: mongodb
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;14&lt;/span&gt;        expose:
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;15&lt;/span&gt;          - &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;27017&amp;#34;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Alternatively, a container may be run as a non-root user by running the following command:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;docker run -it --user lowprivuser myimage&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;but this is not ideal, the specific user should usually be part of the build.&lt;/p&gt;
&lt;h1 id=&#34;hardening-docker-host-engine-and-containers&#34;&gt;Hardening Docker Host, Engine and Containers&lt;/h1&gt;














&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;
        &lt;img alt=&#34;&#34; srcset=&#34;
               /media/post/2018/04/difficult-uncommon-average-moderate_hudc496e6c9df959b0c1086b5116ee778a_9572_ea6bf72611115c14369da218cd38eeb6.png 400w,
               /media/post/2018/04/difficult-uncommon-average-moderate_hudc496e6c9df959b0c1086b5116ee778a_9572_738f6c0a7e39fc0927fc85609078a2ad.png 760w,
               /media/post/2018/04/difficult-uncommon-average-moderate_hudc496e6c9df959b0c1086b5116ee778a_9572_1200x1200_fit_lanczos_2.png 1200w&#34;
               src=&#34;https://binarymist.io/media/post/2018/04/difficult-uncommon-average-moderate_hudc496e6c9df959b0c1086b5116ee778a_9572_ea6bf72611115c14369da218cd38eeb6.png&#34;
               width=&#34;760&#34;
               height=&#34;18&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;p&gt;Considering that these processes run as root, and have &lt;a href=&#34;https://theinvisiblethings.blogspot.co.nz/2012/09/how-is-qubes-os-different-from.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;indirect access&lt;/a&gt; to most of the Linux Kernel (20+ million lines of code written by humans) APIs, such as networking, USB, storage stacks, and others via System calls, the situation may look bleak.&lt;/p&gt;














&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;
        &lt;img alt=&#34;&#34; srcset=&#34;
               /media/post/2018/04/HypervisorVsContainers_hu5e4e79e7ab6687c5ec487bf325d77b4f_67230_caac0c340c389c50455aa4728d54e3d0.png 400w,
               /media/post/2018/04/HypervisorVsContainers_hu5e4e79e7ab6687c5ec487bf325d77b4f_67230_cf9e62c8f61a4978f09458ce1ec72504.png 760w,
               /media/post/2018/04/HypervisorVsContainers_hu5e4e79e7ab6687c5ec487bf325d77b4f_67230_1200x1200_fit_lanczos_2.png 1200w&#34;
               src=&#34;https://binarymist.io/media/post/2018/04/HypervisorVsContainers_hu5e4e79e7ab6687c5ec487bf325d77b4f_67230_caac0c340c389c50455aa4728d54e3d0.png&#34;
               width=&#34;666&#34;
               height=&#34;760&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;p&gt;&lt;a href=&#34;http://man7.org/linux/man-pages/man2/syscalls.2.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;System calls&lt;/a&gt; are how programmes access the kernel to perform tasks. This attack surface is huge, and all before any security is added on top in the form of LXC, libcontainer (now &lt;a href=&#34;https://github.com/opencontainers/runc&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;opencontainers/runc&lt;/a&gt;), or &lt;a href=&#34;#docker-host-engine-and-containers-linux-security-modules-risks&#34;&gt;Linux Security Modules (LSM)&lt;/a&gt; such as AppArmor or SELinux. These are often seen as an annoyance and just disabled like many other forms of security.&lt;/p&gt;
&lt;p&gt;If you run a container, you may have to install &lt;code&gt;kmod&lt;/code&gt;, then run &lt;code&gt;lsmod&lt;/code&gt; in the container, and also on the host system. You will see that the same modules are loaded, this is because as mentioned, the container shares the host kernel, so there is not a lot between processes within the container and the host kernel. As mentioned above, the processes within the container may be running as root as well, it pays for you to have a good understanding of the security features Docker provides, and how to employ them.&lt;/p&gt;
&lt;p&gt;The &lt;a href=&#34;#docker-engine-and-containers-seccomp-risks&#34;&gt;Seccomp section below&lt;/a&gt; discusses Docker&amp;rsquo;s attempt to put a stop to some System calls accessing the kernel APIs. There are also many other features that Docker has added or leveraged in terms of mitigating a lot of this potential abuse. Although the situation initially looks bad, Docker has done a lot to improve it.&lt;/p&gt;
&lt;p&gt;As you can see in the above image, the host kernel is open to receiving potential abuse from containers. Make sure you keep it patched. We will now walk though many areas of potential abuse.&lt;/p&gt;














&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;
        &lt;img alt=&#34;&#34; srcset=&#34;
               /media/post/2018/04/PreventionDIFFICULT_hu0dd09e468652fd3b6da8b11439cdc83d_2178_723030fcbcc437a3a6f35e7ad281e7cd.png 400w,
               /media/post/2018/04/PreventionDIFFICULT_hu0dd09e468652fd3b6da8b11439cdc83d_2178_106e22740b39602dfb1237a38c52392f.png 760w,
               /media/post/2018/04/PreventionDIFFICULT_hu0dd09e468652fd3b6da8b11439cdc83d_2178_1200x1200_fit_lanczos_2.png 1200w&#34;
               src=&#34;https://binarymist.io/media/post/2018/04/PreventionDIFFICULT_hu0dd09e468652fd3b6da8b11439cdc83d_2178_723030fcbcc437a3a6f35e7ad281e7cd.png&#34;
               width=&#34;760&#34;
               height=&#34;18&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;p&gt;Make sure you keep your host kernel well patched, as it is a huge attack surface, with all of your containers accessing it via System calls.&lt;/p&gt;
&lt;p&gt;The space for tooling to help find vulnerabilities in code, packages, etc within your Docker images has been noted, and &lt;a href=&#34;https://community.alfresco.com/community/ecm/blog/2015/12/03/docker-security-tools-audit-and-vulnerability-assessment/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;tools provided&lt;/a&gt;. The following is a sorted list of what feels like does the least and is the simplest in terms of security/hardening features to what does the most, not understating tools that do a little, but do it well.&lt;/p&gt;
&lt;p&gt;These tools should form a part of your secure and trusted build pipeline, or &lt;a href=&#34;https://blog.acolyer.org/2017/04/03/a-study-of-security-vulnerabilities-on-docker-hub/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;software supply-chain&lt;/a&gt;.&lt;/p&gt;
&lt;h1 id=&#34;twistLock&#34;&gt;TwistLock&lt;/h1&gt;
&lt;p&gt;TwistLock is a fairly comprehensive and complete proprietary offering with a free developer edition. The following details were taken from TwistLock marketing pages:&lt;/p&gt;
&lt;p&gt;Features of Trust:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Discover and manage vulnerabilities in images&lt;/li&gt;
&lt;li&gt;Uses CVE data sources similar to CoreOS Clair&lt;/li&gt;
&lt;li&gt;Can scan registries: Docker Hub, Google Container Registry, EC2 Container Registry, Artifactory, Nexus Registry, and images for vulnerabilities in code and configuration&lt;/li&gt;
&lt;li&gt;Enforce and verify standard configurations&lt;/li&gt;
&lt;li&gt;Hardening checks on images based on CIS Docker benchmark&lt;/li&gt;
&lt;li&gt;Real-time vulnerability and threat intelligence&lt;/li&gt;
&lt;li&gt;Provide out-of-box plugins for vulnerability reporting directly into Jenkins and TeamCity&lt;/li&gt;
&lt;li&gt;Provides a set of APIs for developers to access almost all of the TwistLock core functions&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Features of Runtime:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Policy enforcement&lt;/li&gt;
&lt;li&gt;Detect anomalies, uses open source CVE feeds, commercial threat and vulnerability sources, as well as TwistLock&amp;rsquo;s own Lab research&lt;/li&gt;
&lt;li&gt;Defend and adapt against active threats and compromises using machine learning&lt;/li&gt;
&lt;li&gt;Governs access control to individual APIs of Docker Engine, Kubernetes, and Docker Swarm, providing LDAP/AD integration.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;namespaces-risks&#34;&gt;Namespaces (Risks)&lt;/h1&gt;
&lt;p&gt;The first place to read for solid background on Linux kernel namespaces is the &lt;a href=&#34;http://man7.org/linux/man-pages/man7/namespaces.7.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;man-page&lt;/a&gt;, otherwise I&amp;rsquo;d just be repeating what is there. A lot of what follows about namespaces requires some knowledge from the namespaces man-page, so do yourself a favour and read it first.&lt;/p&gt;
&lt;p&gt;Linux kernel namespaces were first added between 2.6.15 (January 2006) and 2.6.26 (July 2008).&lt;/p&gt;
&lt;p&gt;According to the namespaces man page, IPC, network and UTS namespace support was available from kernel version 3.0, while mount, PID and user namespace support was available from kernel version 3.8 (February 2013), and cgroup namespace support was available from kernel version 4.6 (May 2016).&lt;/p&gt;
&lt;p&gt;Each aspect of a container runs in a separate namespace and its access is limited to that namespace.&lt;/p&gt;
&lt;p&gt;Docker leverages the Linux (kernel) namespaces which provide an isolated workspace wrapped with a global system resource abstraction. This makes it appear to the processes within the namespace that they have their own isolated instance of the global resource. When a container is run, Docker creates a set of namespaces for that container, providing a layer of isolation between containers:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;mnt&lt;/code&gt;&lt;/strong&gt;: (Mount) Provides filesystem isolation by managing filesystems and mount points. The &lt;code&gt;mnt&lt;/code&gt; namespace allows a container to have its own isolated set of mounted filesystems, the propagation modes can be one of the following: [&lt;code&gt;r&lt;/code&gt;]&lt;code&gt;shared&lt;/code&gt;, [&lt;code&gt;r&lt;/code&gt;]&lt;code&gt;slave&lt;/code&gt; or [&lt;code&gt;r&lt;/code&gt;]&lt;code&gt;private&lt;/code&gt;. The &lt;code&gt;r&lt;/code&gt; means recursive.&lt;/p&gt;
&lt;p&gt;If you run the following command, then the host&amp;rsquo;s mounted &lt;code&gt;host-path&lt;/code&gt; is &lt;a href=&#34;https://docs.docker.com/engine/admin/volumes/volumes/#create-and-manage-volumes&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;shared&lt;/a&gt; with all others that mount &lt;code&gt;host-path&lt;/code&gt;. Any changes made to the mounted data will be propagated to those that use the &lt;code&gt;shared&lt;/code&gt; mode propagation. Using &lt;code&gt;slave&lt;/code&gt; means only the master (&lt;code&gt;host-path&lt;/code&gt;) is able to propagate changes, not vice-versa. Using &lt;code&gt;private&lt;/code&gt; which is the default, will ensure no changes can be propagated.&lt;/p&gt;
&lt;h6 id=&#34;mounting-volumes-in-shared-mode-propagation&#34;&gt;Mounting volumes in shared mode propagation&lt;/h6&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;docker run &amp;lt;run arguments&amp;gt; --volume&lt;span style=&#34;color:#f92672&#34;&gt;=[&lt;/span&gt;host-path:&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;&amp;lt;container-path&amp;gt;:&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;z&lt;span style=&#34;color:#f92672&#34;&gt;][&lt;/span&gt;r&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;shared &amp;lt;container image name or id&amp;gt; &amp;lt;command&amp;gt; &amp;lt;args...&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you omit the &lt;code&gt;host-path&lt;/code&gt; you can &lt;a href=&#34;https://docs.docker.com/engine/tutorials/dockervolumes/#locating-a-volume&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;see the host path&lt;/a&gt; that was mounted when running the following command:&lt;/p&gt;
&lt;h6 id=&#34;query&#34;&gt;Query&lt;/h6&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;docker inspect &amp;lt;name or id of container&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Find the &amp;ldquo;Mounts&amp;rdquo; property in the JSON produced. It will have a &amp;ldquo;Source&amp;rdquo; and &amp;ldquo;Destination&amp;rdquo; similar to:&lt;/p&gt;
&lt;h6 id=&#34;result&#34;&gt;Result&lt;/h6&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;...
&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Mounts&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;
  &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Name&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;lt;container id&amp;gt;&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Source&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/var/lib/docker/volumes/&amp;lt;container id&amp;gt;/_data&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Destination&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;lt;container-path&amp;gt;&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Mode&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;RW&amp;#34;&lt;/span&gt;: true,
    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Propagation&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;shared&amp;#34;&lt;/span&gt;
  &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
...&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;An empty string for Mode means that it is set to its read-write default. For example, a container can mount sensitive host system directories such as &lt;code&gt;/&lt;/code&gt;, &lt;code&gt;/boot&lt;/code&gt;, &lt;code&gt;/etc&lt;/code&gt;, &lt;code&gt;/lib&lt;/code&gt;, &lt;code&gt;/proc&lt;/code&gt;, &lt;code&gt;/sys&lt;/code&gt;, along with the rest as I discuss in the Lock Down the Mounting of Partitions section of my book &lt;a href=&#34;https://f1.holisticinfosecforwebdevelopers.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Fascicle 1 of Holistic Info-Sec for Web Developers&lt;/a&gt;, particularly if that advice is not followed. If it is followed, you have some defence in depth working for you, and although Docker may have mounted a directory as read-write, the underlying mount may be read-only, thus stopping the container from being able to modify files in these locations on the host system. If the host does not have the above directories mounted with constrained permissions, then we are relying on the user running any given Docker container that mounts a sensitive host volume to mount it as read-only. For example, after the following command has been run, users within the container can modify files in the hosts &lt;code&gt;/etc&lt;/code&gt; directory:&lt;/p&gt;
&lt;h6 id=&#34;vulnerable-mount&#34;&gt;Vulnerable mount&lt;/h6&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;docker run -it --rm -v /etc:/hosts-etc --name&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;lets-mount-etc ubuntu&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h6 id=&#34;query-1&#34;&gt;Query&lt;/h6&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;docker inspect -f &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;{{ json .Mounts }}&amp;#34;&lt;/span&gt; lets-mount-etc&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h6 id=&#34;result-1&#34;&gt;Result&lt;/h6&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;
  &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Type&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;bind&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Source&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/etc&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Destination&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/hosts-etc&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Mode&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;RW&amp;#34;&lt;/span&gt;:true,
    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Propagation&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;
  &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Also keep in mind that, by default, the user in the container, unless otherwise specified, is root, the same root user as on the host system.&lt;/p&gt;
 &lt;div id=&#34;docker-host-engine-and-containers-namespaces-mnt-labelling&#34;/&gt;&lt;br&gt;
&lt;p&gt;Labelling systems such as &lt;a href=&#34;#docker-host-engine-and-containers-linux-security-modules-risks&#34;&gt;Linux Security Modules (LSM)&lt;/a&gt; require that the contents of a volume mounted into a container be &lt;a href=&#34;https://docs.docker.com/engine/admin/volumes/volumes/#create-and-manage-volumes&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;labelled&lt;/a&gt;. This can be done by adding the &lt;code&gt;z&lt;/code&gt; (as seen in above example) or &lt;code&gt;Z&lt;/code&gt; suffix to the volume mount. The &lt;code&gt;z&lt;/code&gt; suffix instructs Docker to share the mounted volume with other containers, and in so doing, Docker applies a shared content label. Alternatively, if you provide the &lt;code&gt;Z&lt;/code&gt; suffix, Docker applies a private unshared label, which means only the current container can use the mounted volume. Further details can be found at the &lt;a href=&#34;https://docs.docker.com/engine/admin/volumes/volumes/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;dockervolumes documentation&lt;/a&gt;. This is something to keep in mind if you are using LSM, and have a process inside your container that is unable to use the mounted data.&lt;br&gt;
&lt;code&gt;--volumes-from&lt;/code&gt; allows you to specify a data volume from another container.
&lt;br&gt;&lt;br&gt;
You can also &lt;a href=&#34;https://linux.die.net/man/8/mount&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;mount&lt;/a&gt; your Docker container mounts on the host by doing the following:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;mount --bind /var/lib/docker/&amp;lt;volumes&amp;gt;/&amp;lt;container id&amp;gt;/_data &amp;lt;/path/on/host&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;PID&lt;/code&gt;&lt;/strong&gt;: (Process ID) Provides process isolation, separates container processes from host and other container processes.&lt;br&gt;
&lt;br&gt;
The first process that is created in a new &lt;code&gt;PID&lt;/code&gt; namespace is the &amp;ldquo;init&amp;rdquo; process with &lt;code&gt;PID&lt;/code&gt; 1, which assumes parenthood of the other processes within the same &lt;code&gt;PID&lt;/code&gt; namespace. When &lt;code&gt;PID&lt;/code&gt; 1 is terminated, so are the rest of the processes within the same &lt;code&gt;PID&lt;/code&gt; namespace.
&lt;br&gt;&lt;br&gt;
&lt;code&gt;PID&lt;/code&gt; namespaces are &lt;a href=&#34;https://lwn.net/Articles/531419/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;hierarchically nested&lt;/a&gt; in ancestor-descendant relationships to a depth of up to 32 levels. All &lt;code&gt;PID&lt;/code&gt; namespaces have a parent namespace, other than the initial root &lt;code&gt;PID&lt;/code&gt; namespace of the host system. That parent namespace is the &lt;code&gt;PID&lt;/code&gt; namespace of the process that created the child namespace.
&lt;br&gt;&lt;br&gt;
Within a &lt;code&gt;PID&lt;/code&gt; namespace, it is possible to access (make system calls to specific &lt;code&gt;PID&lt;/code&gt;s) all other processes in the same namespace, as well as all processes of descendant namespaces. However, processes in a child &lt;code&gt;PID&lt;/code&gt; namespace cannot see processes that exist in the parent &lt;code&gt;PID&lt;/code&gt; namespace or further removed ancestor namespaces. The direction any process can access another process in an ancestor/descendant &lt;code&gt;PID&lt;/code&gt; namespace is one way.
&lt;br&gt;&lt;br&gt;
Processes in different &lt;code&gt;PID&lt;/code&gt; namespaces can have the same &lt;code&gt;PID&lt;/code&gt;, because the &lt;code&gt;PID&lt;/code&gt; namespace isolates the &lt;code&gt;PID&lt;/code&gt; number space from other &lt;code&gt;PID&lt;/code&gt; namespaces.
&lt;br&gt;&lt;br&gt;
Docker takes advantage of &lt;code&gt;PID&lt;/code&gt; namespaces. Just as you would expect, a Docker container can not access the host system processes, and process Ids that are used in the host system can be reused in the container, including &lt;code&gt;PID&lt;/code&gt; 1, by being reassigned to a process started within the container. The host system can however access all processes within its containers, because as stated above, &lt;code&gt;PID&lt;/code&gt; namespaces are hierarchically nested in parent-child relationships. Processes in the hosts &lt;code&gt;PID&lt;/code&gt; namespace can access all processes in their own namespace down to the &lt;code&gt;PID&lt;/code&gt; namespace that was responsible for starting the process, such as the process within the container in our case.
&lt;br&gt;&lt;br&gt;
The default behaviour can however be overridden to allow a container to be able to access processes within a sibling container, or the hosts &lt;code&gt;PID&lt;/code&gt; namespace. &lt;a href=&#34;https://docs.docker.com/engine/reference/run/#pid-settings-pid&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Example&lt;/a&gt;:&lt;/p&gt;
&lt;h6 id=&#34;syntax&#34;&gt;Syntax&lt;/h6&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;--pid&lt;span style=&#34;color:#f92672&#34;&gt;=[&lt;/span&gt;container:&amp;lt;name|id&amp;gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;,&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;host&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h6 id=&#34;example&#34;&gt;Example&lt;/h6&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Provides access to the `PID` namespace of container called myContainer&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# for container created from myImage.&lt;/span&gt;
docker run --pid&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;container:myContainer myImage&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h6 id=&#34;example-1&#34;&gt;Example&lt;/h6&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Provides access to the host `PID` namespace for container created from myImage&lt;/span&gt;
docker run --pid&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;host myImage&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;As an aside, &lt;code&gt;PID&lt;/code&gt; namespaces give us the &lt;a href=&#34;http://man7.org/linux/man-pages/man7/pid_namespaces.7.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;functionality of&lt;/a&gt;: &amp;ldquo;&lt;em&gt;suspending/resuming the set of processes in the container and migrating the container to a new host while the processes inside the container maintain the same PIDs.&lt;/em&gt;&amp;rdquo; with a &lt;a href=&#34;https://www.fir3net.com/Containers/Docker/the-essential-guide-in-transporting-your-docker-containers.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;handful of commands&lt;/a&gt;:&lt;/p&gt;
&lt;h6 id=&#34;example-2&#34;&gt;Example&lt;/h6&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;docker container pause myContainer &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;mySecondContainer...&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
docker export &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;options&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; myContainer
&lt;span style=&#34;color:#75715e&#34;&gt;# Move your container to another host.&lt;/span&gt;
docker import &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;OPTIONS&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; file|URL|- &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;REPOSITORY&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;:TAG&lt;span style=&#34;color:#f92672&#34;&gt;]]&lt;/span&gt;
docker container unpause myContainer &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;mySecondContainer...&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;net&lt;/code&gt;&lt;/strong&gt;: (Networking) Provides network isolation by managing the network stack and interfaces. It&amp;rsquo;s also essential to allow containers to communicate with the host system and other containers. Network namespaces were introduced into the kernel in 2.6.24, January 2008, with an additional year of development they were considered largely done. The only real concern here is understanding the Docker network modes and communication between containers. This is discussed in the Countermeasures.&lt;br&gt;
&lt;br&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;UTS&lt;/code&gt;&lt;/strong&gt;: (Unix Timesharing System) Provides isolation of kernel and version identifiers.&lt;br&gt;
&lt;br&gt;
UTS is the sharing of a computing resource with many users, a concept introduced in the 1960s/1970s.
&lt;br&gt;&lt;br&gt;
A UTS namespace is the set of identifiers &lt;a href=&#34;http://man7.org/linux/man-pages/man2/clone.2.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;returned by &lt;code&gt;uname&lt;/code&gt;&lt;/a&gt;, which include the hostname and the NIS domain name. Any processes which are not children of the process that requested the clone will not be able to see any changes made to the identifiers of the UTS namespace.
&lt;br&gt;&lt;br&gt;
If the &lt;code&gt;CLONE_NEWUTS&lt;/code&gt; constant is set, then the process being created will be created in a new UTS namespace with the hostname and NIS domain name copied and able to be modified independently from the UTS namespace of the calling process.
&lt;br&gt;&lt;br&gt;
If the &lt;code&gt;CLONE_NEWUTS&lt;/code&gt; constant is not set, then the process being created will be created in the same UTS namespace of the calling process, thus able to change the identifiers returned by &lt;code&gt;uname&lt;/code&gt;.
&lt;br&gt;&lt;br&gt;
When a container is created, a UTS namespace is copied (&lt;a href=&#34;https://github.com/docker/libcontainer/blob/83a102cc68a09d890cce3b6c2e5c14c49e6373a0/SPEC.md&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;CLONE_NEWUTS&lt;/code&gt; is set&lt;/a&gt;)(&lt;code&gt;--uts=&amp;quot;&amp;quot;&lt;/code&gt;) by default, providing a UTS namespace that can be modified independently from the target UTS namespece it was copied from.
&lt;br&gt;&lt;br&gt;
When a container is created with &lt;a href=&#34;https://docs.docker.com/engine/reference/run/#uts-settings-uts&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;--uts=&amp;quot;host&amp;quot;&lt;/code&gt;&lt;/a&gt;, a UTS namespace is inherited from the host, the &lt;code&gt;--hostname&lt;/code&gt; flag is invalid.&lt;br&gt;
&lt;br&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;IPC&lt;/code&gt;&lt;/strong&gt;: (InterProcess Communication) manages access to InterProcess Communications). &lt;code&gt;IPC&lt;/code&gt; namespaces isolate your container&amp;rsquo;s System V IPC and POSIX message queues, semaphores, and named shared memory from those of the host and other containers, unless another container specifies on run that it wants to share your namespace. It would be a lot safer if the producer could specify which consuming containers could use its &lt;a href=&#34;http://man7.org/linux/man-pages/man7/namespaces.7.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;namespace&lt;/a&gt;. IPC namespaces do not include IPC mechanisms that use filesystem resources such as named pipes.
&lt;br&gt;&lt;br&gt;
According to the &lt;a href=&#34;http://man7.org/linux/man-pages/man7/namespaces.7.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;namespaces man page&lt;/a&gt;: &amp;ldquo;&lt;em&gt;Objects created in an IPC namespace are visible to all other processes that are members of that namespace, but are not visible to processes in other IPC namespaces.&lt;/em&gt;&amp;rdquo;
&lt;br&gt;&lt;br&gt;
Although sharing memory segments between processes provide Inter-Process Communications at memory speed, rather than through pipes or worse, the network stack, this produces a significant security concern.
&lt;br&gt;&lt;br&gt;
By default a container does not share the host&amp;rsquo;s or any other container&amp;rsquo;s IPC namespace. This behaviour can be overridden to allow a (any) container to reuse another container&amp;rsquo;s or the host&amp;rsquo;s message queues, semaphores, and shared memory via their IPC namespace. &lt;a href=&#34;https://docs.docker.com/engine/reference/run/#ipc-settings-ipc&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Example&lt;/a&gt;:&lt;/p&gt;
&lt;h6 id=&#34;syntax-1&#34;&gt;Syntax&lt;/h6&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Allows a container to reuse another container&amp;#39;s IPC namespace.&lt;/span&gt;
--ipc&lt;span style=&#34;color:#f92672&#34;&gt;=[&lt;/span&gt;container:&amp;lt;name|id&amp;gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;,&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;host&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h6 id=&#34;example-3&#34;&gt;Example&lt;/h6&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;docker run -it --rm --name&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;container-producer ubuntu
root@609d19340303:/#

&lt;span style=&#34;color:#75715e&#34;&gt;# Allows the container named container-consumer to share the IPC namespace&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# of container called container-producer.&lt;/span&gt;
docker run -it --rm --name&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;container-consumer --ipc&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;container:container-producer ubuntu
root@d68ecd6ce69b:/#&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now find the Ids of the two running containers:&lt;/p&gt;
&lt;h6 id=&#34;query-2&#34;&gt;Query&lt;/h6&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;docker inspect --format&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;{{ .Id }}&amp;#34;&lt;/span&gt; container-producer container-consumer&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h6 id=&#34;result-2&#34;&gt;Result&lt;/h6&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;609d193403032a49481099b1fc53037fb5352ae148c58c362ab0a020f473c040
d68ecd6ce69b89253f7ab14de23c9335acaca64d210280590731ce1fcf7a7556&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can see from using the command supplied by the &lt;a href=&#34;https://benchmarks.cisecurity.org/tools2/docker/CIS_Docker_1.13.0_Benchmark_v1.0.0.pdf&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CIS_Docker_1.13.0_Benchmark&lt;/a&gt; that &lt;code&gt;container-consumer&lt;/code&gt; is using the IPC namespace of &lt;code&gt;container-producer&lt;/code&gt;:&lt;/p&gt;
&lt;h6 id=&#34;query-3&#34;&gt;Query&lt;/h6&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;docker ps --quiet --all | xargs docker inspect --format &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;{{ .Id }}: IpcMode={{ .HostConfig.IpcMode }}&amp;#39;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h6 id=&#34;result-3&#34;&gt;Result&lt;/h6&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;d68ecd6ce69b89253f7ab14de23c9335acaca64d210280590731ce1fcf7a7556: IpcMode&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;container:container-producer
609d193403032a49481099b1fc53037fb5352ae148c58c362ab0a020f473c040: IpcMode&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;When the last process in an IPC namespace terminates, the namespace will be destroyed along with all IPC objects in the namespace.&lt;br&gt;
&lt;br&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;user&lt;/code&gt;&lt;/strong&gt;: Not enabled by default. Allows a process within a container to have a unique range of user and group Ids within the container, known as the subordinate user and group Id feature in the Linux kernel. These do not map to the same user and group Ids of the host, container users to host users are remapped. For example, if a user within a container is root, which it is by default unless a specific user is defined in the image hierarchy, it will be mapped to a non-privileged user on the host system.&lt;br&gt;
Docker considers user namespaces to be an advanced feature. There are currently some Docker features that are &lt;a href=&#34;https://docs.docker.com/engine/reference/commandline/dockerd/#daemon-user-namespace-options&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;incompatible&lt;/a&gt; with using user namespaces, and according to the &lt;a href=&#34;https://benchmarks.cisecurity.org/tools2/docker/CIS_Docker_1.13.0_Benchmark_v1.0.0.pdf&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CIS Docker 1.13.0 Benchmark&lt;/a&gt;, functionalities that are broken if user namespaces are used. the &lt;a href=&#34;https://docs.docker.com/engine/reference/commandline/dockerd/#daemon-user-namespace-options&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Docker engine reference&lt;/a&gt; provides additional details around known restrictions of user namespaces.&lt;br&gt;
If your containers have a predefined non-root user, then, currently, user namespaces should not be enabled, due to possible unpredictable issues and complexities, according to &amp;ldquo;2.8 Enable user namespace support&amp;rdquo; of the &lt;a href=&#34;https://benchmarks.cisecurity.org/tools2/docker/CIS_Docker_1.13.0_Benchmark_v1.0.0.pdf&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CIS Docker Benchmark&lt;/a&gt;.&lt;br&gt;
The problem is that these mappings are performed on the Docker daemon rather than at a per-container level, so it is an all or nothing approach. This may change in the future though.&lt;br&gt;
As mentioned, user namespace support is available, but not enabled by default in the Docker daemon.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;namespaces-countermeasures&#34;&gt;Namespaces (Countermeasures)&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;mnt&lt;/code&gt;&lt;/strong&gt;: Keep the default propagation mode of &lt;code&gt;private&lt;/code&gt; unless you have a very good reason to change it. If you do need to change it, think about defence in depth and employ other defence strategies.&lt;br&gt;
&lt;br&gt;
If you have control over the Docker host, lock down the mounting of the host systems partitions as I discussed in the Lock Down the Mounting of Partitions subsection of the VPS chapter of my book &lt;a href=&#34;https://f1.holisticinfosecforwebdevelopers.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Fascicle 1 Holistic Info-Sec for Web Developers&lt;/a&gt;.
&lt;br&gt;&lt;br&gt;
If you have to mount a sensitive host system directory, mount it as read-only:
&lt;br&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;docker run -it --rm -v /etc:/hosts-etc:ro --name&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;lets-mount-etc ubuntu&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt;
&lt;p&gt;If any file modifications are now attempted on &lt;code&gt;/etc&lt;/code&gt; they will be unsuccessful.&lt;/p&gt;
&lt;h6 id=&#34;query-4&#34;&gt;Query&lt;/h6&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;docker inspect -f &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;{{ json .Mounts }}&amp;#34;&lt;/span&gt; lets-mount-etc&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h6 id=&#34;result-4&#34;&gt;Result&lt;/h6&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;
  &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Type&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;bind&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Source&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/etc&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Destination&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/hosts-etc&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Mode&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ro&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;RW&amp;#34;&lt;/span&gt;:false,
    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Propagation&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;
  &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Also, as discussed previously, lock down the user to non-root.&lt;/p&gt;
&lt;p&gt;If you are using LSM, you will probably want to use the &lt;code&gt;Z&lt;/code&gt; option as discussed in the risks section.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;PID&lt;/code&gt;&lt;/strong&gt;: By default enforces isolation from the containers &lt;code&gt;PID&lt;/code&gt; namespace, but not from the host to the container. If you are concerned about host systems being able to access your containers, as you should be, consider putting your containers within a VM&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;net&lt;/code&gt;&lt;/strong&gt;: A network namespace is a virtualisation of the network stack, with its own network devices, IP routing tables, firewall rules and ports.&lt;br&gt;
When a network namespace is created the only network interface that is created is the loopback interface, which is down until brought up.&lt;br&gt;
Each network interface, whether physical or virtual, can only reside in one namespace, but can be moved between namespaces.&lt;br&gt;
&lt;br&gt;
When the last process in a network namespace terminates, the namespace will be destroyed, destroy any virtual interfaces within it, and move any physical network devices back to the initial network namespace, not the process parent.
&lt;br&gt;&lt;br&gt;
&lt;strong&gt;Docker and Network Namespaces&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;A Docker network is analogous to a Linux kernel network namespace.&lt;/p&gt;
&lt;p&gt;When Docker is installed, three networks are created &lt;code&gt;bridge&lt;/code&gt;, &lt;code&gt;host&lt;/code&gt; and &lt;code&gt;null&lt;/code&gt;, which you can think of as network namespaces. These can be seen by running:&lt;/p&gt;
&lt;h6 id=&#34;docker-network-lshttpsdocsdockercomenginereferencecommandlinenetwork_ls&#34;&gt;&lt;a href=&#34;https://docs.docker.com/engine/reference/commandline/network_ls/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;docker network ls&lt;/code&gt;&lt;/a&gt;&lt;/h6&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;NETWORK ID    NAME              DRIVER   SCOPE
9897a3063354  bridge            bridge   local
fe179428ccd4  host              host     local
a81e8669bda7  none              null     local&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;When you run a container, if you want to override the default network of &lt;code&gt;bridge&lt;/code&gt;, you can specify which network in which you want to run the container with the &lt;code&gt;--network&lt;/code&gt; flag as the following:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;docker run --network&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&amp;lt;network&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The bridge can be seen by running &lt;code&gt;ifconfig&lt;/code&gt; on the host:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;docker0   Link encap:Ethernet  HWaddr 05:22:bb:08:41:b7  
          inet addr:172.17.0.1  Bcast:0.0.0.0  Mask:255.255.0.0
          inet6 addr: fe80::42:fbff:fe80:57a5/64 Scope:Link&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;When the Docker engine (CLI) client or API tells the Docker daemon to run a container, part of the process allocates a bridged interface, unless specified otherwise, that allows processes within the container to communicate to the system host via the virtual Ethernet bridge.&lt;/p&gt;
&lt;p&gt;Virtual Ethernet interfaces, when created, are always created as a pair. You can think of them as one interface on each side of a namespace wall with a tube through the wall connecting them. Packets come in one interface and exit the other, and vice versa.
&lt;br&gt;&lt;br&gt;
&lt;strong&gt;Creating and Listing Network NameSpaces&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Some of these commands you will need to run as root.&lt;/p&gt;
&lt;p&gt;Create:&lt;/p&gt;
&lt;h6 id=&#34;syntax-2&#34;&gt;Syntax&lt;/h6&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;ip netns add &amp;lt;yournamespacename&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h6 id=&#34;example-4&#34;&gt;Example&lt;/h6&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;ip netns add testnamespace&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This ip command adds a bind mount point for the &lt;code&gt;testnamespace&lt;/code&gt; namespace to &lt;code&gt;/var/run/netns/&lt;/code&gt;. When the &lt;code&gt;testnamespace&lt;/code&gt; namespace is created, the resulting file descriptor keeps the network namespace alive and persisted. This allows system administrators to apply configuration to the network namespace without fear that it will disappear when no processes are within it.&lt;/p&gt;
&lt;h6 id=&#34;verify-it-was-added&#34;&gt;Verify it was added&lt;/h6&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;ip netns list&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h6 id=&#34;result-5&#34;&gt;Result&lt;/h6&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;testnamespace&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;However, a network namespace added in this way cannot be used for a Docker container. In order to create a &lt;a href=&#34;https://docs.docker.com/engine/userguide/networking/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Docker network&lt;/a&gt; called &lt;code&gt;kimsdockernet&lt;/code&gt; run the following command:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# bridge is the default driver, so not required to be specified&lt;/span&gt;
docker network create --driver bridge kimsdockernet&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can then follow this with a&lt;br&gt;
&lt;code&gt;docker network ls&lt;/code&gt;&lt;br&gt;
to confirm that the network was added. You can base your network on one of the existing &lt;a href=&#34;https://docs.docker.com/engine/reference/run/#network-settings&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;network drivers&lt;/a&gt; created by Docker, the bridge driver is used by default.
&lt;br&gt;&lt;br&gt;
&lt;a href=&#34;https://docs.docker.com/engine/reference/run/#network-bridge&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;bridge&lt;/code&gt;&lt;/a&gt;: As seen above with the &lt;code&gt;ifconfig&lt;/code&gt; listing on the host system, an interface is created called docker0 when Docker is installed. A pair of veth (Virtual Ethernet) interfaces are created when the container is run with this &lt;code&gt;--network&lt;/code&gt; option. The &lt;code&gt;veth&lt;/code&gt; on the outside of the container will be attached to the bridge, the other &lt;code&gt;veth&lt;/code&gt; is put inside the container&amp;rsquo;s namespace, along with the existing loopback interface.&lt;br&gt;
&lt;a href=&#34;https://docs.docker.com/engine/reference/run/#network-none&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;none&lt;/code&gt;&lt;/a&gt;: There will be no networking in the container other than the loopback interface which was created when the network namespace was created, and has no routes to external traffic.&lt;br&gt;
&lt;a href=&#34;https://docs.docker.com/engine/reference/run/#network-host&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;host&lt;/code&gt;&lt;/a&gt;: Uses the network stack that the host system uses inside the container. The &lt;code&gt;host&lt;/code&gt; mode is more performant than the &lt;code&gt;bridge&lt;/code&gt; mode due to using the hosts native network stack, but also less secure.&lt;br&gt;
&lt;a href=&#34;https://docs.docker.com/engine/reference/run/#network-container&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;container&lt;/code&gt;&lt;/a&gt;: Allows you to specify another container to use its network stack.
&lt;br&gt;&lt;br&gt;
When running: &lt;code&gt;docker network inspect kimsdockernet&lt;/code&gt; before starting the container, and then again after, you will see the new container added to the &lt;code&gt;kimsdockernet&lt;/code&gt; network.
&lt;br&gt;&lt;br&gt;
Now you can run your container using your new network:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;docker run -it --network kimsdockernet --rm --name&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;container0 ubuntu&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;When one or more processes, Docker containers in this case, uses the &lt;code&gt;kimsdockernet&lt;/code&gt; network, it can also be seen opened by the presence of its file descriptor at:
&lt;br&gt;&lt;br&gt;
&lt;code&gt;/var/run/docker/netns/&amp;lt;filedescriptor&amp;gt;&lt;/code&gt;
&lt;br&gt;&lt;br&gt;
You can also see that the container named &lt;code&gt;container0&lt;/code&gt; has a network namespace by running the following command, which shows the file handles for the namespaces, and not just the network namespace:&lt;/p&gt;
&lt;h6 id=&#34;query-namespaces&#34;&gt;Query Namespaces&lt;/h6&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;sudo ls /proc/&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;docker inspect -f &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;{{ .State.Pid }}&amp;#39;&lt;/span&gt; container0&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;/ns -liah&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h6 id=&#34;result-6&#34;&gt;Result&lt;/h6&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;total &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;
&lt;span style=&#34;color:#ae81ff&#34;&gt;1589018&lt;/span&gt; dr-x--x--x &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt; root root &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; Mar &lt;span style=&#34;color:#ae81ff&#34;&gt;14&lt;/span&gt; 16:35 .
&lt;span style=&#34;color:#ae81ff&#34;&gt;1587630&lt;/span&gt; dr-xr-xr-x &lt;span style=&#34;color:#ae81ff&#34;&gt;9&lt;/span&gt; root root &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; Mar &lt;span style=&#34;color:#ae81ff&#34;&gt;14&lt;/span&gt; 16:35 ..
&lt;span style=&#34;color:#ae81ff&#34;&gt;1722671&lt;/span&gt; lrwxrwxrwx &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; root root &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; Mar &lt;span style=&#34;color:#ae81ff&#34;&gt;14&lt;/span&gt; 17:33 cgroup -&amp;gt; cgroup:&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;4026531835&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;span style=&#34;color:#ae81ff&#34;&gt;1722667&lt;/span&gt; lrwxrwxrwx &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; root root &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; Mar &lt;span style=&#34;color:#ae81ff&#34;&gt;14&lt;/span&gt; 17:33 ipc -&amp;gt; ipc:&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;4026532634&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;span style=&#34;color:#ae81ff&#34;&gt;1722670&lt;/span&gt; lrwxrwxrwx &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; root root &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; Mar &lt;span style=&#34;color:#ae81ff&#34;&gt;14&lt;/span&gt; 17:33 mnt -&amp;gt; mnt:&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;4026532632&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;span style=&#34;color:#ae81ff&#34;&gt;1589019&lt;/span&gt; lrwxrwxrwx &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; root root &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; Mar &lt;span style=&#34;color:#ae81ff&#34;&gt;14&lt;/span&gt; 16:35 net -&amp;gt; net:&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;4026532637&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;span style=&#34;color:#ae81ff&#34;&gt;1722668&lt;/span&gt; lrwxrwxrwx &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; root root &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; Mar &lt;span style=&#34;color:#ae81ff&#34;&gt;14&lt;/span&gt; 17:33 pid -&amp;gt; pid:&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;4026532635&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;span style=&#34;color:#ae81ff&#34;&gt;1722669&lt;/span&gt; lrwxrwxrwx &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; root root &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; Mar &lt;span style=&#34;color:#ae81ff&#34;&gt;14&lt;/span&gt; 17:33 user -&amp;gt; user:&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;4026531837&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;span style=&#34;color:#ae81ff&#34;&gt;1722666&lt;/span&gt; lrwxrwxrwx &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; root root &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; Mar &lt;span style=&#34;color:#ae81ff&#34;&gt;14&lt;/span&gt; 17:33 uts -&amp;gt; uts:&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;4026532633&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you run&lt;br&gt;
&lt;code&gt;ip netns list&lt;/code&gt;&lt;br&gt;
again, you may think that you should be able to see the Docker network, but you will not, unless you create the following symlink:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;ln -s /proc/&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;docker inspect -f &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;{{.State.Pid}}&amp;#39;&lt;/span&gt; container0&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;/ns/net /var/run/netns/container0
&lt;span style=&#34;color:#75715e&#34;&gt;# Don&amp;#39;t forget to remove the symlink once the container terminates,&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# else it will be dangling.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you want to run a command inside of the Docker network of a container, you can use the &lt;a href=&#34;http://man7.org/linux/man-pages/man1/nsenter.1.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;nsenter&lt;/code&gt;&lt;/a&gt; command of the &lt;code&gt;util-linux&lt;/code&gt; package:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Show the ethernet state:&lt;/span&gt;
nsenter -t &lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;docker inspect -f &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;{{ .State.Pid }}&amp;#39;&lt;/span&gt; container0&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt; -n ifconfig
&lt;span style=&#34;color:#75715e&#34;&gt;# Or&lt;/span&gt;
nsenter -t &lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;docker inspect -f &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;{{ .State.Pid }}&amp;#39;&lt;/span&gt; container0&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt; -n ip addr show
&lt;span style=&#34;color:#75715e&#34;&gt;# Or&lt;/span&gt;
nsenter --net&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;/var/run/docker/netns/&amp;lt;filedescriptor&amp;gt; ifconfig
&lt;span style=&#34;color:#75715e&#34;&gt;# Or&lt;/span&gt;
nsenter --net&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;/var/run/docker/netns/&amp;lt;filedescriptor&amp;gt; ip addr show&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Deleting Network NameSpaces&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The following command will remove the bind mount for the specified namespace. The namespace will continue to persist until all processes within it are terminated, at which point any virtual interfaces within it will be destroyed and any physical network devices if they were assigned, would be moved back to the initial network namespace, not the process parent.&lt;/p&gt;
&lt;h6 id=&#34;syntax-3&#34;&gt;Syntax&lt;/h6&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;ip netns delete &amp;lt;yournamespacename&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h6 id=&#34;example-5&#34;&gt;Example&lt;/h6&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;ip netns delete testnamespace&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h6 id=&#34;to-remove-a-docker-network&#34;&gt;To remove a docker network&lt;/h6&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;docker network rm kimsdockernet&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you still have a container running, you will receive an error:&lt;br&gt;
&lt;code&gt;Error response from daemon: network kimsdockernet has active endpoints&lt;/code&gt;&lt;br&gt;
Stop your container and try again.&lt;/p&gt;
&lt;p&gt;It also pays to &lt;a href=&#34;https://docs.docker.com/engine/userguide/networking/default_network/container-communication/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;understand container communication&lt;/a&gt; with each other.&lt;/p&gt;
&lt;p&gt;Also checkout the &lt;a href=&#34;#additional-resources&#34;&gt;Additional Resources&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;UTS&lt;/code&gt;&lt;/strong&gt; Do not start your containers with the &lt;code&gt;--uts&lt;/code&gt; flag set to &lt;code&gt;host&lt;/code&gt;&lt;br&gt;
As mentioned in the CIS_Docker_1.13.0_Benchmark &amp;ldquo;&lt;em&gt;Sharing the UTS namespace with the host provides full permission to the container to change the hostname of the host. This is insecure and should not be allowed.&lt;/em&gt;&amp;rdquo;. You can test that the container is not sharing the host&amp;rsquo;s UTS namespace by making sure that the following command returns nothing, instead of &lt;code&gt;host&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;docker ps --quiet --all | xargs docker inspect --format &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;{{ .Id }}: UTSMode={{ .HostConfig.UTSMode }}&amp;#39;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;IPC&lt;/code&gt;&lt;/strong&gt;: In order to stop another untrusted container sharing your containers IPC namespace, you could isolate all of your trusted containers in a VM, or if you are using some type of orchestration, that will usually have functionality to isolate groups of containers. If you can isolate your trusted containers sufficiently, then you may still be able to share the IPC namespace of other near by containers.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;user&lt;/code&gt;&lt;/strong&gt;: If you have read the &lt;a href=&#34;#docker-host-engine-and-containers-namespaces-risks&#34;&gt;risks section&lt;/a&gt; and still want to enable support for user namespaces, you first need to confirm that the host user of the associated containers &lt;code&gt;PID&lt;/code&gt; is not root by running the following CIS Docker Benchmark recommended commands:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;ps -p &lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;docker inspect --format&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;{{ .State.Pid }}&amp;#39;&lt;/span&gt; &amp;lt;CONTAINER ID&amp;gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt; -o pid,user&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Or, you can run the following command and make sure that the &lt;code&gt;userns&lt;/code&gt; is listed under the &lt;code&gt;SecurityOptions&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;docker info --format &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;{{ .SecurityOptions }}&amp;#39;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Once you have confirmed that your containers are not being run as root, you can look at enabling user namespace support on the Docker daemon.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;/etc/subuid&lt;/code&gt; and &lt;code&gt;/etc/subgid&lt;/code&gt; host files will be read for the user and optional group supplied to the &lt;code&gt;--userns-remap&lt;/code&gt; option of &lt;code&gt;dockerd&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;--userns-remap&lt;/code&gt; option accepts the following value types:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;uid&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;uid:gid&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;username&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;username:groupname&lt;/code&gt;
&lt;br&gt;&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The username must exist in the &lt;code&gt;/etc/passwd&lt;/code&gt; file, the &lt;code&gt;sbin/nologin&lt;/code&gt; users are &lt;a href=&#34;https://success.docker.com/KBase/Introduction_to_User_Namespaces_in_Docker_Engine&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;also valid&lt;/a&gt;. Subordinate user Id and group Id ranges need to be specified in &lt;code&gt;/etc/subuid&lt;/code&gt; and &lt;code&gt;/etc/subuid&lt;/code&gt; respectively.
&lt;br&gt;&lt;br&gt;
&amp;ldquo;&lt;em&gt;The UID/GID we want to remap to &lt;a href=&#34;https://success.docker.com/KBase/Introduction_to_User_Namespaces_in_Docker_Engine&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;does not need to match&lt;/a&gt; the UID/GID of the username in &lt;code&gt;/etc/passwd&lt;/code&gt;&lt;/em&gt;&amp;rdquo;. It is the entity in the &lt;code&gt;/etc/subuid&lt;/code&gt; that will be the owner of the Docker daemon and the containers it runs. The value you supply to &lt;code&gt;--userns-remap&lt;/code&gt; if numeric Ids, will be translated back to the valid user or group names of &lt;code&gt;/etc/passwd&lt;/code&gt; and &lt;code&gt;/etc/group&lt;/code&gt; which must exist, if username, groupname, they must match the entities in &lt;code&gt;/etc/passwd&lt;/code&gt;, &lt;code&gt;/etc/subuid&lt;/code&gt;, and &lt;code&gt;/etc/subgid&lt;/code&gt;.
&lt;br&gt;&lt;br&gt;
Alternatively, if you do not want to specify your own user and/or user:group, you can provide the &lt;code&gt;default&lt;/code&gt; value to &lt;code&gt;--userns-remap&lt;/code&gt;, and a default user of &lt;code&gt;dockremap&lt;/code&gt; along with subordinate uid and gid ranges that will be created in &lt;code&gt;/etc/passwd&lt;/code&gt; and &lt;code&gt;/etc/group&lt;/code&gt; if it does not already exist. Then the &lt;code&gt;/etc/subuid&lt;/code&gt; and &lt;code&gt;/etc/subgid&lt;/code&gt; files will be &lt;a href=&#34;https://docs.docker.com/engine/security/userns-remap/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;populated&lt;/a&gt; with a contiguous 65536 length range of subordinate user and group Ids respectively, starting at the offset of the existing entries in those files.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# As root, run:&lt;/span&gt;
dockerd --userns-remap&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;default&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If &lt;code&gt;dockremap&lt;/code&gt; does not already exist, it will be created:&lt;/p&gt;
&lt;h6 id=&#34;etcsubuid-and-etcsubgid&#34;&gt;&lt;code&gt;/etc/subuid and /etc/subgid&lt;/code&gt;&lt;/h6&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&amp;lt;existinguser&amp;gt;:100000:65536
dockremap:165536:65536&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;There are rules about providing multiple range segments in the &lt;code&gt;/etc/subuid&lt;/code&gt;, &lt;code&gt;/etc/subgid&lt;/code&gt; files, but that is beyond the scope of what I am providing here. For those advanced scenario details, check out the &lt;a href=&#34;https://github.com/jquast/docker/blob/2fd674a00f98469caa1ceb572e5ae92a68b52f44/docs/reference/commandline/dockerd.md#detailed-information-on-subuidsubgid-ranges&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Docker engine reference&lt;/a&gt;. The simplest scenario is to use a single contiguous range as seen in the above example, this will cause Docker to map the hosts user and group Ids to the container process using as much of the &lt;code&gt;165536:65536&lt;/code&gt; range as necessary. For example, the host&amp;rsquo;s root user would be mapped to &lt;code&gt;165536&lt;/code&gt;, the next host user would be mapped to container user &lt;code&gt;165537&lt;/code&gt;, and so on until the 65536 possible Ids are all mapped. Processes run as root inside the container are owned by the subordinate uid outside of the container.
&lt;br&gt;&lt;br&gt;
&lt;strong&gt;Disabling user namespace for specific containers&lt;/strong&gt;
&lt;br&gt;&lt;br&gt;
In order to disable user namespace mapping, on a per container basis, once enabled for the Docker daemon, you could supply the &lt;code&gt;--userns=host&lt;/code&gt; value to either of the &lt;code&gt;run&lt;/code&gt;, &lt;code&gt;exec&lt;/code&gt; or &lt;code&gt;create&lt;/code&gt; Docker commands. This would mean the default user within the container was mapped to the host&amp;rsquo;s root.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;read-only-containers&#34;&gt;Read-only Containers&lt;/h1&gt;
&lt;p&gt;In order to set up read-only hosts, physical or virtual, there is a lot of work to be done, and in some cases, it becomes challenging to stop an Operating System writing to some files. I discussed this in depth in the subsections &amp;ldquo;Partitioning on OS Installation&amp;rdquo; and &amp;ldquo;Lock Down the
Mounting of Partitions&amp;rdquo; in the VPS chapter of my book: Fascicle 1 of &lt;a href=&#34;https://f1.holisticinfosecforwebdevelopers.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Holistic Info-Sec for Web Developers&lt;/a&gt;. In contrast, running Docker containers as read-only is trivial.&lt;/p&gt;
&lt;p&gt;Running a container with the &lt;code&gt;--read-only&lt;/code&gt; flag stops writes to the container.&lt;/p&gt;
&lt;p&gt;This can sometimes be a little to constraining, as your application may need to write some temporary data locally. You could volume mount a host directory into your container, but this would obviously expose that temporary data to the host, and also other containers that may mount the same host directory. To stop other containers sharing your mounted volume, you would have to employ &lt;a href=&#34;#docker-host-engine-and-containers-namespaces-mnt-labelling&#34;&gt;labeling&lt;/a&gt; with the likes of LSM and apply the &lt;code&gt;Z&lt;/code&gt; suffix at volume mount time.&lt;/p&gt;
&lt;p&gt;A better, easier and simpler solution would be to apply the &lt;a href=&#34;https://docs.docker.com/engine/reference/commandline/run/#mount-tmpfs-tmpfs&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;--tmpfs&lt;/code&gt;&lt;/a&gt; flag to one or more directories. &lt;code&gt;--tmpfs&lt;/code&gt; allows the creation of tmpfs (appearing as a mounted file system, but stored in volatile memory) mounts on any local directory, which solves the problem of not being able to write to read-only containers.&lt;/p&gt;
&lt;p&gt;If an existing directory is specified with the &lt;code&gt;--tmpfs&lt;/code&gt; option, you will experience similar behaviour to that of mounting an empty directory onto an existing one. The directory is initially empty, any additions or modifications to the directories contents will not persist past container stop.&lt;/p&gt;
&lt;p&gt;The following is an example of running a container as read-only with a writeable tmpfs &lt;code&gt;/tmp&lt;/code&gt; directory:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;docker run -it --rm --read-only --tmpfs /tmp --name&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;my-read-only-container ubuntu&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The default mount flags with &lt;code&gt;--tmpfs&lt;/code&gt; are the same as the Linux default &lt;code&gt;mount&lt;/code&gt; flags, if you do not specify any &lt;code&gt;mount&lt;/code&gt; flags the following will be used:&lt;br&gt;
&lt;code&gt;rw,noexec,nosuid,nodev,size=65536k&lt;/code&gt;&lt;/p&gt;
&lt;h1 id=&#34;runc-and-where-it-fits-in&#34;&gt;runC and Where it Fits in&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;Docker engine&lt;/strong&gt; is now built on containerd and runC. Engine creates the image indirectly via containerd -&amp;gt; runC using &lt;a href=&#34;https://github.com/opencontainers/runc/tree/master/libcontainer&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;libcontainer&lt;/a&gt; -&amp;gt; and passes it to containerd.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://containerd.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;strong&gt;containerd&lt;/strong&gt;&lt;/a&gt; (daemon for Linux or Windows):&lt;br&gt;
containerd is based on the Docker engine&amp;rsquo;s core container runtime. It manages the complete container life-cycle, managing primitives on Linux and Windows hosts such as the following, whether directly or indirectly:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Image transfer and storage&lt;/li&gt;
&lt;li&gt;Container execution and supervision&lt;/li&gt;
&lt;li&gt;Management of network interfaces&lt;/li&gt;
&lt;li&gt;Local storage&lt;/li&gt;
&lt;li&gt;Native plumbing level API&lt;/li&gt;
&lt;li&gt;Full Open Container Initiative (OCI) support: image and runtime (runC) specification&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/containerd/containerd&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;containerd&lt;/code&gt;&lt;/a&gt; calls &lt;code&gt;containerd-shim&lt;/code&gt; which uses runC to run the container. &lt;code&gt;containerd-shim&lt;/code&gt; allows the runtime, which is &lt;code&gt;docker-runc&lt;/code&gt; in Docker&amp;rsquo;s case, to exit once it has started the container, thus allowing the container to run without a daemon. You can see this if you run&lt;br&gt;
&lt;code&gt;ps aux | grep docker&lt;/code&gt;&lt;br&gt;
In fact, if you run this command you will see how all the components hang together. Viewing this output along with the diagram below, will help solidify your understanding of the relationships between the components.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://runc.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;strong&gt;runC&lt;/strong&gt;&lt;/a&gt; is the container runtime that runs containers (think, run Container) according to the OCI specification, runC is a small standalone command line tool (CLI) built on and providing interface to libcontainer, which does most of the work. runC provides interface with:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linux Kernel Namespaces&lt;/li&gt;
&lt;li&gt;Cgroups&lt;/li&gt;
&lt;li&gt;Linux Security Modules&lt;/li&gt;
&lt;li&gt;Capabilities&lt;/li&gt;
&lt;li&gt;Seccomp&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;These features have been integrated into the low level, light weight, portable, container runtime CLI called runC, with libcontainer doing the heavy lifting. It has no dependency on the rest of the Docker platform, and has all the code required by Docker to interact with the container specific system features. More correctly, libcontainer is the library that interfaces with the above mentioned kernel features. runC leverages libcontainer directly, without the Docker engine being required in the middle.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/opencontainers/runc&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;runC&lt;/a&gt; was created by the OCI, whose goal is to have an industry standard for container runtimes and formats, attempting to ensure that containers built for one engine can run on other engines.&lt;/p&gt;














&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;
        &lt;img alt=&#34;&#34; srcset=&#34;
               /media/post/2018/04/DockerArchitecture_hue7bdac92e3b28b5ea456746149ee7ba4_30401_c8276063c90c6333167baad631da0049.png 400w,
               /media/post/2018/04/DockerArchitecture_hue7bdac92e3b28b5ea456746149ee7ba4_30401_c5b39f0bfa4584a548e1e4f2b16e5274.png 760w,
               /media/post/2018/04/DockerArchitecture_hue7bdac92e3b28b5ea456746149ee7ba4_30401_1200x1200_fit_lanczos_2.png 1200w&#34;
               src=&#34;https://binarymist.io/media/post/2018/04/DockerArchitecture_hue7bdac92e3b28b5ea456746149ee7ba4_30401_c8276063c90c6333167baad631da0049.png&#34;
               width=&#34;720&#34;
               height=&#34;546&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;hr&gt;
&lt;p&gt;&lt;em&gt;If you&amp;rsquo;re working with Docker, you owe it to yourself to get this book.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;btn btn-outline-primary&#34; href=&#34;https://leanpub.com/dockersecurity-quickreference&#34; target=&#34;_blank&#34;&gt;&lt;i class=&#34;fab fa-leanpub&#34;&gt;&lt;/i&gt; &lt;b&gt;Get The Full Book&lt;/b&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;At this stage, it&amp;rsquo;s only $9 NZ, get your self a copy before I realise it&amp;rsquo;s too cheap.&lt;/p&gt;
&lt;br&gt;
&lt;p&gt;As always, &lt;a href=&#34;#comments&#34;&gt;let me know&lt;/a&gt; if there&amp;rsquo;s anything you don&amp;rsquo;t understand, or submit a &lt;a href=&#34;https://github.com/binarymist/BinaryMistBlog/pulls&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;pull request&lt;/a&gt; or open an &lt;a href=&#34;https://github.com/binarymist/BinaryMistBlog/issues&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;issue&lt;/a&gt; if you find any errors. 😃&lt;/p&gt;
&lt;h1 id=&#34;additional-resources&#34;&gt;Additional Resources&lt;/h1&gt;
&lt;p&gt;The following are the additional resources in the &lt;a href=&#34;https://binarymist.io/publication/docker-security/&#34;&gt;Docker Security&lt;/a&gt; book.&lt;/p&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    I&amp;rsquo;m also going to be interviewing &lt;a href=&#34;http://mhausenblas.info/&#34;&gt;Michael Hausenblas&lt;/a&gt; in a couple of months on the topic of Docker Networking. Keep your eye on my &lt;a href=&#34;https://binarymist.io/publication/#8&#34;&gt;Publications&lt;/a&gt; if this interests you, or even leave a comment &lt;a href=&#34;#comments&#34;&gt;below&lt;/a&gt; and I&amp;rsquo;ll let you know when it&amp;rsquo;s available.
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Cisecurity&lt;/strong&gt;&lt;br&gt;
has an &lt;a href=&#34;https://benchmarks.cisecurity.org/tools2/docker/CIS_Docker_1.13.0_Benchmark_v1.0.0.pdf&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;excellent resource&lt;/a&gt; for hardening docker images, which the Docker Security team helped with. The CIS Benchmark for Docker should be consulted in parallel to reading my Docker Security book&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;I also conducted an interview called &amp;ldquo;&lt;a href=&#34;https://binarymist.io/publication/ser-podcast-docker-security/&#34;&gt;Docker Security&lt;/a&gt;&amp;quot;&lt;/strong&gt;&lt;br&gt;
for Software Engineering Radio in which Docker Security Team Lead Diogo Monica appeared as guest and provided some excellent advice, opinions, and food for thought, be sure to listen to it&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Network Namespace&lt;/strong&gt; source code&lt;br&gt;
&lt;a href=&#34;https://github.com/torvalds/linux/blob/master/net/core/net_namespace.c&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://github.com/torvalds/linux/blob/master/net/core/net_namespace.c&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;IP-NETNS&lt;/strong&gt; man page&lt;br&gt;
&lt;a href=&#34;http://man7.org/linux/man-pages/man8/ip-netns.8.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://man7.org/linux/man-pages/man8/ip-netns.8.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Introducing Linux Network Namespaces&lt;/strong&gt;&lt;br&gt;
&lt;a href=&#34;http://blog.scottlowe.org/2013/09/04/introducing-linux-network-namespaces/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://blog.scottlowe.org/2013/09/04/introducing-linux-network-namespaces/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Network namespaces&lt;/strong&gt;&lt;br&gt;
&lt;a href=&#34;https://blogs.igalia.com/dpino/2016/04/10/network-namespaces/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://blogs.igalia.com/dpino/2016/04/10/network-namespaces/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;docker network&lt;/strong&gt;&lt;br&gt;
&lt;a href=&#34;https://docs.docker.com/engine/reference/commandline/network/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://docs.docker.com/engine/reference/commandline/network/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Namespaces in operation&lt;/strong&gt;&lt;br&gt;
&lt;a href=&#34;https://lwn.net/Articles/580893/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://lwn.net/Articles/580893/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;dockerscan&lt;/strong&gt; may be worth keeping an eye on for offensive testing&lt;br&gt;
&lt;a href=&#34;https://github.com/cr0hn/dockerscan&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://github.com/cr0hn/dockerscan&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Docker SELinux Man Page&lt;/strong&gt;&lt;br&gt;
&lt;a href=&#34;https://www.mankier.com/8/docker_selinux&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://www.mankier.com/8/docker_selinux&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Increasing Attacker Cost using Immutable Infrastructure&lt;/strong&gt;&lt;br&gt;
&lt;a href=&#34;https://diogomonica.com/2016/11/19/increasing-attacker-cost-using-immutable-infrastructure/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://diogomonica.com/2016/11/19/increasing-attacker-cost-using-immutable-infrastructure/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Diogo Monica on Mutual TLS&lt;/strong&gt;&lt;br&gt;
&lt;a href=&#34;https://www.youtube.com/watch?v=apma_C24W58&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://www.youtube.com/watch?v=apma_C24W58&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Diogo Monica on Orchestrating Least Privilege&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=xpGNAiA3XW8&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://www.youtube.com/watch?v=xpGNAiA3XW8&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.slideshare.net/Docker/orchestrating-least-privilege-by-diogo-monica-67186063&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://www.slideshare.net/Docker/orchestrating-least-privilege-by-diogo-monica-67186063&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Comparison of secrets across orchestrators&lt;/strong&gt;&lt;br&gt;
&lt;a href=&#34;https://medium.com/on-docker/secrets-and-lie-abilities-the-state-of-modern-secret-management-2017-c82ec9136a3d#.f6yba66ti&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://medium.com/on-docker/secrets-and-lie-abilities-the-state-of-modern-secret-management-2017-c82ec9136a3d#.f6yba66ti&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Description of how PKI automatically gets setup in swarm&lt;/strong&gt;&lt;br&gt;
&lt;a href=&#34;https://docs.docker.com/engine/swarm/how-swarm-mode-works/pki/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://docs.docker.com/engine/swarm/how-swarm-mode-works/pki/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Image signing&lt;/strong&gt;, and why it is important&lt;br&gt;
&lt;a href=&#34;https://blog.docker.com/2015/08/content-trust-docker-1-8/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://blog.docker.com/2015/08/content-trust-docker-1-8/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Docker security scanning (content integrity)&lt;/strong&gt;&lt;br&gt;
&lt;a href=&#34;https://blog.docker.com/2016/05/docker-security-scanning/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://blog.docker.com/2016/05/docker-security-scanning/&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Docker Security - Quick Reference</title>
      <link>https://binarymist.io/publication/docker-security/</link>
      <pubDate>Mon, 01 Jan 2018 00:00:00 +0000</pubDate>
      <guid>https://binarymist.io/publication/docker-security/</guid>
      <description>&lt;p&gt;Check out Kim&amp;rsquo;s &lt;a href=&#34;https://binarymist.io/blog/2018/03/31/docker-security/&#34;&gt;blog post&lt;/a&gt; which goes into some of the detail within this book, along with what &lt;a href=&#34;https://binarymist.io/blog/2018/03/31/docker-security/#comments&#34;&gt;others are saying&lt;/a&gt; about Docker Security.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://leanpub.com/dockersecurity-quickreference&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;













&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;
        &lt;img alt=&#34;Docker Security Quick Reference&#34; srcset=&#34;
               /media/publication/title_page_docker-security_720_hufbfdc40a69121df1e8e12d60d596ff18_33085_fba40a7757c13a9d5aaf89f5d2b9a6a3.png 400w,
               /media/publication/title_page_docker-security_720_hufbfdc40a69121df1e8e12d60d596ff18_33085_08eda1ab82e35a5e1d438d2d93a4e431.png 760w,
               /media/publication/title_page_docker-security_720_hufbfdc40a69121df1e8e12d60d596ff18_33085_1200x1200_fit_lanczos_2.png 1200w&#34;
               src=&#34;https://binarymist.io/media/publication/title_page_docker-security_720_hufbfdc40a69121df1e8e12d60d596ff18_33085_fba40a7757c13a9d5aaf89f5d2b9a6a3.png&#34;
               width=&#34;587&#34;
               height=&#34;760&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Please note that the entire content of this book is included in The VPS chapter of &lt;a href=&#34;https://f1.holisticinfosecforwebdevelopers.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Holistic InfoSec for Web Developers F1&lt;/a&gt;.&lt;/p&gt;
&lt;br&gt;
&lt;h5 id=&#34;errata-errors-typos-etc&#34;&gt;Errata (errors, typos, etc.)&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;Submit an &lt;a href=&#34;https://github.com/binarymist/dockersecurity-quickreference/issues&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;issue&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Open &lt;a href=&#34;https://github.com/binarymist/dockersecurity-quickreference/issues?q=is%3Aopen&amp;#43;is%3Aissue&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;issues&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Closed &lt;a href=&#34;https://github.com/binarymist/dockersecurity-quickreference/issues?q=is%3Aissue&amp;#43;is%3Aclosed&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;issues&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Holistic Info-Sec for Web Developers</title>
      <link>https://binarymist.io/publication/holistic-infosec-for-web-developers/</link>
      <pubDate>Fri, 01 Dec 2017 00:00:00 +0000</pubDate>
      <guid>https://binarymist.io/publication/holistic-infosec-for-web-developers/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Captcha Considerations</title>
      <link>https://binarymist.io/blog/2015/12/31/captcha-considerations/</link>
      <pubDate>Thu, 31 Dec 2015 00:00:00 +1300</pubDate>
      <guid>https://binarymist.io/blog/2015/12/31/captcha-considerations/</guid>
      <description>&lt;p&gt;This post was taken from the content of the Web Applications chapter of Kim&amp;rsquo;s book &lt;a href=&#34;https://f1.holisticinfosecforwebdevelopers.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Holistic Info-Sec for Web Developers F1&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;risks&#34;&gt;Risks&lt;/h2&gt;














&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;
        &lt;img alt=&#34;Exploiting Captcha&#34; srcset=&#34;
               /media/post/2015/12/easy-verywidespread-easy-low_hu0da0c89af40605943f308522b921f22a_5306_9b23d6c9e255b2ac858ff1a609a54c5b.png 400w,
               /media/post/2015/12/easy-verywidespread-easy-low_hu0da0c89af40605943f308522b921f22a_5306_92535d27ee8bdf61eb8b39c77a3142f4.png 760w,
               /media/post/2015/12/easy-verywidespread-easy-low_hu0da0c89af40605943f308522b921f22a_5306_1200x1200_fit_lanczos_2.png 1200w&#34;
               src=&#34;https://binarymist.io/media/post/2015/12/easy-verywidespread-easy-low_hu0da0c89af40605943f308522b921f22a_5306_9b23d6c9e255b2ac858ff1a609a54c5b.png&#34;
               width=&#34;760&#34;
               height=&#34;21&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;p&gt;Lack of captchas are a risk, but so are captchas themselves&amp;hellip;&lt;/p&gt;
&lt;p&gt;Let&amp;rsquo;s look at the problem here? What are we trying to stop with captchas?&lt;/p&gt;
&lt;p&gt;Bots submitting. What ever it is, whether:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Advertising&lt;/li&gt;
&lt;li&gt;Creating an unfair advantage over real humans&lt;/li&gt;
&lt;li&gt;Link creation in attempt to increase SEO&lt;/li&gt;
&lt;li&gt;Malicious code insertion&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You are more than likely not interested in accepting it.&lt;/p&gt;
&lt;p&gt;What do we not want to block?&lt;/p&gt;
&lt;p&gt;People submitting genuinely innocent input. If a person is prepared to fill out a form manually, even if it is spam, then a person can view the submission and very quickly delete the validated, filtered and possibly sanitised message.&lt;/p&gt;
&lt;h2 id=&#34;countermeasures&#34;&gt;Countermeasures&lt;/h2&gt;














&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;
        &lt;img alt=&#34;PreventionVERYEASY&#34; srcset=&#34;
               /media/post/2015/12/preventionveryeasy_hue85c0770b9bfd9bbe6148975eddb9d73_1327_829ce0581bf2ae160df12050994a8825.png 400w,
               /media/post/2015/12/preventionveryeasy_hue85c0770b9bfd9bbe6148975eddb9d73_1327_fa4aa7b849bceaae3cd1b974bffa91d6.png 760w,
               /media/post/2015/12/preventionveryeasy_hue85c0770b9bfd9bbe6148975eddb9d73_1327_1200x1200_fit_lanczos_2.png 1200w&#34;
               src=&#34;https://binarymist.io/media/post/2015/12/preventionveryeasy_hue85c0770b9bfd9bbe6148975eddb9d73_1327_829ce0581bf2ae160df12050994a8825.png&#34;
               width=&#34;760&#34;
               height=&#34;20&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;h3 id=&#34;types&#34;&gt;Types&lt;/h3&gt;
&lt;h4 id=&#34;text-recognition&#34;&gt;Text Recognition&lt;/h4&gt;
&lt;p&gt;recaptcha uses this technique. See below for details.&lt;/p&gt;
&lt;h4 id=&#34;image-recognition&#34;&gt;Image Recognition&lt;/h4&gt;
&lt;p&gt;Uses images which users have to perform certain operations on, like dragging them to another image. For example: &amp;ldquo;Please drag all cat images to the cat mat.&amp;rdquo;, or &amp;ldquo;Please select all images of things that dogs eat.&amp;rdquo; sweetcaptcha is an example of this type of captcha. This type completely rules out the visually impaired users.&lt;/p&gt;
&lt;h4 id=&#34;friend-recognition&#34;&gt;Friend Recognition&lt;/h4&gt;
&lt;p&gt;Pioneered by&amp;hellip; you guessed it. Facebook. This type of captcha focusses on human hackers, the idea being that they will not know who your friends are.&lt;/p&gt;
&lt;p&gt;&amp;ldquo;&lt;em&gt;Instead of showing you a traditional captcha on Facebook, one of the ways we may help verify your identity is through&lt;/em&gt; &lt;a href=&#34;https://m.facebook.com/story.php?story_fbid=191422450875446&amp;amp;id=121897834504447&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;em&gt;social authentication&lt;/em&gt;&lt;/a&gt;. &lt;em&gt;We will show you a few pictures of your friends and ask you to name the person in those photos. Hackers halfway across the world might know your password, but they don&amp;rsquo;t know who your friends are.&lt;/em&gt;&amp;rdquo;&lt;/p&gt;
&lt;p&gt;I disagree with that statement. A determined hacker will usually be able to find out who your friends are. There is another problem, do you know who all of your friends are? Every acquaintance? I am terrible with names and so are many people. This is supposed to be used to authenticate you. So you have to be able to answer the questions before you can log in.&lt;/p&gt;
&lt;h4 id=&#34;logic-questions&#34;&gt;Logic Questions&lt;/h4&gt;
&lt;p&gt;This is what textcaptcha uses. Simple logic questions designed for the intelligence of a seven year old child. These are more accessible than image and textual image recognition, but they can take longer than image recognition to answer, unless the user is visually impared. The questions are usually language specific also, usually targeting the English language.&lt;/p&gt;
&lt;h4 id=&#34;user-interaction&#34;&gt;User Interaction&lt;/h4&gt;
&lt;p&gt;This is a little like image recognition. Users have to perform actions that virtual intelligence can not work out&amp;hellip; yet. Like dragging a slider a certain number of notches. If an offering gets popular, creating some code to perform the action may not be that hard and would definitely be worth the effort for bot creators. This is obviously not going to work for the visually impaired or for people with handicapped motor skills.&lt;/p&gt;
&lt;p&gt;In NPM land, as usual there are many options to choose from. The following were the offerings I evaluated. None of which really felt like a good fit:&lt;/p&gt;
&lt;h3 id=&#34;offerings&#34;&gt;Offerings&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;total-captcha. Depends on node-canvas. Have to install cairo first, but why? No explanation. Very little of anything here. Move on. How does this work? Do not know. What type is it? Presume text recognition.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.npmjs.com/package/easy-captcha&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;easy-captcha&lt;/a&gt; is a text recognition offering generating images&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.npmjs.com/package/simple-captcha&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;simple-captcha&lt;/a&gt; looks like another text recognition offering. I really do not want to be writing image files to my server.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.npmjs.com/package/node-captcha&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;node-captcha&lt;/a&gt; Depends on canvas. By the look of the package this is another text recognition in a generated image.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.npmjs.com/package/re-captcha&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;re-captcha&lt;/a&gt; was one of the first captcha offerings, created at the Carnegie Mellon University by Luis von Ahn, Ben Maurer, Colin McMillen, David Abraham and Manuel Blum who invented the term captcha. Google later acquired it in September 2009. recaptcha is a text recognition captcha that uses scanned text that optical character recognition (OCR) technology has failed to interpret, which has the added benefit of &lt;a href=&#34;https://en.wikipedia.org/wiki/ReCAPTCHA&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;helping to digitise text&lt;/a&gt; for The New York Times and Google Books. 













&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;
        &lt;img alt=&#34;recaptcha&#34; srcset=&#34;
               /media/post/2015/12/recaptcha_hu832fe315494b4726b3fcf2d66e8b02ac_33240_184e0065d461eb47387907f4336f6147.jpg 400w,
               /media/post/2015/12/recaptcha_hu832fe315494b4726b3fcf2d66e8b02ac_33240_2b4bad4f55948909770ec7b40b57d905.jpg 760w,
               /media/post/2015/12/recaptcha_hu832fe315494b4726b3fcf2d66e8b02ac_33240_1200x1200_fit_q90_lanczos.jpg 1200w&#34;
               src=&#34;https://binarymist.io/media/post/2015/12/recaptcha_hu832fe315494b4726b3fcf2d66e8b02ac_33240_184e0065d461eb47387907f4336f6147.jpg&#34;
               width=&#34;325&#34;
               height=&#34;128&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.npmjs.com/package/sweetcaptcha&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;sweetcaptcha&lt;/a&gt; uses the sweetcaptcha cloud service of which you must abide by their terms and conditions, requires another node package, and requires some integration work. sweetcaptcha is an image recognition type of captcha. 













&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;
        &lt;img alt=&#34;sweetcaptcha&#34; srcset=&#34;
               /media/post/2015/12/sweetcaptcha_hu325fcf01328306f8090673f1c80c97d5_9147_ad6a930277d08a5699f0d46e50c0f9c2.jpg 400w,
               /media/post/2015/12/sweetcaptcha_hu325fcf01328306f8090673f1c80c97d5_9147_e0330a09c55f2227ce98905398cf6bcc.jpg 760w,
               /media/post/2015/12/sweetcaptcha_hu325fcf01328306f8090673f1c80c97d5_9147_1200x1200_fit_q90_lanczos.jpg 1200w&#34;
               src=&#34;https://binarymist.io/media/post/2015/12/sweetcaptcha_hu325fcf01328306f8090673f1c80c97d5_9147_ad6a930277d08a5699f0d46e50c0f9c2.jpg&#34;
               width=&#34;318&#34;
               height=&#34;159&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://textcaptcha.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;textcaptcha&lt;/a&gt; is a logic question captcha relying on an external service for the questions and md5 hashes of the correct lower cased answers. This looks pretty simple to set up, but again expects your users to use their brain on things they should not have to.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;After some additional research I worked out why the above types and offerings didn&amp;rsquo;t feel like a good fit. It pretty much came down to user experience.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Why should genuine users/customers of your web application be disadvantaged by having to jump through hoops because you have decided you want to stop bots spamming you? Would it not make more sense to make life harder for the bots rather than for your genuine users?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Some other considerations I had. Ideally I wanted a simple solution requiring few or ideally no external dependencies, no JavaScript required, no reliance on the browser or anything out of my control, no images and it definitely should not cost any money.&lt;/p&gt;
&lt;h3 id=&#34;alternative-approaches&#34;&gt;Alternative Approaches&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Services like Disqus can be good for commenting. Obviously the comments are all stored somewhere in the cloud out of your control and this is an external dependency. For simple text input, this is probably not what you want. Similar services such as all the social media authentication services can take things a bit too far I think. They remove freedoms from your users. Why should your users be disadvantaged by leaving a comment or posting a message on your web application? &lt;a href=&#34;http://perltricks.com/article/104/2014/7/29/Your-users-deserve-better-than-Disqus&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Disqus tracks users activities&lt;/a&gt; from hosting website to website whether you have an account, are logged in or not. &lt;a href=&#34;https://en.wikipedia.org/wiki/Disqus#Criticism_and_privacy_concerns&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Any information they collect&lt;/a&gt; such as IP address, web browser details, installed add-ons, referring pages and exit links may be disclosed to any third party. When this data is aggregated it is useful for de-anonymising users. If users choose to block the Disqus script, the comments are not visible. Disqus has also published its registered users entire commenting histories, along with a list of connected blogs and services on publicly viewable user profile pages. Disqus also engage in add targeting and blackhat SEO techniques from the websites in which their script is installed.&lt;/li&gt;
&lt;li&gt;Services like Akismet and Mollom which take user input and analyse for spam signatures. Mollom sometimes presents a captcha if it is unsure. These two services learn from their mistakes if they mark something as spam and you unmark it, but of course you are going to have to be watching for that. Matt Mullenweg created Akismet so that his mother could blog in safety. &amp;ldquo;&lt;em&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Akismet&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;His first attempt&lt;/a&gt; was a JavaScript plugin which modified the comment form and hid fields, but within hours of launching it, spammers downloaded it, figured out how it worked, and bypassed it. This is a common pitfall for anti-spam plugins: once they get traction&lt;/em&gt;&amp;rdquo;. My advice to this is not to use a common plugin, but to create something custom. I discuss this soon.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The above solutions are excellent targets for creating exploits that will have a large pay off due to the fact that so many websites are using them. There are exploits discovered for these services regularly.&lt;/p&gt;
&lt;h3 id=&#34;still-not-cutting-ithttpwwwsmashingmagazinecom201103in-search-of-the-perfect-captcha&#34;&gt;&lt;a href=&#34;http://www.smashingmagazine.com/2011/03/in-search-of-the-perfect-captcha/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Still not cutting it&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&amp;ldquo;&lt;em&gt;Given the fact that many clients count on conversions to make money, not receiving 3.2% of those conversions could put a dent in sales. Personally, I would rather sort through a few SPAM conversions instead of losing out on possible income.&lt;/em&gt;&amp;rdquo;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Casey Henry: &lt;a href=&#34;https://moz.com/blog/captchas-affect-on-conversion-rates&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Captchas&#39; Effect on Conversion Rates&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;ldquo;&lt;em&gt;Spam is not the user’s problem; it is the problem of the business that is providing the website. It is arrogant and lazy to try and push the problem onto a website’s visitors.&lt;/em&gt;&amp;rdquo;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Tim Kadlec: &lt;a href=&#34;http://timkadlec.com/2011/01/death-to-captchas/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Death to Captchas&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;user-time-expenditure&#34;&gt;User Time Expenditure&lt;/h3&gt;
&lt;p&gt;Recording how long it takes from fetch to submit. This is another technique, in which the time is measured from fetch to submit. For example if the time span is under five seconds it is more than likely a bot, so handle the message accordingly.&lt;/p&gt;
&lt;h3 id=&#34;bot-pot&#34;&gt;Bot Pot&lt;/h3&gt;
&lt;p&gt;Spamming bots operating on custom mechanisms will in most cases just try, then move on. If you decide to use one of the common offerings from above, exploits will be more common, depending on how wide spread the offering is. This is one of the cases where going custom is a better option. Worse case is you get some spam and you can modify your technique, but you get to keep things simple, tailored to your web application, your users needs, no external dependencies and no monthly fees. This is also the simplest technique and requires very little work to implement.&lt;/p&gt;
&lt;h4 id=&#34;spam-bots&#34;&gt;Spam bots:&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Love to populate form fields&lt;/li&gt;
&lt;li&gt;Usually ignore CSS. For example, if you have some &lt;a href=&#34;http://haacked.com/archive/2007/09/11/honeypot-captcha.aspx/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CSS that hides&lt;/a&gt; a form field and especially if the CSS is not inline on the same page, they will usually fail at realising that the field is not supposed to be visible.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;So what we do is create a field that is not visible to humans and is supposed to be kept empty. On the server once the form is submitted, we check that it is still empty. If it is not, then we assume a bot has been at it.&lt;/p&gt;
&lt;p&gt;This is so simple, does not get in the way of your users, yet very effective at filtering bot spam.&lt;/p&gt;
&lt;h4 id=&#34;client-side&#34;&gt;Client side:&lt;/h4&gt;
&lt;h6 id=&#34;css&#34;&gt;CSS&lt;/h6&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-css&#34; data-lang=&#34;css&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;form&lt;/span&gt; .&lt;span style=&#34;color:#a6e22e&#34;&gt;bot-pot&lt;/span&gt; {
   &lt;span style=&#34;color:#66d9ef&#34;&gt;display&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;none&lt;/span&gt;;
}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h6 id=&#34;html&#34;&gt;HTML&lt;/h6&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;form&lt;/span&gt;&amp;gt;
   &lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;!--...--&amp;gt;&lt;/span&gt;
   &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;div&lt;/span&gt;&amp;gt;
      &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;input&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;text&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;bot-pot&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;bot-pot&amp;#34;&lt;/span&gt;&amp;gt;
   &amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;div&lt;/span&gt;&amp;gt;
   &lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;!--...--&amp;gt;&lt;/span&gt;
&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;form&lt;/span&gt;&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4 id=&#34;server-side&#34;&gt;Server side:&lt;/h4&gt;
&lt;p&gt;I show the validation code middleware of the route on line 30 of &lt;code&gt;routes/home.js&lt;/code&gt; below.&lt;/p&gt;
&lt;p&gt;The validation is performed on line 16 of &lt;code&gt;routes/home.js&lt;/code&gt; below.&lt;/p&gt;
&lt;h6 id=&#34;routeshomejs&#34;&gt;&lt;code&gt;routes/home.js&lt;/code&gt;&lt;/h6&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 1&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;form&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;require&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;express-form&amp;#39;&lt;/span&gt;);
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 2&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;fieldToValidate&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;form&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;field&lt;/span&gt;;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 3&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;//...
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 4&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 5&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;home&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;req&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;res&lt;/span&gt;) {
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 6&lt;/span&gt;   &lt;span style=&#34;color:#a6e22e&#34;&gt;res&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;redirect&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/&amp;#39;&lt;/span&gt;);
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 7&lt;/span&gt;}
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 8&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 9&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;index&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;req&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;res&lt;/span&gt;) {
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;10&lt;/span&gt;   &lt;span style=&#34;color:#a6e22e&#34;&gt;res&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;render&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;home&amp;#39;&lt;/span&gt;, { &lt;span style=&#34;color:#a6e22e&#34;&gt;title&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Home&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;id&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;home&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;brand&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;your brand&amp;#39;&lt;/span&gt; });
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;11&lt;/span&gt;}
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;12&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;13&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;validate&lt;/span&gt;() {
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;14&lt;/span&gt;   &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;form&lt;/span&gt;(
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;15&lt;/span&gt;      &lt;span style=&#34;color:#75715e&#34;&gt;// Bots love to populate everything.
&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;16&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;      &lt;span style=&#34;color:#a6e22e&#34;&gt;fieldToValidate&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;bot-pot&amp;#39;&lt;/span&gt;).&lt;span style=&#34;color:#a6e22e&#34;&gt;maxLength&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;)
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;17&lt;/span&gt;   );
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;18&lt;/span&gt;}
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;19&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;20&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;contact&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;req&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;res&lt;/span&gt;) {
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;21&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;22&lt;/span&gt;   &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;req&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;form&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;isValid&lt;/span&gt;)
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;23&lt;/span&gt;      &lt;span style=&#34;color:#75715e&#34;&gt;// We know the bot-pot is of zero length. So no bots.
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;24&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;   &lt;span style=&#34;color:#75715e&#34;&gt;//...
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;25&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;}
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;26&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;27&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;module&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;exports&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;app&lt;/span&gt;) {
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;28&lt;/span&gt;   &lt;span style=&#34;color:#a6e22e&#34;&gt;app&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;get&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;index&lt;/span&gt;);
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;29&lt;/span&gt;   &lt;span style=&#34;color:#a6e22e&#34;&gt;app&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;get&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/home&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;home&lt;/span&gt;);
&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;30&lt;/span&gt;   &lt;span style=&#34;color:#a6e22e&#34;&gt;app&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;post&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/contact&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;validate&lt;/span&gt;(), &lt;span style=&#34;color:#a6e22e&#34;&gt;contact&lt;/span&gt;);
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;31&lt;/span&gt;};
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;So as you can see, a very simple solution. You could even consider combining the above two techniques.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Lack of Visibility in Web Applications</title>
      <link>https://binarymist.io/blog/2015/11/26/lack-of-visibility-in-web-applications/</link>
      <pubDate>Thu, 26 Nov 2015 00:00:00 +1300</pubDate>
      <guid>https://binarymist.io/blog/2015/11/26/lack-of-visibility-in-web-applications/</guid>
      <description>&lt;p&gt;This post was taken from the content of the Web Applications chapter of Kim&amp;rsquo;s book &lt;a href=&#34;https://f1.holisticinfosecforwebdevelopers.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Holistic Info-Sec for Web Developers F1&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;risks&#34;&gt;Risks&lt;/h2&gt;
&lt;p&gt;I see this as an indirect risk to the asset of web application ownership (That&amp;rsquo;s the assumption that you will always own your web application).&lt;/p&gt;
&lt;p&gt;Not being able to introspect your application at any given time or being able to know how the health status is, is not a comfortable place to be in and there is no reason you should be there.&lt;/p&gt;
&lt;h3 id=&#34;insufficient-logging-and-monitoring&#34;&gt;Insufficient Logging and Monitoring&lt;/h3&gt;














&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;
        &lt;img alt=&#34;average-widespread-veryeasy-moderate&#34; srcset=&#34;
               /media/post/2015/11/average-widespread-veryeasy-moderate_hucf079163bdc3d739ffdf4df179d48964_6108_3cfd3906caa46f8b4b1e9e452d7c593a.png 400w,
               /media/post/2015/11/average-widespread-veryeasy-moderate_hucf079163bdc3d739ffdf4df179d48964_6108_212334a6129b57a554999aa6c9af2d90.png 760w,
               /media/post/2015/11/average-widespread-veryeasy-moderate_hucf079163bdc3d739ffdf4df179d48964_6108_1200x1200_fit_lanczos_2.png 1200w&#34;
               src=&#34;https://binarymist.io/media/post/2015/11/average-widespread-veryeasy-moderate_hucf079163bdc3d739ffdf4df179d48964_6108_3cfd3906caa46f8b4b1e9e452d7c593a.png&#34;
               width=&#34;760&#34;
               height=&#34;21&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;p&gt;Can you tell at any point in time if someone or something is:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Using your application in a way that it was not intended to be used&lt;/li&gt;
&lt;li&gt;Violating policy. For example circumventing client side input sanitisation.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;How easy is it for you to notice:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Poor performance and potential DoS?&lt;/li&gt;
&lt;li&gt;Abnormal application behaviour or unexpected logic threads&lt;/li&gt;
&lt;li&gt;Logic edge cases and blind spots that stake holders, Product Owners and Developers have missed?&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;countermeasures&#34;&gt;Countermeasures&lt;/h2&gt;
&lt;p&gt;As Bruce Schneier said: &amp;ldquo;&lt;em&gt;Detection works where prevention fails and detection is of no use without response&lt;/em&gt;&amp;rdquo;. This leads us to application logging.&lt;/p&gt;
&lt;p&gt;With good visibility we should be able to see anticipated and unanticipated exploitation of vulnerabilities as they occur and also be able to go back and review the events.&lt;/p&gt;
&lt;h3 id=&#34;insufficient-logging&#34;&gt;Insufficient Logging&lt;/h3&gt;














&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;
        &lt;img alt=&#34;PreventionAVERAGE&#34; srcset=&#34;
               /media/post/2015/11/preventionaverage_hu7811e2824d2f1967265d41ed158ceca7_1306_e9a085a34600111a2b68b7c67bf0a51f.png 400w,
               /media/post/2015/11/preventionaverage_hu7811e2824d2f1967265d41ed158ceca7_1306_0667ff8b35af15791cd051bc562a56c9.png 760w,
               /media/post/2015/11/preventionaverage_hu7811e2824d2f1967265d41ed158ceca7_1306_1200x1200_fit_lanczos_2.png 1200w&#34;
               src=&#34;https://binarymist.io/media/post/2015/11/preventionaverage_hu7811e2824d2f1967265d41ed158ceca7_1306_e9a085a34600111a2b68b7c67bf0a51f.png&#34;
               width=&#34;760&#34;
               height=&#34;22&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;p&gt;When it comes to logging in NodeJS, you can&amp;rsquo;t really go past winston. It has a lot of functionality and what it does not have is either provided by extensions, or you can create your own. It is fully featured, reliable and easy to configure like NLog in the .NET world.&lt;/p&gt;
&lt;p&gt;I also looked at &lt;code&gt;express-winston&lt;/code&gt;, but could not see why it needed to exist.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;package.json&lt;/code&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;{
   &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;...&lt;/span&gt;
   &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;dependencies&amp;#34;&lt;/span&gt;: {
      &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;...,&lt;/span&gt;
      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;config&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^1.15.0&amp;#34;&lt;/span&gt;,
      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;express&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^4.13.3&amp;#34;&lt;/span&gt;,
      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;morgan&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^1.6.1&amp;#34;&lt;/span&gt;,
      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;//&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;nodemailer not strictly necessary for this example,&amp;#34;&lt;/span&gt;,
      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;//&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;but used later under the node-config section.&amp;#34;&lt;/span&gt;,
      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;nodemailer&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^1.4.0&amp;#34;&lt;/span&gt;,
      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;//&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;What we use for logging.&amp;#34;&lt;/span&gt;,
      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;winston&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^1.0.1&amp;#34;&lt;/span&gt;,
      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;winston-email&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;0.0.10&amp;#34;&lt;/span&gt;,
      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;winston-syslog-posix&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^0.1.5&amp;#34;&lt;/span&gt;,
      &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;...&lt;/span&gt;
   }
}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.npmjs.com/package/winston-email&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;winston-email&lt;/code&gt;&lt;/a&gt; also depends on &lt;a href=&#34;https://www.npmjs.com/package/nodemailer&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;nodemailer&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;h4 id=&#34;opening-udp-port&#34;&gt;Opening UDP port&lt;/h4&gt;
&lt;p&gt;with &lt;a href=&#34;https://www.npmjs.com/package/winston-syslog&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;winston-syslog&lt;/code&gt;&lt;/a&gt; seems to be what a lot of people are using. I think it may be due to the fact that &lt;code&gt;winston-syslog&lt;/code&gt; is the first package that works well for &lt;code&gt;winston&lt;/code&gt; and syslog.&lt;/p&gt;
&lt;p&gt;If going this route, you will need the following in your &lt;code&gt;/etc/rsyslog.conf&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ModLoad imudp
&lt;span style=&#34;color:#75715e&#34;&gt;# Listen on all network addresses. This is the default.&lt;/span&gt;
$UDPServerAddress 0.0.0.0
&lt;span style=&#34;color:#75715e&#34;&gt;# Listen on localhost.&lt;/span&gt;
$UDPServerAddress 127.0.0.1
$UDPServerRun &lt;span style=&#34;color:#ae81ff&#34;&gt;514&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# Or the new style configuration.&lt;/span&gt;
Address &amp;lt;IP&amp;gt;
Port &amp;lt;port&amp;gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# Logging for your app.&lt;/span&gt;
local0.* /var/log/yourapp.log&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;I Also looked at &lt;code&gt;winston-rsyslog2&lt;/code&gt; and &lt;code&gt;winston-syslogudp&lt;/code&gt;, but they did not measure up for me.&lt;/p&gt;
&lt;p&gt;If you do not need to push syslog events to another machine, then it does not make much sense to push through a local network interface when you can use your posix syscalls as they are faster and safer. The line &lt;code&gt;514/udp open|filtered syslog no-response&lt;/code&gt; below shows the open port.&lt;/p&gt;
&lt;h6 id=&#34;nmap-with-winston-syslog&#34;&gt;nmap with &lt;code&gt;winston-syslog&lt;/code&gt;&lt;/h6&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;root@kali:~# nmap -p514 -sU -sV &amp;lt;target IP&amp;gt; --reason

Starting Nmap 6.47 &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt; http://nmap.org &lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
Nmap scan report &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; kali &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&amp;lt;target IP&amp;gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
Host is up, received arp-response &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;0.0015s latency&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;.
PORT STATE SERVICE REASON VERSION
&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;514/udp open|filtered syslog no-response
&lt;/span&gt;MAC Address: 34:25:C9:96:AC:E0 &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;My Computer&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4 id=&#34;using-posix&#34;&gt;Using Posix&lt;/h4&gt;
&lt;p&gt;The &lt;a href=&#34;https://www.npmjs.com/package/winston-syslog-posix&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;winston-syslog-posix&lt;/code&gt;&lt;/a&gt; package was inspired by &lt;a href=&#34;http://tmont.com/blargh/2013/12/writing-to-the-syslog-with-winston&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;blargh&lt;/a&gt;. &lt;code&gt;winston-syslog-posix&lt;/code&gt; uses &lt;a href=&#34;https://www.npmjs.com/package/posix&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;node-posix&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;If going this route, you will need the following in your &lt;code&gt;/etc/rsyslog.conf&lt;/code&gt; instead of the above:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Logging for your app.&lt;/span&gt;
local0.* /var/log/yourapp.log&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now you can see on the &lt;code&gt;514/udp closed syslog port-unreach&lt;/code&gt; line below that the syslog port is no longer open:&lt;/p&gt;
&lt;h6 id=&#34;nmap-with-winston-syslog-posix&#34;&gt;nmap with &lt;code&gt;winston-syslog-posix&lt;/code&gt;&lt;/h6&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;root@kali:~# nmap -p514 -sU -sV &amp;lt;target IP&amp;gt; --reason

Starting Nmap 6.47 &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt; http://nmap.org &lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
Nmap scan report &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; kali &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&amp;lt;target IP&amp;gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
Host is up, received arp-response &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;0.0014s latency&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;.
PORT STATE SERVICE REASON VERSION
&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;514/udp closed syslog port-unreach
&lt;/span&gt;MAC Address: 34:25:C9:96:AC:E0 &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;My Computer&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Logging configuration should not be in the application startup file. It should be in the configuration files. This is discussed further under the &lt;a href=&#34;http://blog.binarymist.net/2015/09/17/risks-and-countermeasures-to-the-management-of-application-secrets/#store-configuration-in-configuration-files&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Store Configuration in Configuration files&lt;/a&gt; section.&lt;/p&gt;
&lt;p&gt;Notice the syslog transport in the configuration below starting on the &lt;code&gt;syslogPosixTransportOptions: {&lt;/code&gt; line.&lt;/p&gt;
&lt;h6 id=&#34;defaultjs&#34;&gt;&lt;code&gt;default.js&lt;/code&gt;&lt;/h6&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 1&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;module&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;exports&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 2&lt;/span&gt;   &lt;span style=&#34;color:#a6e22e&#34;&gt;logger&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; {
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 3&lt;/span&gt;      &lt;span style=&#34;color:#a6e22e&#34;&gt;colours&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; {
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 4&lt;/span&gt;         &lt;span style=&#34;color:#a6e22e&#34;&gt;debug&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;white&amp;#39;&lt;/span&gt;,
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 5&lt;/span&gt;         &lt;span style=&#34;color:#a6e22e&#34;&gt;info&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;green&amp;#39;&lt;/span&gt;,
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 6&lt;/span&gt;         &lt;span style=&#34;color:#a6e22e&#34;&gt;notice&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;blue&amp;#39;&lt;/span&gt;,
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 7&lt;/span&gt;         &lt;span style=&#34;color:#a6e22e&#34;&gt;warning&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;yellow&amp;#39;&lt;/span&gt;,
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 8&lt;/span&gt;         &lt;span style=&#34;color:#a6e22e&#34;&gt;error&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;yellow&amp;#39;&lt;/span&gt;,
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 9&lt;/span&gt;         &lt;span style=&#34;color:#a6e22e&#34;&gt;crit&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;red&amp;#39;&lt;/span&gt;,
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;10&lt;/span&gt;         &lt;span style=&#34;color:#a6e22e&#34;&gt;alert&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;red&amp;#39;&lt;/span&gt;,
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;11&lt;/span&gt;         &lt;span style=&#34;color:#a6e22e&#34;&gt;emerg&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;red&amp;#39;&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;12&lt;/span&gt;      },
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;13&lt;/span&gt;      &lt;span style=&#34;color:#75715e&#34;&gt;// Syslog compatible protocol severities.
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;14&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;      &lt;span style=&#34;color:#a6e22e&#34;&gt;levels&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; {
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;15&lt;/span&gt;         &lt;span style=&#34;color:#a6e22e&#34;&gt;debug&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;,
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;16&lt;/span&gt;         &lt;span style=&#34;color:#a6e22e&#34;&gt;info&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;17&lt;/span&gt;         &lt;span style=&#34;color:#a6e22e&#34;&gt;notice&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;,
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;18&lt;/span&gt;         &lt;span style=&#34;color:#a6e22e&#34;&gt;warning&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;,
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;19&lt;/span&gt;         &lt;span style=&#34;color:#a6e22e&#34;&gt;error&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;,
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;20&lt;/span&gt;         &lt;span style=&#34;color:#a6e22e&#34;&gt;crit&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;,
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;21&lt;/span&gt;         &lt;span style=&#34;color:#a6e22e&#34;&gt;alert&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;,
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;22&lt;/span&gt;         &lt;span style=&#34;color:#a6e22e&#34;&gt;emerg&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;23&lt;/span&gt;      },
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;24&lt;/span&gt;      &lt;span style=&#34;color:#a6e22e&#34;&gt;consoleTransportOptions&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; {
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;25&lt;/span&gt;         &lt;span style=&#34;color:#a6e22e&#34;&gt;level&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;debug&amp;#39;&lt;/span&gt;,
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;26&lt;/span&gt;         &lt;span style=&#34;color:#a6e22e&#34;&gt;handleExceptions&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;,
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;27&lt;/span&gt;         &lt;span style=&#34;color:#a6e22e&#34;&gt;json&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;false&lt;/span&gt;,
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;28&lt;/span&gt;         &lt;span style=&#34;color:#a6e22e&#34;&gt;colorize&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;29&lt;/span&gt;      },
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;30&lt;/span&gt;      &lt;span style=&#34;color:#a6e22e&#34;&gt;fileTransportOptions&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; {
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;31&lt;/span&gt;         &lt;span style=&#34;color:#a6e22e&#34;&gt;level&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;debug&amp;#39;&lt;/span&gt;,
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;32&lt;/span&gt;         &lt;span style=&#34;color:#a6e22e&#34;&gt;filename&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;./yourapp.log&amp;#39;&lt;/span&gt;,
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;33&lt;/span&gt;         &lt;span style=&#34;color:#a6e22e&#34;&gt;handleExceptions&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;,
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;34&lt;/span&gt;         &lt;span style=&#34;color:#a6e22e&#34;&gt;json&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;,
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;35&lt;/span&gt;         &lt;span style=&#34;color:#a6e22e&#34;&gt;maxsize&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;5242880&lt;/span&gt;, &lt;span style=&#34;color:#75715e&#34;&gt;//5MB
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;36&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;         &lt;span style=&#34;color:#a6e22e&#34;&gt;maxFiles&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;,
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;37&lt;/span&gt;         &lt;span style=&#34;color:#a6e22e&#34;&gt;colorize&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;false&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;38&lt;/span&gt;      },
&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;39&lt;/span&gt;      &lt;span style=&#34;color:#a6e22e&#34;&gt;syslogPosixTransportOptions&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; {
&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;40&lt;/span&gt;         &lt;span style=&#34;color:#a6e22e&#34;&gt;handleExceptions&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;,
&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;41&lt;/span&gt;         &lt;span style=&#34;color:#a6e22e&#34;&gt;level&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;debug&amp;#39;&lt;/span&gt;,
&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;42&lt;/span&gt;         &lt;span style=&#34;color:#a6e22e&#34;&gt;identity&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;yourapp_winston&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;43&lt;/span&gt;         &lt;span style=&#34;color:#75715e&#34;&gt;//facility: &amp;#39;local0&amp;#39; // default
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;44&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            &lt;span style=&#34;color:#75715e&#34;&gt;// /etc/rsyslog.conf also needs: local0.* /var/log/yourapp.log
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;45&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            &lt;span style=&#34;color:#75715e&#34;&gt;// If non posix syslog is used, then /etc/rsyslog.conf or one
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;46&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            &lt;span style=&#34;color:#75715e&#34;&gt;// of the files in /etc/rsyslog.d/ also needs the following
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;47&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            &lt;span style=&#34;color:#75715e&#34;&gt;// two settings:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;48&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            &lt;span style=&#34;color:#75715e&#34;&gt;// $ModLoad imudp // Load the udp module.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;49&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            &lt;span style=&#34;color:#75715e&#34;&gt;// $UDPServerRun 514 // Open the standard syslog port.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;50&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            &lt;span style=&#34;color:#75715e&#34;&gt;// $UDPServerAddress 127.0.0.1 // Interface to bind to.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;51&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;      },
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;52&lt;/span&gt;      &lt;span style=&#34;color:#a6e22e&#34;&gt;emailTransportOptions&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; {
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;53&lt;/span&gt;         &lt;span style=&#34;color:#a6e22e&#34;&gt;handleExceptions&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;,
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;54&lt;/span&gt;         &lt;span style=&#34;color:#a6e22e&#34;&gt;level&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;crit&amp;#39;&lt;/span&gt;,
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;55&lt;/span&gt;         &lt;span style=&#34;color:#a6e22e&#34;&gt;from&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;yourusername_alerts@fastmail.com&amp;#39;&lt;/span&gt;,
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;56&lt;/span&gt;         &lt;span style=&#34;color:#a6e22e&#34;&gt;to&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;yourusername_alerts@fastmail.com&amp;#39;&lt;/span&gt;,
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;57&lt;/span&gt;         &lt;span style=&#34;color:#a6e22e&#34;&gt;service&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;FastMail&amp;#39;&lt;/span&gt;,
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;58&lt;/span&gt;         &lt;span style=&#34;color:#a6e22e&#34;&gt;auth&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; {
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;59&lt;/span&gt;            &lt;span style=&#34;color:#a6e22e&#34;&gt;user&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;yourusername_alerts&amp;#34;&lt;/span&gt;,
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;60&lt;/span&gt;            &lt;span style=&#34;color:#a6e22e&#34;&gt;pass&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;null&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;// App specific password.
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;61&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;         },
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;62&lt;/span&gt;         &lt;span style=&#34;color:#a6e22e&#34;&gt;tags&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; [&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;yourapp&amp;#39;&lt;/span&gt;]
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;63&lt;/span&gt;      }
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;64&lt;/span&gt;   }
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;65&lt;/span&gt;}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In development I have chosen here to not use syslog. You can see this on the &lt;code&gt;syslogPosixTransportOptions: null&lt;/code&gt; line below. If you want to test syslog in development, you can either remove the logger object override from the &lt;code&gt;devbox1-development.js&lt;/code&gt; file or modify it to be similar to the above. Then add one line to the &lt;code&gt;/etc/rsyslog.conf&lt;/code&gt; file to turn on. As mentioned in a comment above in the &lt;code&gt;default.js&lt;/code&gt; config file on the line &lt;code&gt;// /etc/rsyslog.conf also needs: local0.* /var/log/yourapp.log&lt;/code&gt;.&lt;/p&gt;
&lt;h6 id=&#34;devbox1-developmentjs&#34;&gt;&lt;code&gt;devbox1-development.js&lt;/code&gt;&lt;/h6&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;wraplines&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;false&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;highlight&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;3&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;firstline&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;1&amp;#34;&lt;/span&gt;]
&lt;span style=&#34;color:#a6e22e&#34;&gt;module&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;exports&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {
   &lt;span style=&#34;color:#a6e22e&#34;&gt;logger&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; {
&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;      &lt;span style=&#34;color:#a6e22e&#34;&gt;syslogPosixTransportOptions&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;null&lt;/span&gt;
&lt;/span&gt;   }
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In production we log to syslog and because of that we do not need the file transport you can see configured starting on line 30 above in the &lt;code&gt;default.js&lt;/code&gt; configuration file, so we set it to null as seen on line 6 below in the &lt;code&gt;prodbox-production.js&lt;/code&gt; file.&lt;/p&gt;
&lt;p&gt;I have gone into more depth about how we handle syslogs &lt;a href=&#34;http://blog.binarymist.net/2015/04/25/web-server-log-management/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;here&lt;/a&gt;, where all of our logs including these ones get streamed to an off-site syslog server. Thus providing easy aggregation of all system logs into one user interface that DevOpps can watch on their monitoring panels in real-time and also easily go back in time to visit past events. This provides excellent visibility as one &lt;a href=&#34;https://f1.holisticinfosecforwebdevelopers.com/chap06.html#web-applications-countermeasures-management-of-application-secrets&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;layer of defence&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;There were also some other &lt;a href=&#34;http://help.papertrailapp.com/kb/configuration/configuring-centralized-logging-from-nodejs-apps/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;options&lt;/a&gt; for those using &lt;a href=&#34;https://f1.holisticinfosecforwebdevelopers.com/chap03.html#vps-countermeasures-lack-of-visibility-web-server-log-management-improving-the-strategy&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Papertrail&lt;/a&gt; as their off-site syslog and aggregation PaaS, but the solutions were not as clean as simply logging to local syslog from your applications and then sending off-site from there.&lt;/p&gt;
&lt;h6 id=&#34;prodbox-productionjs&#34;&gt;&lt;code&gt;prodbox-production.js&lt;/code&gt;&lt;/h6&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;wraplines&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;false&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;highlight&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;6&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;firstline&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;1&amp;#34;&lt;/span&gt;]
&lt;span style=&#34;color:#a6e22e&#34;&gt;module&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;exports&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {
   &lt;span style=&#34;color:#a6e22e&#34;&gt;logger&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; {
      &lt;span style=&#34;color:#a6e22e&#34;&gt;consoleTransportOptions&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; {
         &lt;span style=&#34;color:#a6e22e&#34;&gt;level&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; {},
      },
      &lt;span style=&#34;color:#a6e22e&#34;&gt;fileTransportOptions&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;null&lt;/span&gt;,
      &lt;span style=&#34;color:#a6e22e&#34;&gt;syslogPosixTransportOptions&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; {
         &lt;span style=&#34;color:#a6e22e&#34;&gt;handleExceptions&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;,
         &lt;span style=&#34;color:#a6e22e&#34;&gt;level&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;info&amp;#39;&lt;/span&gt;,
         &lt;span style=&#34;color:#a6e22e&#34;&gt;identity&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;yourapp_winston&amp;#39;&lt;/span&gt;
      }
   }
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h6 id=&#34;localjs&#34;&gt;&lt;code&gt;local.js&lt;/code&gt;&lt;/h6&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// Build creates this file.
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;module&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;exports&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {
   &lt;span style=&#34;color:#a6e22e&#34;&gt;logger&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; {
      &lt;span style=&#34;color:#a6e22e&#34;&gt;emailTransportOptions&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; {
         &lt;span style=&#34;color:#a6e22e&#34;&gt;auth&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; {
            &lt;span style=&#34;color:#a6e22e&#34;&gt;pass&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Z-o?(7GnCQsnrx/!-G=LP]-ib&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;// App specific password.
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;         }
      }
   }
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;code&gt;logger.js&lt;/code&gt; file wraps and hides extra features and transports applied to the logging package we are consuming.&lt;/p&gt;
&lt;h6 id=&#34;loggerjs&#34;&gt;&lt;code&gt;logger.js&lt;/code&gt;&lt;/h6&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;winston&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;require&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;winston&amp;#39;&lt;/span&gt;);
&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;loggerConfig&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;require&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;config&amp;#39;&lt;/span&gt;).&lt;span style=&#34;color:#a6e22e&#34;&gt;logger&lt;/span&gt;;
&lt;span style=&#34;color:#a6e22e&#34;&gt;require&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;winston-syslog-posix&amp;#39;&lt;/span&gt;).&lt;span style=&#34;color:#a6e22e&#34;&gt;SyslogPosix&lt;/span&gt;;
&lt;span style=&#34;color:#a6e22e&#34;&gt;require&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;winston-email&amp;#39;&lt;/span&gt;).&lt;span style=&#34;color:#a6e22e&#34;&gt;Email&lt;/span&gt;;

&lt;span style=&#34;color:#a6e22e&#34;&gt;winston&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;emitErrs&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;;

&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;logger&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;winston&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Logger&lt;/span&gt;({
   &lt;span style=&#34;color:#75715e&#34;&gt;// Alternatively: set to winston.config.syslog.levels
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;   &lt;span style=&#34;color:#a6e22e&#34;&gt;exitOnError&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;false&lt;/span&gt;,
   &lt;span style=&#34;color:#75715e&#34;&gt;// Alternatively use winston.addColors(customColours); There are many ways
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;   &lt;span style=&#34;color:#75715e&#34;&gt;// to do the same thing with winston
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;   &lt;span style=&#34;color:#a6e22e&#34;&gt;colors&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;loggerConfig&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;colours&lt;/span&gt;,
   &lt;span style=&#34;color:#a6e22e&#34;&gt;levels&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;loggerConfig&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;levels&lt;/span&gt;
});

&lt;span style=&#34;color:#75715e&#34;&gt;// Add transports. There are plenty of options provided and you can add your own.
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
&lt;span style=&#34;color:#a6e22e&#34;&gt;logger&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;addConsole&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;config&lt;/span&gt;) {
   &lt;span style=&#34;color:#a6e22e&#34;&gt;logger&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;add&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;winston&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;transports&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Console&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;config&lt;/span&gt;);
   &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;;
};

&lt;span style=&#34;color:#a6e22e&#34;&gt;logger&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;addFile&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;config&lt;/span&gt;) {
   &lt;span style=&#34;color:#a6e22e&#34;&gt;logger&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;add&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;winston&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;transports&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;File&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;config&lt;/span&gt;);
   &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;;
};

&lt;span style=&#34;color:#a6e22e&#34;&gt;logger&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;addPosixSyslog&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;config&lt;/span&gt;) {
   &lt;span style=&#34;color:#a6e22e&#34;&gt;logger&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;add&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;winston&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;transports&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;SyslogPosix&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;config&lt;/span&gt;);
   &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;;
};

&lt;span style=&#34;color:#a6e22e&#34;&gt;logger&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;addEmail&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;config&lt;/span&gt;) {
   &lt;span style=&#34;color:#a6e22e&#34;&gt;logger&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;add&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;winston&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;transports&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Email&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;config&lt;/span&gt;);
   &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;;
};

&lt;span style=&#34;color:#a6e22e&#34;&gt;logger&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;emailLoggerFailure&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;err&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;/*level, msg, meta*/&lt;/span&gt;) {
   &lt;span style=&#34;color:#75715e&#34;&gt;// If called with an error, then only the err param is supplied.
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;   &lt;span style=&#34;color:#75715e&#34;&gt;// If not called with an error, level, msg and meta are supplied.
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;   &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;err&lt;/span&gt;) &lt;span style=&#34;color:#a6e22e&#34;&gt;logger&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;alert&lt;/span&gt;(
      &lt;span style=&#34;color:#a6e22e&#34;&gt;JSON&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;stringify&lt;/span&gt;(
         &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;error-code:&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;err&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;code&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;. &amp;#39;&lt;/span&gt;
         &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;error-message:&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;err&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;message&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;. &amp;#39;&lt;/span&gt;
         &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;error-response:&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;err&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;response&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;. logger-level:&amp;#39;&lt;/span&gt;
         &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;err&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;transport&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;level&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;. transport:&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;err&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;transport&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;name&lt;/span&gt;
      )
   );
};

&lt;span style=&#34;color:#a6e22e&#34;&gt;logger&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;init&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; () {
   &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;loggerConfig&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;fileTransportOptions&lt;/span&gt;)
      &lt;span style=&#34;color:#a6e22e&#34;&gt;logger&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;addFile&lt;/span&gt;( &lt;span style=&#34;color:#a6e22e&#34;&gt;loggerConfig&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;fileTransportOptions&lt;/span&gt; );
   &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;loggerConfig&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;consoleTransportOptions&lt;/span&gt;)
      &lt;span style=&#34;color:#a6e22e&#34;&gt;logger&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;addConsole&lt;/span&gt;( &lt;span style=&#34;color:#a6e22e&#34;&gt;loggerConfig&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;consoleTransportOptions&lt;/span&gt; );
   &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;loggerConfig&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;syslogPosixTransportOptions&lt;/span&gt;)
      &lt;span style=&#34;color:#a6e22e&#34;&gt;logger&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;addPosixSyslog&lt;/span&gt;( &lt;span style=&#34;color:#a6e22e&#34;&gt;loggerConfig&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;syslogPosixTransportOptions&lt;/span&gt; );
   &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;loggerConfig&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;emailTransportOptions&lt;/span&gt;)
      &lt;span style=&#34;color:#a6e22e&#34;&gt;logger&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;addEmail&lt;/span&gt;( &lt;span style=&#34;color:#a6e22e&#34;&gt;loggerConfig&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;emailTransportOptions&lt;/span&gt; );
};

&lt;span style=&#34;color:#a6e22e&#34;&gt;module&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;exports&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;logger&lt;/span&gt;;
&lt;span style=&#34;color:#a6e22e&#34;&gt;module&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;exports&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;stream&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {
   &lt;span style=&#34;color:#a6e22e&#34;&gt;write&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;message&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;encoding&lt;/span&gt;) {
      &lt;span style=&#34;color:#a6e22e&#34;&gt;logger&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;info&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;message&lt;/span&gt;);
   }
};
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;When the app first starts it initialises the logger on the &lt;code&gt;logger.init();&lt;/code&gt; line below.&lt;/p&gt;
&lt;h6 id=&#34;appjs&#34;&gt;&lt;code&gt;app.js&lt;/code&gt;&lt;/h6&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;//...
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;express&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;require&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;express&amp;#39;&lt;/span&gt;);
&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;morganLogger&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;require&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;morgan&amp;#39;&lt;/span&gt;);
&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;logger&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;require&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;./util/logger&amp;#39;&lt;/span&gt;); &lt;span style=&#34;color:#75715e&#34;&gt;// Or use requireFrom module so no relative paths.
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;app&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;express&lt;/span&gt;();
&lt;span style=&#34;color:#75715e&#34;&gt;//...
&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;logger&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;init&lt;/span&gt;();
&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;app&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;set&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;port&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;process&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;env&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;PORT&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;||&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3000&lt;/span&gt;);
&lt;span style=&#34;color:#a6e22e&#34;&gt;app&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;set&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;views&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;__dirname&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/views&amp;#39;&lt;/span&gt;);
&lt;span style=&#34;color:#a6e22e&#34;&gt;app&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;set&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;view engine&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;jade&amp;#39;&lt;/span&gt;);
&lt;span style=&#34;color:#75715e&#34;&gt;//...
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// In order to utilise connect/express logger module in our third party logger,
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// Pipe the messages through.
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;app&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;use&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;morganLogger&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;combined&amp;#39;&lt;/span&gt;, {&lt;span style=&#34;color:#a6e22e&#34;&gt;stream&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;logger&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;stream&lt;/span&gt;}));
&lt;span style=&#34;color:#75715e&#34;&gt;//...
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;app&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;use&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;express&lt;/span&gt;.&lt;span style=&#34;color:#66d9ef&#34;&gt;static&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;path&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;join&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;__dirname&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;public&amp;#39;&lt;/span&gt;)));
&lt;span style=&#34;color:#75715e&#34;&gt;//...
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;require&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;./routes&amp;#39;&lt;/span&gt;)(&lt;span style=&#34;color:#a6e22e&#34;&gt;app&lt;/span&gt;);

&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;development&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;app&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;get&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;env&amp;#39;&lt;/span&gt;)) {
   &lt;span style=&#34;color:#a6e22e&#34;&gt;app&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;use&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;errorHandler&lt;/span&gt;({ &lt;span style=&#34;color:#a6e22e&#34;&gt;dumpExceptions&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;showStack&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt; }));
   &lt;span style=&#34;color:#75715e&#34;&gt;//...
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;}
&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;production&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;app&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;get&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;env&amp;#39;&lt;/span&gt;)) {
   &lt;span style=&#34;color:#a6e22e&#34;&gt;app&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;use&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;errorHandler&lt;/span&gt;());
   &lt;span style=&#34;color:#75715e&#34;&gt;//...
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;}

&lt;span style=&#34;color:#a6e22e&#34;&gt;http&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;createServer&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;app&lt;/span&gt;).&lt;span style=&#34;color:#a6e22e&#34;&gt;listen&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;app&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;get&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;port&amp;#39;&lt;/span&gt;), &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt;(){
   &lt;span style=&#34;color:#a6e22e&#34;&gt;logger&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;info&lt;/span&gt;(
      &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Express server listening on port &amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;app&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;get&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;port&amp;#39;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39; in &amp;#39;&lt;/span&gt;
      &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;process&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;env&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;NODE_ENV&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39; mode&amp;#39;&lt;/span&gt;
   );
});
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;You can also optionally log JSON metadata&lt;/li&gt;
&lt;li&gt;You can provide an optional callback to do any work required, which will be called once all transports have logged the specified message&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Here are some examples of how you can use the logger. The &lt;code&gt;logger.log(&amp;lt;level&amp;gt;&lt;/code&gt; can be replaced with &lt;code&gt;logger.&amp;lt;level&amp;gt;(&lt;/code&gt; where level is any of the levels defined in the &lt;code&gt;default.js&lt;/code&gt; configuration file above:&lt;/p&gt;
&lt;h6 id=&#34;anywhere-you-need-logging&#34;&gt;Anywhere you need logging&lt;/h6&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// With string interpolation also.
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;logger&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;info&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;test message %s&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;my string&amp;#39;&lt;/span&gt;);
&lt;span style=&#34;color:#a6e22e&#34;&gt;logger&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;info&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;test message %d&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;123&lt;/span&gt;);
&lt;span style=&#34;color:#a6e22e&#34;&gt;logger&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;info&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;test message %j&amp;#39;&lt;/span&gt;, {&lt;span style=&#34;color:#a6e22e&#34;&gt;aPropertyName&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Some message details&amp;#39;&lt;/span&gt;}, {});
&lt;span style=&#34;color:#a6e22e&#34;&gt;logger&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;info&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;test message %s, %s&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;first&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;second&amp;#39;&lt;/span&gt;, {&lt;span style=&#34;color:#a6e22e&#34;&gt;aPropertyName&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Some message details&amp;#39;&lt;/span&gt;});
&lt;span style=&#34;color:#a6e22e&#34;&gt;logger&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;info&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;test message&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;first&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;second&amp;#39;&lt;/span&gt;, {&lt;span style=&#34;color:#a6e22e&#34;&gt;aPropertyName&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Some message details&amp;#39;&lt;/span&gt;});
&lt;span style=&#34;color:#a6e22e&#34;&gt;logger&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;info&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;test message %s, %s&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;first&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;second&amp;#39;&lt;/span&gt;, {&lt;span style=&#34;color:#a6e22e&#34;&gt;aPropertyName&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Some message details&amp;#39;&lt;/span&gt;}, &lt;span style=&#34;color:#a6e22e&#34;&gt;logger&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;emailLoggerFailure&lt;/span&gt;);
&lt;span style=&#34;color:#a6e22e&#34;&gt;logger&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;info&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;test message&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;first&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;second&amp;#39;&lt;/span&gt;, {&lt;span style=&#34;color:#a6e22e&#34;&gt;aPropertyName&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Some message details&amp;#39;&lt;/span&gt;}, &lt;span style=&#34;color:#a6e22e&#34;&gt;logger&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;emailLoggerFailure&lt;/span&gt;);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Also consider hiding cross cutting concerns like logging using Aspect Oriented Programing (AOP)&lt;/p&gt;
&lt;h3 id=&#34;insufficient-monitoring&#34;&gt;Insufficient Monitoring&lt;/h3&gt;














&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;
        &lt;img alt=&#34;PreventionEASY&#34; srcset=&#34;
               /media/post/2015/11/preventioneasy_hu7811e2824d2f1967265d41ed158ceca7_1154_9915a0d32ef1f1316f8f37d772f8b818.png 400w,
               /media/post/2015/11/preventioneasy_hu7811e2824d2f1967265d41ed158ceca7_1154_77ee5649450b499c3c559d9fb20100b5.png 760w,
               /media/post/2015/11/preventioneasy_hu7811e2824d2f1967265d41ed158ceca7_1154_1200x1200_fit_lanczos_2.png 1200w&#34;
               src=&#34;https://binarymist.io/media/post/2015/11/preventioneasy_hu7811e2824d2f1967265d41ed158ceca7_1154_9915a0d32ef1f1316f8f37d772f8b818.png&#34;
               width=&#34;760&#34;
               height=&#34;22&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;p&gt;There are a couple of ways of approaching monitoring. You may want to see the health of your application even if it is all fine, or only to be notified if it is not fine (sometimes called the dark cockpit approach).&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://f1.holisticinfosecforwebdevelopers.com/chap03.html#vps-countermeasures-lack-of-visibility-proactive-monitoring-monit&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Monit&lt;/a&gt; is an &lt;a href=&#34;https://f1.holisticinfosecforwebdevelopers.com/chap03.html#vps-countermeasures-lack-of-visibility-proactive-monitoring-getting-started-with-monit&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;excellent tool&lt;/a&gt; for the dark cockpit approach. It&amp;rsquo;s easy to configure. Has excellent short &lt;a href=&#34;https://mmonit.com/monit/documentation/monit.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;documentation&lt;/a&gt; that is easy to understand and the configuration file has lots of examples commented out ready for you to take as is and modify to suite your environment.&lt;/p&gt;
&lt;h2 id=&#34;risks-that-solution-causes&#34;&gt;Risks that Solution Causes&lt;/h2&gt;
&lt;h3 id=&#34;lack-of-visibility&#34;&gt;Lack of Visibility&lt;/h3&gt;
&lt;p&gt;With the added visibility, you will have to make decisions based on the new found information you now have. There will be no more blissful ignorance if there was before.&lt;/p&gt;
&lt;h3 id=&#34;insufficient-logging-and-monitoring-1&#34;&gt;Insufficient Logging and Monitoring&lt;/h3&gt;
&lt;p&gt;There will be learning and work to be done to become familiar with libraries and tooling. Code will have to be written around logging as in wrapping libraries, initialising and adding logging statements or hiding them using AOP.&lt;/p&gt;
&lt;h2 id=&#34;costs-and-trade-offs&#34;&gt;Costs and Trade-offs&lt;/h2&gt;
&lt;h3 id=&#34;insufficient-logging-and-monitoring-2&#34;&gt;Insufficient Logging and Monitoring&lt;/h3&gt;
&lt;p&gt;You can do a lot for little cost here. I would rather trade off a few days work in order to have a really good logging system through your code base that is going to show you errors fast in development and then show you different errors in the places your DevOps need to see them in production.&lt;/p&gt;
&lt;p&gt;Same for monitoring. Find a tool that you find working with a pleasure. There are just about always free and open source tools to every commercial alternative. If you are working with a start-up or young business, the free and open source tools can be excellent to keep ongoing costs down. Especially mature tools that are also well maintained like Monit.&lt;/p&gt;
&lt;h2 id=&#34;additional-resources&#34;&gt;Additional Resources&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://gist.github.com/rtgibbons/7354879&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Details&lt;/a&gt; that &lt;a href=&#34;https://thejsf.wordpress.com/2015/01/18/node-js-logging-with-winston/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;helped&lt;/a&gt; setup NodeJS logging&lt;/li&gt;
&lt;li&gt;Application logging to syslog server on another machine:
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://unix.stackexchange.com/questions/67250/where-does-rsyslog-keep-facility-local0&#34;&gt;http://unix.stackexchange.com/questions/67250/where-does-rsyslog-keep-facility-local0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://wiki.rsyslog.com/index.php/Very_simple_config_--_starting_point_for_modifications&#34;&gt;http://wiki.rsyslog.com/index.php/Very_simple_config_--_starting_point_for_modifications&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Or the &lt;a href=&#34;http://www.rsyslog.com/doc/v8-stable/configuration/modules/imudp.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;new style configuration&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://wiki.gentoo.org/wiki/Rsyslog#Severity&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Syslog compatible protocol severities&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Consuming Free and Open Source</title>
      <link>https://binarymist.io/blog/2015/10/29/consuming-free-and-open-source/</link>
      <pubDate>Thu, 29 Oct 2015 00:00:00 +1300</pubDate>
      <guid>https://binarymist.io/blog/2015/10/29/consuming-free-and-open-source/</guid>
      <description>&lt;html&gt;
  &lt;head&gt;
    &lt;title&gt;Consuming Free and Open Source&lt;/title&gt;
    &lt;link rel=&#34;canonical&#34; href=&#34;https://binarymist.wordpress.com/2015/10/29/consuming-free-and-open-source/&#34;/&gt;
    &lt;meta http-equiv=&#34;content-type&#34; content=&#34;text/html; charset=utf-8&#34;/&gt;
    &lt;meta http-equiv=&#34;refresh&#34; content=&#34;2; url=https://binarymist.wordpress.com/2015/10/29/consuming-free-and-open-source/&#34;/&gt;
  &lt;/head&gt;
&lt;/html&gt;
</description>
    </item>
    
    <item>
      <title>Risks and Countermeasures to the Management of Application Secrets</title>
      <link>https://binarymist.io/blog/2015/09/17/risks-and-countermeasures-to-the-management-of-application-secrets/</link>
      <pubDate>Thu, 17 Sep 2015 00:00:00 +1200</pubDate>
      <guid>https://binarymist.io/blog/2015/09/17/risks-and-countermeasures-to-the-management-of-application-secrets/</guid>
      <description>&lt;html&gt;
  &lt;head&gt;
    &lt;title&gt;Risks and Countermeasures to the Management of Application Secrets&lt;/title&gt;
    &lt;link rel=&#34;canonical&#34; href=&#34;https://binarymist.wordpress.com/2015/09/17/risks-and-countermeasures-to-the-management-of-application-secrets/&#34;/&gt;
    &lt;meta http-equiv=&#34;content-type&#34; content=&#34;text/html; charset=utf-8&#34;/&gt;
    &lt;meta http-equiv=&#34;refresh&#34; content=&#34;4; url=https://binarymist.wordpress.com/2015/09/17/risks-and-countermeasures-to-the-management-of-application-secrets/&#34;/&gt;
  &lt;/head&gt;
&lt;/html&gt;
</description>
    </item>
    
  </channel>
</rss>
