<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Content tagged as &#39;Validation&#39; on BinaryMist</title>
    <link>https://binarymist.io/tags/validation/</link>
    <description>Recent content in Content tagged as &#39;Validation&#39; on BinaryMist</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; 2018 BinaryMist Ltd &lt;/br&gt;Following images are used under Creative Commons: [1](https://www.flickr.com/photos/ravefinity/12180959354/in/photostream/) &lt;/br&gt;[Privacy](/publication/privacy/)</copyright>
    <lastBuildDate>Fri, 01 Jan 2016 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://binarymist.io/tags/validation/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Holistic Info-Sec for Web Developers</title>
      <link>https://binarymist.io/publication/holistic-infosec-for-web-developers/</link>
      <pubDate>Fri, 01 Dec 2017 00:00:00 +0000</pubDate>
      
      <guid>https://binarymist.io/publication/holistic-infosec-for-web-developers/</guid>
      <description>A three part book series focused on lifting the security knowledge of Software Developers, Engineers, and their teams, so that they can continuously deliver secure technical solutions on time and within budget, without nasty surprises.&lt;br&gt;&lt;br&gt;First book is complete, second book is content complete and currently in technical review.</description>
    </item>
    
    <item>
      <title>Talk - What&#39;s Our Software Doing With All That User Input</title>
      <link>https://binarymist.io/talk/owaspnzday-2013-talk-whats-our-software-doing-with-all-that-user-input/</link>
      <pubDate>Thu, 12 Sep 2013 09:50:00 +1200</pubDate>
      
      <guid>https://binarymist.io/talk/owaspnzday-2013-talk-whats-our-software-doing-with-all-that-user-input/</guid>
      <description>At OWASP NZ Day: What are we doing with all the characters that get shoved into our applications? Have we considered every potential execution context?</description>
    </item>
    
    <item>
      <title>Workshop - Security Testing with Kim Carter</title>
      <link>https://binarymist.io/talk/anztb-2013-workshop-security-testing-with-kim-carter/</link>
      <pubDate>Mon, 26 Aug 2013 17:30:00 +1200</pubDate>
      
      <guid>https://binarymist.io/talk/anztb-2013-workshop-security-testing-with-kim-carter/</guid>
      <description>At ANZTB: Hands-on insight into security testing. Kim will discuss some of the more common security vulnerabilities being found in today’s software implementations, and will demonstrate ways of testing them.</description>
    </item>
    
    <item>
      <title>Sanitising User Input from Browser part 2</title>
      <link>https://binarymist.io/blog/2012/11/16/sanitising-user-input-from-browser-part-2/</link>
      <pubDate>Fri, 16 Nov 2012 00:00:00 +1300</pubDate>
      
      <guid>https://binarymist.io/blog/2012/11/16/sanitising-user-input-from-browser-part-2/</guid>
      <description>&lt;p&gt;Redirects to legacy blog post.&lt;/p&gt;

&lt;p&gt;Untrusted data (data entered by a user), should always be treated as though it contains attack code. This data should not be sent anywhere without taking the necessary steps to detect and neutralise the malicious code.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Sanitising User Input from Browser part 1</title>
      <link>https://binarymist.io/blog/2012/11/04/sanitising-user-input-from-browser-part-1/</link>
      <pubDate>Sun, 04 Nov 2012 00:00:00 +1300</pubDate>
      
      <guid>https://binarymist.io/blog/2012/11/04/sanitising-user-input-from-browser-part-1/</guid>
      <description>&lt;p&gt;Redirects to legacy blog post.&lt;/p&gt;

&lt;p&gt;I was working on a web based project recently where there was no security thought about when designing, developing it. The following outlines my experience with retrofitting security. It’s my hope that someone will find it useful for their own implementation.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>